{"ast":null,"code":"\"use strict\";\n\nvar _WeakMap = require(\"@babel/runtime-corejs3/core-js-stable/weak-map\");\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\nvar _Object$getOwnPropertyDescriptor = require(\"@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor\");\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/promise\"));\nvar _decode = _interopRequireDefault(require(\"./decode\"));\nvar _encode = _interopRequireDefault(require(\"./encode\"));\nvar _CryptoController = _interopRequireDefault(require(\"./CryptoController\"));\nvar _EventuallyQueue = _interopRequireDefault(require(\"./EventuallyQueue\"));\nvar _IndexedDBStorageController = _interopRequireDefault(require(\"./IndexedDBStorageController\"));\nvar _InstallationController = _interopRequireDefault(require(\"./InstallationController\"));\nvar ParseOp = _interopRequireWildcard(require(\"./ParseOp\"));\nvar _RESTController = _interopRequireDefault(require(\"./RESTController\"));\nvar _ParseACL = _interopRequireDefault(require(\"./ParseACL\"));\nvar Analytics = _interopRequireWildcard(require(\"./Analytics\"));\nvar _AnonymousUtils = _interopRequireDefault(require(\"./AnonymousUtils\"));\nvar Cloud = _interopRequireWildcard(require(\"./Cloud\"));\nvar _ParseCLP = _interopRequireDefault(require(\"./ParseCLP\"));\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\nvar _EventEmitter = _interopRequireDefault(require(\"./EventEmitter\"));\nvar _ParseConfig = _interopRequireDefault(require(\"./ParseConfig\"));\nvar _ParseError = _interopRequireDefault(require(\"./ParseError\"));\nvar _FacebookUtils = _interopRequireDefault(require(\"./FacebookUtils\"));\nvar _ParseFile = _interopRequireDefault(require(\"./ParseFile\"));\nvar Hooks = _interopRequireWildcard(require(\"./ParseHooks\"));\nvar _ParseGeoPoint = _interopRequireDefault(require(\"./ParseGeoPoint\"));\nvar _ParsePolygon = _interopRequireDefault(require(\"./ParsePolygon\"));\nvar _ParseInstallation = _interopRequireDefault(require(\"./ParseInstallation\"));\nvar _LocalDatastore = _interopRequireDefault(require(\"./LocalDatastore\"));\nvar _ParseObject = _interopRequireDefault(require(\"./ParseObject\"));\nvar Push = _interopRequireWildcard(require(\"./Push\"));\nvar _ParseQuery = _interopRequireDefault(require(\"./ParseQuery\"));\nvar _ParseRelation = _interopRequireDefault(require(\"./ParseRelation\"));\nvar _ParseRole = _interopRequireDefault(require(\"./ParseRole\"));\nvar _ParseSchema = _interopRequireDefault(require(\"./ParseSchema\"));\nvar _ParseSession = _interopRequireDefault(require(\"./ParseSession\"));\nvar _Storage = _interopRequireDefault(require(\"./Storage\"));\nvar _ParseUser = _interopRequireDefault(require(\"./ParseUser\"));\nvar _ParseLiveQuery = _interopRequireDefault(require(\"./ParseLiveQuery\"));\nvar _LiveQueryClient = _interopRequireDefault(require(\"./LiveQueryClient\"));\nvar _LocalDatastoreController = _interopRequireDefault(require(\"./LocalDatastoreController\"));\nvar _StorageController = _interopRequireDefault(require(\"./StorageController\"));\nvar _WebSocketController = _interopRequireDefault(require(\"./WebSocketController\"));\nfunction _interopRequireWildcard(e, t) {\n  if (\"function\" == typeof _WeakMap) var r = new _WeakMap(),\n    n = new _WeakMap();\n  return (_interopRequireWildcard = function (e, t) {\n    if (!t && e && e.__esModule) return e;\n    var o,\n      i,\n      f = {\n        __proto__: null,\n        default: e\n      };\n    if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f;\n    if (o = t ? n : r) {\n      if (o.has(e)) return o.get(e);\n      o.set(e, f);\n    }\n    for (const t in e) \"default\" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = _Object$defineProperty) && _Object$getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]);\n    return f;\n  })(e, t);\n}\nconst Parse = {\n  ACL: _ParseACL.default,\n  Analytics,\n  AnonymousUtils: _AnonymousUtils.default,\n  Cloud,\n  CLP: _ParseCLP.default,\n  CoreManager: _CoreManager.default,\n  Config: _ParseConfig.default,\n  Error: _ParseError.default,\n  FacebookUtils: _FacebookUtils.default,\n  File: _ParseFile.default,\n  GeoPoint: _ParseGeoPoint.default,\n  Polygon: _ParsePolygon.default,\n  Installation: _ParseInstallation.default,\n  LocalDatastore: _LocalDatastore.default,\n  Object: _ParseObject.default,\n  Op: {\n    Set: ParseOp.SetOp,\n    Unset: ParseOp.UnsetOp,\n    Increment: ParseOp.IncrementOp,\n    Add: ParseOp.AddOp,\n    Remove: ParseOp.RemoveOp,\n    AddUnique: ParseOp.AddUniqueOp,\n    Relation: ParseOp.RelationOp\n  },\n  Push,\n  Query: _ParseQuery.default,\n  Relation: _ParseRelation.default,\n  Role: _ParseRole.default,\n  Schema: _ParseSchema.default,\n  Session: _ParseSession.default,\n  Storage: _Storage.default,\n  User: _ParseUser.default,\n  LiveQueryClient: _LiveQueryClient.default,\n  IndexedDB: undefined,\n  Hooks: undefined,\n  Parse: undefined,\n  /**\n   * @property {EventuallyQueue} Parse.EventuallyQueue\n   * @static\n   */\n  set EventuallyQueue(queue) {\n    _CoreManager.default.setEventuallyQueue(queue);\n  },\n  get EventuallyQueue() {\n    return _CoreManager.default.getEventuallyQueue();\n  },\n  /**\n   * Call this method first to set up your authentication tokens for Parse.\n   *\n   * @param {string} applicationId Your Parse Application ID.\n   * @param {string} [javaScriptKey] Your Parse JavaScript Key (Not needed for parse-server)\n   * @param {string} [masterKey] Your Parse Master Key. (Node.js only!)\n   * @static\n   */\n  initialize(applicationId, javaScriptKey) {\n    if (\"browser\" === 'browser' && _CoreManager.default.get('IS_NODE') && !process.env.SERVER_RENDERING) {\n      console.log(\"It looks like you're using the browser version of the SDK in a \" + \"node.js environment. You should require('parse/node') instead.\");\n    }\n    Parse._initialize(applicationId, javaScriptKey);\n  },\n  _initialize(applicationId, javaScriptKey, masterKey, maintenanceKey) {\n    _CoreManager.default.set('APPLICATION_ID', applicationId);\n    _CoreManager.default.set('JAVASCRIPT_KEY', javaScriptKey);\n    _CoreManager.default.set('MAINTENANCE_KEY', maintenanceKey);\n    _CoreManager.default.set('MASTER_KEY', masterKey);\n    _CoreManager.default.set('USE_MASTER_KEY', false);\n    _CoreManager.default.setIfNeeded('EventEmitter', _EventEmitter.default);\n    _CoreManager.default.setIfNeeded('LiveQuery', new _ParseLiveQuery.default());\n    _CoreManager.default.setIfNeeded('CryptoController', _CryptoController.default);\n    _CoreManager.default.setIfNeeded('EventuallyQueue', _EventuallyQueue.default);\n    _CoreManager.default.setIfNeeded('InstallationController', _InstallationController.default);\n    _CoreManager.default.setIfNeeded('LocalDatastoreController', _LocalDatastoreController.default);\n    _CoreManager.default.setIfNeeded('StorageController', _StorageController.default);\n    _CoreManager.default.setIfNeeded('WebSocketController', _WebSocketController.default);\n    Parse.IndexedDB = _CoreManager.default.setIfNeeded('IndexedDBStorageController', _IndexedDBStorageController.default);\n  },\n  /**\n   * Call this method to set your AsyncStorage engine\n   * Starting Parse@1.11, the ParseSDK do not provide a React AsyncStorage as the ReactNative module\n   * is not provided at a stable path and changes over versions.\n   *\n   * @param {AsyncStorage} storage a react native async storage.\n   * @static\n   */\n  setAsyncStorage(storage) {\n    _CoreManager.default.setAsyncStorage(storage);\n  },\n  /**\n   * Call this method to set your LocalDatastoreStorage engine\n   * If using React-Native use {@link Parse.setAsyncStorage Parse.setAsyncStorage()}\n   *\n   * @param {LocalDatastoreController} controller a data storage.\n   * @static\n   */\n  setLocalDatastoreController(controller) {\n    _CoreManager.default.setLocalDatastoreController(controller);\n  },\n  /**\n   * Returns information regarding the current server's health\n   *\n   * @returns {Promise}\n   * @static\n   */\n  getServerHealth() {\n    return _CoreManager.default.getRESTController().request('GET', 'health');\n  },\n  /**\n   * @property {string} Parse.applicationId\n   * @static\n   */\n  set applicationId(value) {\n    _CoreManager.default.set('APPLICATION_ID', value);\n  },\n  get applicationId() {\n    return _CoreManager.default.get('APPLICATION_ID');\n  },\n  /**\n   * @property {string} Parse.javaScriptKey\n   * @static\n   */\n  set javaScriptKey(value) {\n    _CoreManager.default.set('JAVASCRIPT_KEY', value);\n  },\n  get javaScriptKey() {\n    return _CoreManager.default.get('JAVASCRIPT_KEY');\n  },\n  /**\n   * @property {string} Parse.masterKey\n   * @static\n   */\n  set masterKey(value) {\n    _CoreManager.default.set('MASTER_KEY', value);\n  },\n  get masterKey() {\n    return _CoreManager.default.get('MASTER_KEY');\n  },\n  /**\n   * @property {string} Parse.maintenanceKey\n   * @static\n   */\n  set maintenanceKey(value) {\n    _CoreManager.default.set('MAINTENANCE_KEY', value);\n  },\n  get maintenanceKey() {\n    return _CoreManager.default.get('MAINTENANCE_KEY');\n  },\n  /**\n   * @property {string} Parse.serverURL\n   * @static\n   */\n  set serverURL(value) {\n    _CoreManager.default.set('SERVER_URL', value);\n  },\n  get serverURL() {\n    return _CoreManager.default.get('SERVER_URL');\n  },\n  /**\n   * @property {ParseLiveQuery} Parse.LiveQuery\n   * @static\n   */\n  set LiveQuery(liveQuery) {\n    _CoreManager.default.setLiveQuery(liveQuery);\n  },\n  get LiveQuery() {\n    return _CoreManager.default.getLiveQuery();\n  },\n  /**\n   * @property {string} Parse.liveQueryServerURL\n   * @static\n   */\n  set liveQueryServerURL(value) {\n    _CoreManager.default.set('LIVEQUERY_SERVER_URL', value);\n  },\n  get liveQueryServerURL() {\n    return _CoreManager.default.get('LIVEQUERY_SERVER_URL');\n  },\n  /**\n   * @property {boolean} Parse.encryptedUser\n   * @static\n   */\n  set encryptedUser(value) {\n    _CoreManager.default.set('ENCRYPTED_USER', value);\n  },\n  get encryptedUser() {\n    return _CoreManager.default.get('ENCRYPTED_USER');\n  },\n  /**\n   * @property {string} Parse.secret\n   * @static\n   */\n  set secret(value) {\n    _CoreManager.default.set('ENCRYPTED_KEY', value);\n  },\n  get secret() {\n    return _CoreManager.default.get('ENCRYPTED_KEY');\n  },\n  /**\n   * @property {boolean} Parse.idempotency\n   * @static\n   */\n  set idempotency(value) {\n    _CoreManager.default.set('IDEMPOTENCY', value);\n  },\n  get idempotency() {\n    return _CoreManager.default.get('IDEMPOTENCY');\n  },\n  /**\n   * @property {boolean} Parse.allowCustomObjectId\n   * @static\n   */\n  set allowCustomObjectId(value) {\n    _CoreManager.default.set('ALLOW_CUSTOM_OBJECT_ID', value);\n  },\n  get allowCustomObjectId() {\n    return _CoreManager.default.get('ALLOW_CUSTOM_OBJECT_ID');\n  },\n  /**\n   * Setting this property to `true` enables enhanced logging for `Parse.Object`\n   * in Node.js environments. Specifically, it will log:\n   *\n   * ```\n   * ParseObject: className: <CLASS_NAME>, id: <OBJECT_ID>\n   * Attributes: <OBJECT_ATTRIBUTES>\n   * ```\n   *\n   * @warning This should not be enabled in production environments as this may\n   * expose sensitive information in server logs.\n   *\n   * @property {boolean} Parse.nodeLogging\n   * @static\n   */\n  set nodeLogging(value) {\n    _CoreManager.default.set('NODE_LOGGING', value);\n  },\n  get nodeLogging() {\n    return _CoreManager.default.get('NODE_LOGGING');\n  },\n  _request() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return _CoreManager.default.getRESTController().request.apply(null, args);\n  },\n  _ajax() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    return _CoreManager.default.getRESTController().ajax.apply(null, args);\n  },\n  // We attempt to match the signatures of the legacy versions of these methods\n  _decode(_, value) {\n    return (0, _decode.default)(value);\n  },\n  _encode(value, _, disallowObjects) {\n    return (0, _encode.default)(value, disallowObjects);\n  },\n  _getInstallationId() {\n    return _CoreManager.default.getInstallationController().currentInstallationId();\n  },\n  /**\n   * Enable pinning in your application.\n   * This must be called after `Parse.initialize` in your application.\n   *\n   * @param [polling] Allow pinging the server /health endpoint. Default true\n   * @param [ms] Milliseconds to ping the server. Default 2000ms\n   * @static\n   */\n  enableLocalDatastore(polling, ms) {\n    if (!this.applicationId) {\n      console.log(\"'enableLocalDataStore' must be called after 'initialize'\");\n      return;\n    }\n    if (!this.LocalDatastore.isEnabled) {\n      this.LocalDatastore.isEnabled = true;\n      if (polling || typeof polling === 'undefined') {\n        _CoreManager.default.getEventuallyQueue().poll(ms || 2000);\n      }\n    }\n  },\n  /**\n   * Flag that indicates whether Local Datastore is enabled.\n   *\n   * @static\n   * @returns {boolean}\n   */\n  isLocalDatastoreEnabled() {\n    return this.LocalDatastore.isEnabled;\n  },\n  /**\n   * Gets all contents from Local Datastore\n   *\n   * <pre>\n   * await Parse.dumpLocalDatastore();\n   * </pre>\n   *\n   * @static\n   * @returns {object}\n   */\n  dumpLocalDatastore() {\n    if (!this.LocalDatastore.isEnabled) {\n      console.log('Parse.enableLocalDatastore() must be called first');\n      return _promise.default.resolve({});\n    } else {\n      return Parse.LocalDatastore._getAllContents();\n    }\n  },\n  /**\n   * Enable the current user encryption.\n   * This must be called before login any user.\n   *\n   * @static\n   */\n  enableEncryptedUser() {\n    this.encryptedUser = true;\n  },\n  /**\n   * Flag that indicates whether Encrypted User is enabled.\n   *\n   * @static\n   * @returns {boolean}\n   */\n  isEncryptedUserEnabled() {\n    return this.encryptedUser;\n  }\n};\n_CoreManager.default.setRESTController(_RESTController.default);\nglobalThis.Parse = Parse;\n\n// For legacy requires, of the form `var Parse = require('parse').Parse`\nParse.Parse = Parse;\nvar _default = exports.default = Parse;","map":{"version":3,"names":["_WeakMap","require","_Object$defineProperty","_Object$getOwnPropertyDescriptor","_interopRequireDefault","exports","value","default","_promise","_decode","_encode","_CryptoController","_EventuallyQueue","_IndexedDBStorageController","_InstallationController","ParseOp","_interopRequireWildcard","_RESTController","_ParseACL","Analytics","_AnonymousUtils","Cloud","_ParseCLP","_CoreManager","_EventEmitter","_ParseConfig","_ParseError","_FacebookUtils","_ParseFile","Hooks","_ParseGeoPoint","_ParsePolygon","_ParseInstallation","_LocalDatastore","_ParseObject","Push","_ParseQuery","_ParseRelation","_ParseRole","_ParseSchema","_ParseSession","_Storage","_ParseUser","_ParseLiveQuery","_LiveQueryClient","_LocalDatastoreController","_StorageController","_WebSocketController","e","t","r","n","__esModule","o","i","f","__proto__","has","get","set","hasOwnProperty","call","Parse","ACL","AnonymousUtils","CLP","CoreManager","Config","Error","FacebookUtils","File","GeoPoint","Polygon","Installation","LocalDatastore","Object","Op","Set","SetOp","Unset","UnsetOp","Increment","IncrementOp","Add","AddOp","Remove","RemoveOp","AddUnique","AddUniqueOp","Relation","RelationOp","Query","Role","Schema","Session","Storage","User","LiveQueryClient","IndexedDB","undefined","EventuallyQueue","queue","setEventuallyQueue","getEventuallyQueue","initialize","applicationId","javaScriptKey","process","env","SERVER_RENDERING","console","log","_initialize","masterKey","maintenanceKey","setIfNeeded","setAsyncStorage","storage","setLocalDatastoreController","controller","getServerHealth","getRESTController","request","serverURL","LiveQuery","liveQuery","setLiveQuery","getLiveQuery","liveQueryServerURL","encryptedUser","secret","idempotency","allowCustomObjectId","nodeLogging","_request","_len","arguments","length","args","Array","_key","apply","_ajax","_len2","_key2","ajax","_","disallowObjects","_getInstallationId","getInstallationController","currentInstallationId","enableLocalDatastore","polling","ms","isEnabled","poll","isLocalDatastoreEnabled","dumpLocalDatastore","resolve","_getAllContents","enableEncryptedUser","isEncryptedUserEnabled","setRESTController","globalThis","_default"],"sources":["C:/Users/chtdu/Documents/WEB DEV/git-repo/react-webpack8/node_modules/parse/lib/browser/Parse.js"],"sourcesContent":["\"use strict\";\n\nvar _WeakMap = require(\"@babel/runtime-corejs3/core-js-stable/weak-map\");\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\nvar _Object$getOwnPropertyDescriptor = require(\"@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor\");\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/promise\"));\nvar _decode = _interopRequireDefault(require(\"./decode\"));\nvar _encode = _interopRequireDefault(require(\"./encode\"));\nvar _CryptoController = _interopRequireDefault(require(\"./CryptoController\"));\nvar _EventuallyQueue = _interopRequireDefault(require(\"./EventuallyQueue\"));\nvar _IndexedDBStorageController = _interopRequireDefault(require(\"./IndexedDBStorageController\"));\nvar _InstallationController = _interopRequireDefault(require(\"./InstallationController\"));\nvar ParseOp = _interopRequireWildcard(require(\"./ParseOp\"));\nvar _RESTController = _interopRequireDefault(require(\"./RESTController\"));\nvar _ParseACL = _interopRequireDefault(require(\"./ParseACL\"));\nvar Analytics = _interopRequireWildcard(require(\"./Analytics\"));\nvar _AnonymousUtils = _interopRequireDefault(require(\"./AnonymousUtils\"));\nvar Cloud = _interopRequireWildcard(require(\"./Cloud\"));\nvar _ParseCLP = _interopRequireDefault(require(\"./ParseCLP\"));\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\nvar _EventEmitter = _interopRequireDefault(require(\"./EventEmitter\"));\nvar _ParseConfig = _interopRequireDefault(require(\"./ParseConfig\"));\nvar _ParseError = _interopRequireDefault(require(\"./ParseError\"));\nvar _FacebookUtils = _interopRequireDefault(require(\"./FacebookUtils\"));\nvar _ParseFile = _interopRequireDefault(require(\"./ParseFile\"));\nvar Hooks = _interopRequireWildcard(require(\"./ParseHooks\"));\nvar _ParseGeoPoint = _interopRequireDefault(require(\"./ParseGeoPoint\"));\nvar _ParsePolygon = _interopRequireDefault(require(\"./ParsePolygon\"));\nvar _ParseInstallation = _interopRequireDefault(require(\"./ParseInstallation\"));\nvar _LocalDatastore = _interopRequireDefault(require(\"./LocalDatastore\"));\nvar _ParseObject = _interopRequireDefault(require(\"./ParseObject\"));\nvar Push = _interopRequireWildcard(require(\"./Push\"));\nvar _ParseQuery = _interopRequireDefault(require(\"./ParseQuery\"));\nvar _ParseRelation = _interopRequireDefault(require(\"./ParseRelation\"));\nvar _ParseRole = _interopRequireDefault(require(\"./ParseRole\"));\nvar _ParseSchema = _interopRequireDefault(require(\"./ParseSchema\"));\nvar _ParseSession = _interopRequireDefault(require(\"./ParseSession\"));\nvar _Storage = _interopRequireDefault(require(\"./Storage\"));\nvar _ParseUser = _interopRequireDefault(require(\"./ParseUser\"));\nvar _ParseLiveQuery = _interopRequireDefault(require(\"./ParseLiveQuery\"));\nvar _LiveQueryClient = _interopRequireDefault(require(\"./LiveQueryClient\"));\nvar _LocalDatastoreController = _interopRequireDefault(require(\"./LocalDatastoreController\"));\nvar _StorageController = _interopRequireDefault(require(\"./StorageController\"));\nvar _WebSocketController = _interopRequireDefault(require(\"./WebSocketController\"));\nfunction _interopRequireWildcard(e, t) {\n  if (\"function\" == typeof _WeakMap) var r = new _WeakMap(),\n    n = new _WeakMap();\n  return (_interopRequireWildcard = function (e, t) {\n    if (!t && e && e.__esModule) return e;\n    var o,\n      i,\n      f = {\n        __proto__: null,\n        default: e\n      };\n    if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f;\n    if (o = t ? n : r) {\n      if (o.has(e)) return o.get(e);\n      o.set(e, f);\n    }\n    for (const t in e) \"default\" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = _Object$defineProperty) && _Object$getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]);\n    return f;\n  })(e, t);\n}\nconst Parse = {\n  ACL: _ParseACL.default,\n  Analytics,\n  AnonymousUtils: _AnonymousUtils.default,\n  Cloud,\n  CLP: _ParseCLP.default,\n  CoreManager: _CoreManager.default,\n  Config: _ParseConfig.default,\n  Error: _ParseError.default,\n  FacebookUtils: _FacebookUtils.default,\n  File: _ParseFile.default,\n  GeoPoint: _ParseGeoPoint.default,\n  Polygon: _ParsePolygon.default,\n  Installation: _ParseInstallation.default,\n  LocalDatastore: _LocalDatastore.default,\n  Object: _ParseObject.default,\n  Op: {\n    Set: ParseOp.SetOp,\n    Unset: ParseOp.UnsetOp,\n    Increment: ParseOp.IncrementOp,\n    Add: ParseOp.AddOp,\n    Remove: ParseOp.RemoveOp,\n    AddUnique: ParseOp.AddUniqueOp,\n    Relation: ParseOp.RelationOp\n  },\n  Push,\n  Query: _ParseQuery.default,\n  Relation: _ParseRelation.default,\n  Role: _ParseRole.default,\n  Schema: _ParseSchema.default,\n  Session: _ParseSession.default,\n  Storage: _Storage.default,\n  User: _ParseUser.default,\n  LiveQueryClient: _LiveQueryClient.default,\n  IndexedDB: undefined,\n  Hooks: undefined,\n  Parse: undefined,\n  /**\n   * @property {EventuallyQueue} Parse.EventuallyQueue\n   * @static\n   */\n  set EventuallyQueue(queue) {\n    _CoreManager.default.setEventuallyQueue(queue);\n  },\n  get EventuallyQueue() {\n    return _CoreManager.default.getEventuallyQueue();\n  },\n  /**\n   * Call this method first to set up your authentication tokens for Parse.\n   *\n   * @param {string} applicationId Your Parse Application ID.\n   * @param {string} [javaScriptKey] Your Parse JavaScript Key (Not needed for parse-server)\n   * @param {string} [masterKey] Your Parse Master Key. (Node.js only!)\n   * @static\n   */\n  initialize(applicationId, javaScriptKey) {\n    if (\"browser\" === 'browser' && _CoreManager.default.get('IS_NODE') && !process.env.SERVER_RENDERING) {\n      console.log(\"It looks like you're using the browser version of the SDK in a \" + \"node.js environment. You should require('parse/node') instead.\");\n    }\n    Parse._initialize(applicationId, javaScriptKey);\n  },\n  _initialize(applicationId, javaScriptKey, masterKey, maintenanceKey) {\n    _CoreManager.default.set('APPLICATION_ID', applicationId);\n    _CoreManager.default.set('JAVASCRIPT_KEY', javaScriptKey);\n    _CoreManager.default.set('MAINTENANCE_KEY', maintenanceKey);\n    _CoreManager.default.set('MASTER_KEY', masterKey);\n    _CoreManager.default.set('USE_MASTER_KEY', false);\n    _CoreManager.default.setIfNeeded('EventEmitter', _EventEmitter.default);\n    _CoreManager.default.setIfNeeded('LiveQuery', new _ParseLiveQuery.default());\n    _CoreManager.default.setIfNeeded('CryptoController', _CryptoController.default);\n    _CoreManager.default.setIfNeeded('EventuallyQueue', _EventuallyQueue.default);\n    _CoreManager.default.setIfNeeded('InstallationController', _InstallationController.default);\n    _CoreManager.default.setIfNeeded('LocalDatastoreController', _LocalDatastoreController.default);\n    _CoreManager.default.setIfNeeded('StorageController', _StorageController.default);\n    _CoreManager.default.setIfNeeded('WebSocketController', _WebSocketController.default);\n    Parse.IndexedDB = _CoreManager.default.setIfNeeded('IndexedDBStorageController', _IndexedDBStorageController.default);\n  },\n  /**\n   * Call this method to set your AsyncStorage engine\n   * Starting Parse@1.11, the ParseSDK do not provide a React AsyncStorage as the ReactNative module\n   * is not provided at a stable path and changes over versions.\n   *\n   * @param {AsyncStorage} storage a react native async storage.\n   * @static\n   */\n  setAsyncStorage(storage) {\n    _CoreManager.default.setAsyncStorage(storage);\n  },\n  /**\n   * Call this method to set your LocalDatastoreStorage engine\n   * If using React-Native use {@link Parse.setAsyncStorage Parse.setAsyncStorage()}\n   *\n   * @param {LocalDatastoreController} controller a data storage.\n   * @static\n   */\n  setLocalDatastoreController(controller) {\n    _CoreManager.default.setLocalDatastoreController(controller);\n  },\n  /**\n   * Returns information regarding the current server's health\n   *\n   * @returns {Promise}\n   * @static\n   */\n  getServerHealth() {\n    return _CoreManager.default.getRESTController().request('GET', 'health');\n  },\n  /**\n   * @property {string} Parse.applicationId\n   * @static\n   */\n  set applicationId(value) {\n    _CoreManager.default.set('APPLICATION_ID', value);\n  },\n  get applicationId() {\n    return _CoreManager.default.get('APPLICATION_ID');\n  },\n  /**\n   * @property {string} Parse.javaScriptKey\n   * @static\n   */\n  set javaScriptKey(value) {\n    _CoreManager.default.set('JAVASCRIPT_KEY', value);\n  },\n  get javaScriptKey() {\n    return _CoreManager.default.get('JAVASCRIPT_KEY');\n  },\n  /**\n   * @property {string} Parse.masterKey\n   * @static\n   */\n  set masterKey(value) {\n    _CoreManager.default.set('MASTER_KEY', value);\n  },\n  get masterKey() {\n    return _CoreManager.default.get('MASTER_KEY');\n  },\n  /**\n   * @property {string} Parse.maintenanceKey\n   * @static\n   */\n  set maintenanceKey(value) {\n    _CoreManager.default.set('MAINTENANCE_KEY', value);\n  },\n  get maintenanceKey() {\n    return _CoreManager.default.get('MAINTENANCE_KEY');\n  },\n  /**\n   * @property {string} Parse.serverURL\n   * @static\n   */\n  set serverURL(value) {\n    _CoreManager.default.set('SERVER_URL', value);\n  },\n  get serverURL() {\n    return _CoreManager.default.get('SERVER_URL');\n  },\n  /**\n   * @property {ParseLiveQuery} Parse.LiveQuery\n   * @static\n   */\n  set LiveQuery(liveQuery) {\n    _CoreManager.default.setLiveQuery(liveQuery);\n  },\n  get LiveQuery() {\n    return _CoreManager.default.getLiveQuery();\n  },\n  /**\n   * @property {string} Parse.liveQueryServerURL\n   * @static\n   */\n  set liveQueryServerURL(value) {\n    _CoreManager.default.set('LIVEQUERY_SERVER_URL', value);\n  },\n  get liveQueryServerURL() {\n    return _CoreManager.default.get('LIVEQUERY_SERVER_URL');\n  },\n  /**\n   * @property {boolean} Parse.encryptedUser\n   * @static\n   */\n  set encryptedUser(value) {\n    _CoreManager.default.set('ENCRYPTED_USER', value);\n  },\n  get encryptedUser() {\n    return _CoreManager.default.get('ENCRYPTED_USER');\n  },\n  /**\n   * @property {string} Parse.secret\n   * @static\n   */\n  set secret(value) {\n    _CoreManager.default.set('ENCRYPTED_KEY', value);\n  },\n  get secret() {\n    return _CoreManager.default.get('ENCRYPTED_KEY');\n  },\n  /**\n   * @property {boolean} Parse.idempotency\n   * @static\n   */\n  set idempotency(value) {\n    _CoreManager.default.set('IDEMPOTENCY', value);\n  },\n  get idempotency() {\n    return _CoreManager.default.get('IDEMPOTENCY');\n  },\n  /**\n   * @property {boolean} Parse.allowCustomObjectId\n   * @static\n   */\n  set allowCustomObjectId(value) {\n    _CoreManager.default.set('ALLOW_CUSTOM_OBJECT_ID', value);\n  },\n  get allowCustomObjectId() {\n    return _CoreManager.default.get('ALLOW_CUSTOM_OBJECT_ID');\n  },\n  /**\n   * Setting this property to `true` enables enhanced logging for `Parse.Object`\n   * in Node.js environments. Specifically, it will log:\n   *\n   * ```\n   * ParseObject: className: <CLASS_NAME>, id: <OBJECT_ID>\n   * Attributes: <OBJECT_ATTRIBUTES>\n   * ```\n   *\n   * @warning This should not be enabled in production environments as this may\n   * expose sensitive information in server logs.\n   *\n   * @property {boolean} Parse.nodeLogging\n   * @static\n   */\n  set nodeLogging(value) {\n    _CoreManager.default.set('NODE_LOGGING', value);\n  },\n  get nodeLogging() {\n    return _CoreManager.default.get('NODE_LOGGING');\n  },\n  _request() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return _CoreManager.default.getRESTController().request.apply(null, args);\n  },\n  _ajax() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    return _CoreManager.default.getRESTController().ajax.apply(null, args);\n  },\n  // We attempt to match the signatures of the legacy versions of these methods\n  _decode(_, value) {\n    return (0, _decode.default)(value);\n  },\n  _encode(value, _, disallowObjects) {\n    return (0, _encode.default)(value, disallowObjects);\n  },\n  _getInstallationId() {\n    return _CoreManager.default.getInstallationController().currentInstallationId();\n  },\n  /**\n   * Enable pinning in your application.\n   * This must be called after `Parse.initialize` in your application.\n   *\n   * @param [polling] Allow pinging the server /health endpoint. Default true\n   * @param [ms] Milliseconds to ping the server. Default 2000ms\n   * @static\n   */\n  enableLocalDatastore(polling, ms) {\n    if (!this.applicationId) {\n      console.log(\"'enableLocalDataStore' must be called after 'initialize'\");\n      return;\n    }\n    if (!this.LocalDatastore.isEnabled) {\n      this.LocalDatastore.isEnabled = true;\n      if (polling || typeof polling === 'undefined') {\n        _CoreManager.default.getEventuallyQueue().poll(ms || 2000);\n      }\n    }\n  },\n  /**\n   * Flag that indicates whether Local Datastore is enabled.\n   *\n   * @static\n   * @returns {boolean}\n   */\n  isLocalDatastoreEnabled() {\n    return this.LocalDatastore.isEnabled;\n  },\n  /**\n   * Gets all contents from Local Datastore\n   *\n   * <pre>\n   * await Parse.dumpLocalDatastore();\n   * </pre>\n   *\n   * @static\n   * @returns {object}\n   */\n  dumpLocalDatastore() {\n    if (!this.LocalDatastore.isEnabled) {\n      console.log('Parse.enableLocalDatastore() must be called first');\n      return _promise.default.resolve({});\n    } else {\n      return Parse.LocalDatastore._getAllContents();\n    }\n  },\n  /**\n   * Enable the current user encryption.\n   * This must be called before login any user.\n   *\n   * @static\n   */\n  enableEncryptedUser() {\n    this.encryptedUser = true;\n  },\n  /**\n   * Flag that indicates whether Encrypted User is enabled.\n   *\n   * @static\n   * @returns {boolean}\n   */\n  isEncryptedUserEnabled() {\n    return this.encryptedUser;\n  }\n};\n_CoreManager.default.setRESTController(_RESTController.default);\nglobalThis.Parse = Parse;\n\n// For legacy requires, of the form `var Parse = require('parse').Parse`\nParse.Parse = Parse;\nvar _default = exports.default = Parse;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}