{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\nvar _find = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/find\"));\nvar _setInterval2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/set-interval\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/toConsumableArray\"));\nvar _findIndex = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/find-index\"));\nvar _splice = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/splice\"));\nvar _stringify = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/json/stringify\"));\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime-corejs3/regenerator\"));\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/asyncToGenerator\"));\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\nvar _ParseObject = _interopRequireDefault(require(\"./ParseObject\"));\nvar _ParseQuery = _interopRequireDefault(require(\"./ParseQuery\"));\nvar _Storage = _interopRequireDefault(require(\"./Storage\"));\n/**\n * https://github.com/francimedia/parse-js-local-storage\n *\n * @flow\n */\n\nvar QUEUE_KEY = 'Parse/Eventually/Queue';\nvar queueCache = [];\nvar dirtyCache = true;\nvar polling = undefined;\n/**\n * Provides utility functions to queue objects that will be\n * saved to the server at a later date.\n *\n * @class Parse.EventuallyQueue\n * @static\n */\n\nvar EventuallyQueue = {\n  /**\n   * Add object to queue with save operation.\n   *\n   * @function save\n   * @name Parse.EventuallyQueue.save\n   * @param {ParseObject} object Parse.Object to be saved eventually\n   * @param {object} [serverOptions] See {@link https://parseplatform.org/Parse-SDK-JS/api/master/Parse.Object.html#save Parse.Object.save} options.\n   * @returns {Promise} A promise that is fulfilled if object is added to queue.\n   * @static\n   * @see Parse.Object#saveEventually\n   */\n  save: function (object\n  /*: ParseObject*/) /*: Promise*/\n  {\n    var serverOptions\n    /*: SaveOptions*/ = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return this.enqueue('save', object, serverOptions);\n  },\n  /**\n   * Add object to queue with save operation.\n   *\n   * @function destroy\n   * @name Parse.EventuallyQueue.destroy\n   * @param {ParseObject} object Parse.Object to be destroyed eventually\n   * @param {object} [serverOptions] See {@link https://parseplatform.org/Parse-SDK-JS/api/master/Parse.Object.html#destroy Parse.Object.destroy} options\n   * @returns {Promise} A promise that is fulfilled if object is added to queue.\n   * @static\n   * @see Parse.Object#destroyEventually\n   */\n  destroy: function (object\n  /*: ParseObject*/) /*: Promise*/\n  {\n    var serverOptions\n    /*: RequestOptions*/ = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return this.enqueue('destroy', object, serverOptions);\n  },\n  /**\n   * Generate unique identifier to avoid duplicates and maintain previous state.\n   *\n   * @param {string} action save / destroy\n   * @param {object} object Parse.Object to be queued\n   * @returns {string}\n   * @static\n   * @ignore\n   */\n  generateQueueId: function (action\n  /*: string*/, object\n  /*: ParseObject*/) /*: string*/\n  {\n    object._getId();\n    var className = object.className,\n      id = object.id,\n      _localId = object._localId;\n    var uniqueId = object.get('hash') || _localId;\n    return [action, className, id, uniqueId].join('_');\n  },\n  /**\n   * Build queue object and add to queue.\n   *\n   * @param {string} action save / destroy\n   * @param {object} object Parse.Object to be queued\n   * @param {object} [serverOptions]\n   * @returns {Promise} A promise that is fulfilled if object is added to queue.\n   * @static\n   * @ignore\n   */\n  enqueue: function (action\n  /*: string*/, object\n  /*: ParseObject*/, serverOptions\n  /*: SaveOptions | RequestOptions*/) /*: Promise*/\n  {\n    var _this = this;\n    return (0, _asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee() {\n      var queueData, queueId, index, prop;\n      return _regenerator.default.wrap(function (_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.getQueue();\n            case 2:\n              queueData = _context.sent;\n              queueId = _this.generateQueueId(action, object);\n              index = _this.queueItemExists(queueData, queueId);\n              if (index > -1) {\n                // Add cached values to new object if they don't exist\n                for (prop in queueData[index].object) {\n                  if (typeof object.get(prop) === 'undefined') {\n                    object.set(prop, queueData[index].object[prop]);\n                  }\n                }\n              } else {\n                index = queueData.length;\n              }\n              queueData[index] = {\n                queueId: queueId,\n                action: action,\n                object: object.toJSON(),\n                serverOptions: serverOptions,\n                id: object.id,\n                className: object.className,\n                hash: object.get('hash'),\n                createdAt: new Date()\n              };\n              return _context.abrupt(\"return\", _this.setQueue(queueData));\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  store: function (data) {\n    return _Storage.default.setItemAsync(QUEUE_KEY, (0, _stringify.default)(data));\n  },\n  load: function () {\n    return _Storage.default.getItemAsync(QUEUE_KEY);\n  },\n  /**\n   * Sets the in-memory queue from local storage and returns.\n   *\n   * @function getQueue\n   * @name Parse.EventuallyQueue.getQueue\n   * @returns {Promise<Array>}\n   * @static\n   */\n  getQueue: function () /*: Promise<Array>*/\n  {\n    var _this2 = this;\n    return (0, _asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee2() {\n      return _regenerator.default.wrap(function (_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!dirtyCache) {\n                _context2.next = 10;\n                break;\n              }\n              _context2.t0 = JSON;\n              _context2.next = 4;\n              return _this2.load();\n            case 4:\n              _context2.t1 = _context2.sent;\n              if (_context2.t1) {\n                _context2.next = 7;\n                break;\n              }\n              _context2.t1 = '[]';\n            case 7:\n              _context2.t2 = _context2.t1;\n              queueCache = _context2.t0.parse.call(_context2.t0, _context2.t2);\n              dirtyCache = false;\n            case 10:\n              return _context2.abrupt(\"return\", queueCache);\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  },\n  /**\n   * Saves the queue to local storage\n   *\n   * @param {Queue} queue Queue containing Parse.Object data.\n   * @returns {Promise} A promise that is fulfilled when queue is stored.\n   * @static\n   * @ignore\n   */\n  setQueue: function (queue\n  /*: Queue*/) /*: Promise<void>*/\n  {\n    queueCache = queue;\n    return this.store(queueCache);\n  },\n  /**\n   * Removes Parse.Object data from queue.\n   *\n   * @param {string} queueId Unique identifier for Parse.Object data.\n   * @returns {Promise} A promise that is fulfilled when queue is stored.\n   * @static\n   * @ignore\n   */\n  remove: function (queueId\n  /*: string*/) /*: Promise<void>*/\n  {\n    var _this3 = this;\n    return (0, _asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee3() {\n      var queueData, index;\n      return _regenerator.default.wrap(function (_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _this3.getQueue();\n            case 2:\n              queueData = _context3.sent;\n              index = _this3.queueItemExists(queueData, queueId);\n              if (!(index > -1)) {\n                _context3.next = 8;\n                break;\n              }\n              (0, _splice.default)(queueData).call(queueData, index, 1);\n              _context3.next = 8;\n              return _this3.setQueue(queueData);\n            case 8:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  },\n  /**\n   * Removes all objects from queue.\n   *\n   * @function clear\n   * @name Parse.EventuallyQueue.clear\n   * @returns {Promise} A promise that is fulfilled when queue is cleared.\n   * @static\n   */\n  clear: function () /*: Promise*/\n  {\n    queueCache = [];\n    return this.store([]);\n  },\n  /**\n   * Return the index of a queueId in the queue. Returns -1 if not found.\n   *\n   * @param {Queue} queue Queue containing Parse.Object data.\n   * @param {string} queueId Unique identifier for Parse.Object data.\n   * @returns {number}\n   * @static\n   * @ignore\n   */\n  queueItemExists: function (queue\n  /*: Queue*/, queueId\n  /*: string*/) /*: number*/\n  {\n    return (0, _findIndex.default)(queue).call(queue, function (data) {\n      return data.queueId === queueId;\n    });\n  },\n  /**\n   * Return the number of objects in the queue.\n   *\n   * @function length\n   * @name Parse.EventuallyQueue.length\n   * @returns {number}\n   * @static\n   */\n  length: function () /*: number*/\n  {\n    var _this4 = this;\n    return (0, _asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee4() {\n      var queueData;\n      return _regenerator.default.wrap(function (_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _this4.getQueue();\n            case 2:\n              queueData = _context4.sent;\n              return _context4.abrupt(\"return\", queueData.length);\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }))();\n  },\n  /**\n   * Sends the queue to the server.\n   *\n   * @function sendQueue\n   * @name Parse.EventuallyQueue.sendQueue\n   * @returns {Promise<boolean>} Returns true if queue was sent successfully.\n   * @static\n   */\n  sendQueue: function () /*: Promise<boolean>*/\n  {\n    var _this5 = this;\n    return (0, _asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee5() {\n      var queue, queueData, i, queueObject, id, hash, className, ObjectType;\n      return _regenerator.default.wrap(function (_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return _this5.getQueue();\n            case 2:\n              queue = _context5.sent;\n              queueData = (0, _toConsumableArray2.default)(queue);\n              if (!(queueData.length === 0)) {\n                _context5.next = 6;\n                break;\n              }\n              return _context5.abrupt(\"return\", false);\n            case 6:\n              i = 0;\n            case 7:\n              if (!(i < queueData.length)) {\n                _context5.next = 26;\n                break;\n              }\n              queueObject = queueData[i];\n              id = queueObject.id, hash = queueObject.hash, className = queueObject.className;\n              ObjectType = _ParseObject.default.extend(className);\n              if (!id) {\n                _context5.next = 16;\n                break;\n              }\n              _context5.next = 14;\n              return _this5.process.byId(ObjectType, queueObject);\n            case 14:\n              _context5.next = 23;\n              break;\n            case 16:\n              if (!hash) {\n                _context5.next = 21;\n                break;\n              }\n              _context5.next = 19;\n              return _this5.process.byHash(ObjectType, queueObject);\n            case 19:\n              _context5.next = 23;\n              break;\n            case 21:\n              _context5.next = 23;\n              return _this5.process.create(ObjectType, queueObject);\n            case 23:\n              i += 1;\n              _context5.next = 7;\n              break;\n            case 26:\n              return _context5.abrupt(\"return\", true);\n            case 27:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }))();\n  },\n  /**\n   * Build queue object and add to queue.\n   *\n   * @param {ParseObject} object Parse.Object to be processed\n   * @param {QueueObject} queueObject Parse.Object data from the queue\n   * @returns {Promise} A promise that is fulfilled when operation is performed.\n   * @static\n   * @ignore\n   */\n  sendQueueCallback: function (object\n  /*: ParseObject*/, queueObject\n  /*: QueueObject*/) /*: Promise<void>*/\n  {\n    var _this6 = this;\n    return (0, _asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee6() {\n      return _regenerator.default.wrap(function (_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              if (object) {\n                _context6.next = 2;\n                break;\n              }\n              return _context6.abrupt(\"return\", _this6.remove(queueObject.queueId));\n            case 2:\n              _context6.t0 = queueObject.action;\n              _context6.next = _context6.t0 === 'save' ? 5 : _context6.t0 === 'destroy' ? 20 : 33;\n              break;\n            case 5:\n              if (!(typeof object.updatedAt !== 'undefined' && object.updatedAt > new Date(queueObject.object.createdAt))) {\n                _context6.next = 7;\n                break;\n              }\n              return _context6.abrupt(\"return\", _this6.remove(queueObject.queueId));\n            case 7:\n              _context6.prev = 7;\n              _context6.next = 10;\n              return object.save(queueObject.object, queueObject.serverOptions);\n            case 10:\n              _context6.next = 12;\n              return _this6.remove(queueObject.queueId);\n            case 12:\n              _context6.next = 19;\n              break;\n            case 14:\n              _context6.prev = 14;\n              _context6.t1 = _context6[\"catch\"](7);\n              if (!(_context6.t1.message !== 'XMLHttpRequest failed: \"Unable to connect to the Parse API\"')) {\n                _context6.next = 19;\n                break;\n              }\n              _context6.next = 19;\n              return _this6.remove(queueObject.queueId);\n            case 19:\n              return _context6.abrupt(\"break\", 33);\n            case 20:\n              _context6.prev = 20;\n              _context6.next = 23;\n              return object.destroy(queueObject.serverOptions);\n            case 23:\n              _context6.next = 25;\n              return _this6.remove(queueObject.queueId);\n            case 25:\n              _context6.next = 32;\n              break;\n            case 27:\n              _context6.prev = 27;\n              _context6.t2 = _context6[\"catch\"](20);\n              if (!(_context6.t2.message !== 'XMLHttpRequest failed: \"Unable to connect to the Parse API\"')) {\n                _context6.next = 32;\n                break;\n              }\n              _context6.next = 32;\n              return _this6.remove(queueObject.queueId);\n            case 32:\n              return _context6.abrupt(\"break\", 33);\n            case 33:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[7, 14], [20, 27]]);\n    }))();\n  },\n  /**\n   * Start polling server for network connection.\n   * Will send queue if connection is established.\n   *\n   * @function poll\n   * @name Parse.EventuallyQueue.poll\n   * @param [ms] Milliseconds to ping the server. Default 2000ms\n   * @static\n   */\n  poll: function () {\n    var _this7 = this;\n    var ms\n    /*: number*/ = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 2000;\n    if (polling) {\n      return;\n    }\n    polling = (0, _setInterval2.default)(function () {\n      var RESTController = _CoreManager.default.getRESTController();\n      RESTController.request('GET', 'health').then(function (_ref) {\n        var status = _ref.status;\n        if (status === 'ok') {\n          _this7.stopPoll();\n          return _this7.sendQueue();\n        }\n      }).catch(function (e) {\n        return e;\n      });\n    }, ms);\n  },\n  /**\n   * Turns off polling.\n   *\n   * @function stopPoll\n   * @name Parse.EventuallyQueue.stopPoll\n   * @static\n   */\n  stopPoll: function () {\n    clearInterval(polling);\n    polling = undefined;\n  },\n  /**\n   * Return true if pinging the server.\n   *\n   * @function isPolling\n   * @name Parse.EventuallyQueue.isPolling\n   * @returns {boolean}\n   * @static\n   */\n  isPolling: function () /*: boolean*/\n  {\n    return !!polling;\n  },\n  _setPolling: function (flag\n  /*: boolean*/) {\n    polling = flag;\n  },\n  process: {\n    create: function (ObjectType, queueObject) {\n      var object = new ObjectType();\n      return EventuallyQueue.sendQueueCallback(object, queueObject);\n    },\n    byId: function (ObjectType, queueObject) {\n      return (0, _asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee7() {\n        var sessionToken, query, results;\n        return _regenerator.default.wrap(function (_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                sessionToken = queueObject.serverOptions.sessionToken;\n                query = new _ParseQuery.default(ObjectType);\n                query.equalTo('objectId', queueObject.id);\n                _context7.next = 5;\n                return (0, _find.default)(query).call(query, {\n                  sessionToken: sessionToken\n                });\n              case 5:\n                results = _context7.sent;\n                return _context7.abrupt(\"return\", EventuallyQueue.sendQueueCallback(results[0], queueObject));\n              case 7:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }))();\n    },\n    byHash: function (ObjectType, queueObject) {\n      return (0, _asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee8() {\n        var sessionToken, query, results;\n        return _regenerator.default.wrap(function (_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                sessionToken = queueObject.serverOptions.sessionToken;\n                query = new _ParseQuery.default(ObjectType);\n                query.equalTo('hash', queueObject.hash);\n                _context8.next = 5;\n                return (0, _find.default)(query).call(query, {\n                  sessionToken: sessionToken\n                });\n              case 5:\n                results = _context8.sent;\n                if (!(results.length > 0)) {\n                  _context8.next = 8;\n                  break;\n                }\n                return _context8.abrupt(\"return\", EventuallyQueue.sendQueueCallback(results[0], queueObject));\n              case 8:\n                return _context8.abrupt(\"return\", EventuallyQueue.process.create(ObjectType, queueObject));\n              case 9:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }))();\n    }\n  }\n};\nmodule.exports = EventuallyQueue;","map":{"version":3,"names":["_interopRequireDefault","require","_find","_setInterval2","_toConsumableArray2","_findIndex","_splice","_stringify","_regenerator","_asyncToGenerator2","_CoreManager","_ParseObject","_ParseQuery","_Storage","QUEUE_KEY","queueCache","dirtyCache","polling","undefined","EventuallyQueue","save","object","serverOptions","arguments","length","enqueue","destroy","generateQueueId","action","_getId","className","id","_localId","uniqueId","get","join","_this","default","mark","_callee","queueData","queueId","index","prop","wrap","_context","prev","next","getQueue","sent","queueItemExists","set","toJSON","hash","createdAt","Date","abrupt","setQueue","stop","store","data","setItemAsync","load","getItemAsync","_this2","_callee2","_context2","t0","JSON","t1","t2","parse","call","queue","remove","_this3","_callee3","_context3","clear","_this4","_callee4","_context4","sendQueue","_this5","_callee5","i","queueObject","ObjectType","_context5","extend","process","byId","byHash","create","sendQueueCallback","_this6","_callee6","_context6","updatedAt","message","poll","_this7","ms","RESTController","getRESTController","request","then","_ref","status","stopPoll","catch","e","clearInterval","isPolling","_setPolling","flag","_callee7","sessionToken","query","results","_context7","equalTo","_callee8","_context8","module","exports"],"sources":["C:/Users/chtdu/Documents/WEB DEV/git-repo/react-webpack8/node_modules/parse/lib/browser/EventuallyQueue.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\nvar _find = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/find\"));\n\nvar _setInterval2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/set-interval\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/toConsumableArray\"));\n\nvar _findIndex = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/find-index\"));\n\nvar _splice = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/splice\"));\n\nvar _stringify = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/json/stringify\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime-corejs3/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/asyncToGenerator\"));\n\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\n\nvar _ParseObject = _interopRequireDefault(require(\"./ParseObject\"));\n\nvar _ParseQuery = _interopRequireDefault(require(\"./ParseQuery\"));\n\nvar _Storage = _interopRequireDefault(require(\"./Storage\"));\n/**\n * https://github.com/francimedia/parse-js-local-storage\n *\n * @flow\n */\n\n\nvar QUEUE_KEY = 'Parse/Eventually/Queue';\nvar queueCache = [];\nvar dirtyCache = true;\nvar polling = undefined;\n/**\n * Provides utility functions to queue objects that will be\n * saved to the server at a later date.\n *\n * @class Parse.EventuallyQueue\n * @static\n */\n\nvar EventuallyQueue = {\n  /**\n   * Add object to queue with save operation.\n   *\n   * @function save\n   * @name Parse.EventuallyQueue.save\n   * @param {ParseObject} object Parse.Object to be saved eventually\n   * @param {object} [serverOptions] See {@link https://parseplatform.org/Parse-SDK-JS/api/master/Parse.Object.html#save Parse.Object.save} options.\n   * @returns {Promise} A promise that is fulfilled if object is added to queue.\n   * @static\n   * @see Parse.Object#saveEventually\n   */\n  save: function (object\n  /*: ParseObject*/\n  )\n  /*: Promise*/\n  {\n    var serverOptions\n    /*: SaveOptions*/\n    = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return this.enqueue('save', object, serverOptions);\n  },\n\n  /**\n   * Add object to queue with save operation.\n   *\n   * @function destroy\n   * @name Parse.EventuallyQueue.destroy\n   * @param {ParseObject} object Parse.Object to be destroyed eventually\n   * @param {object} [serverOptions] See {@link https://parseplatform.org/Parse-SDK-JS/api/master/Parse.Object.html#destroy Parse.Object.destroy} options\n   * @returns {Promise} A promise that is fulfilled if object is added to queue.\n   * @static\n   * @see Parse.Object#destroyEventually\n   */\n  destroy: function (object\n  /*: ParseObject*/\n  )\n  /*: Promise*/\n  {\n    var serverOptions\n    /*: RequestOptions*/\n    = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return this.enqueue('destroy', object, serverOptions);\n  },\n\n  /**\n   * Generate unique identifier to avoid duplicates and maintain previous state.\n   *\n   * @param {string} action save / destroy\n   * @param {object} object Parse.Object to be queued\n   * @returns {string}\n   * @static\n   * @ignore\n   */\n  generateQueueId: function (action\n  /*: string*/\n  , object\n  /*: ParseObject*/\n  )\n  /*: string*/\n  {\n    object._getId();\n\n    var className = object.className,\n        id = object.id,\n        _localId = object._localId;\n\n    var uniqueId = object.get('hash') || _localId;\n\n    return [action, className, id, uniqueId].join('_');\n  },\n\n  /**\n   * Build queue object and add to queue.\n   *\n   * @param {string} action save / destroy\n   * @param {object} object Parse.Object to be queued\n   * @param {object} [serverOptions]\n   * @returns {Promise} A promise that is fulfilled if object is added to queue.\n   * @static\n   * @ignore\n   */\n  enqueue: function (action\n  /*: string*/\n  , object\n  /*: ParseObject*/\n  , serverOptions\n  /*: SaveOptions | RequestOptions*/\n  )\n  /*: Promise*/\n  {\n    var _this = this;\n\n    return (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee() {\n      var queueData, queueId, index, prop;\n      return _regenerator.default.wrap(function (_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.getQueue();\n\n            case 2:\n              queueData = _context.sent;\n              queueId = _this.generateQueueId(action, object);\n              index = _this.queueItemExists(queueData, queueId);\n\n              if (index > -1) {\n                // Add cached values to new object if they don't exist\n                for (prop in queueData[index].object) {\n                  if (typeof object.get(prop) === 'undefined') {\n                    object.set(prop, queueData[index].object[prop]);\n                  }\n                }\n              } else {\n                index = queueData.length;\n              }\n\n              queueData[index] = {\n                queueId: queueId,\n                action: action,\n                object: object.toJSON(),\n                serverOptions: serverOptions,\n                id: object.id,\n                className: object.className,\n                hash: object.get('hash'),\n                createdAt: new Date()\n              };\n              return _context.abrupt(\"return\", _this.setQueue(queueData));\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  store: function (data) {\n    return _Storage.default.setItemAsync(QUEUE_KEY, (0, _stringify.default)(data));\n  },\n  load: function () {\n    return _Storage.default.getItemAsync(QUEUE_KEY);\n  },\n\n  /**\n   * Sets the in-memory queue from local storage and returns.\n   *\n   * @function getQueue\n   * @name Parse.EventuallyQueue.getQueue\n   * @returns {Promise<Array>}\n   * @static\n   */\n  getQueue: function ()\n  /*: Promise<Array>*/\n  {\n    var _this2 = this;\n\n    return (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2() {\n      return _regenerator.default.wrap(function (_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!dirtyCache) {\n                _context2.next = 10;\n                break;\n              }\n\n              _context2.t0 = JSON;\n              _context2.next = 4;\n              return _this2.load();\n\n            case 4:\n              _context2.t1 = _context2.sent;\n\n              if (_context2.t1) {\n                _context2.next = 7;\n                break;\n              }\n\n              _context2.t1 = '[]';\n\n            case 7:\n              _context2.t2 = _context2.t1;\n              queueCache = _context2.t0.parse.call(_context2.t0, _context2.t2);\n              dirtyCache = false;\n\n            case 10:\n              return _context2.abrupt(\"return\", queueCache);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  },\n\n  /**\n   * Saves the queue to local storage\n   *\n   * @param {Queue} queue Queue containing Parse.Object data.\n   * @returns {Promise} A promise that is fulfilled when queue is stored.\n   * @static\n   * @ignore\n   */\n  setQueue: function (queue\n  /*: Queue*/\n  )\n  /*: Promise<void>*/\n  {\n    queueCache = queue;\n    return this.store(queueCache);\n  },\n\n  /**\n   * Removes Parse.Object data from queue.\n   *\n   * @param {string} queueId Unique identifier for Parse.Object data.\n   * @returns {Promise} A promise that is fulfilled when queue is stored.\n   * @static\n   * @ignore\n   */\n  remove: function (queueId\n  /*: string*/\n  )\n  /*: Promise<void>*/\n  {\n    var _this3 = this;\n\n    return (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee3() {\n      var queueData, index;\n      return _regenerator.default.wrap(function (_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _this3.getQueue();\n\n            case 2:\n              queueData = _context3.sent;\n              index = _this3.queueItemExists(queueData, queueId);\n\n              if (!(index > -1)) {\n                _context3.next = 8;\n                break;\n              }\n\n              (0, _splice.default)(queueData).call(queueData, index, 1);\n              _context3.next = 8;\n              return _this3.setQueue(queueData);\n\n            case 8:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  },\n\n  /**\n   * Removes all objects from queue.\n   *\n   * @function clear\n   * @name Parse.EventuallyQueue.clear\n   * @returns {Promise} A promise that is fulfilled when queue is cleared.\n   * @static\n   */\n  clear: function ()\n  /*: Promise*/\n  {\n    queueCache = [];\n    return this.store([]);\n  },\n\n  /**\n   * Return the index of a queueId in the queue. Returns -1 if not found.\n   *\n   * @param {Queue} queue Queue containing Parse.Object data.\n   * @param {string} queueId Unique identifier for Parse.Object data.\n   * @returns {number}\n   * @static\n   * @ignore\n   */\n  queueItemExists: function (queue\n  /*: Queue*/\n  , queueId\n  /*: string*/\n  )\n  /*: number*/\n  {\n    return (0, _findIndex.default)(queue).call(queue, function (data) {\n      return data.queueId === queueId;\n    });\n  },\n\n  /**\n   * Return the number of objects in the queue.\n   *\n   * @function length\n   * @name Parse.EventuallyQueue.length\n   * @returns {number}\n   * @static\n   */\n  length: function ()\n  /*: number*/\n  {\n    var _this4 = this;\n\n    return (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee4() {\n      var queueData;\n      return _regenerator.default.wrap(function (_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _this4.getQueue();\n\n            case 2:\n              queueData = _context4.sent;\n              return _context4.abrupt(\"return\", queueData.length);\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }))();\n  },\n\n  /**\n   * Sends the queue to the server.\n   *\n   * @function sendQueue\n   * @name Parse.EventuallyQueue.sendQueue\n   * @returns {Promise<boolean>} Returns true if queue was sent successfully.\n   * @static\n   */\n  sendQueue: function ()\n  /*: Promise<boolean>*/\n  {\n    var _this5 = this;\n\n    return (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee5() {\n      var queue, queueData, i, queueObject, id, hash, className, ObjectType;\n      return _regenerator.default.wrap(function (_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return _this5.getQueue();\n\n            case 2:\n              queue = _context5.sent;\n              queueData = (0, _toConsumableArray2.default)(queue);\n\n              if (!(queueData.length === 0)) {\n                _context5.next = 6;\n                break;\n              }\n\n              return _context5.abrupt(\"return\", false);\n\n            case 6:\n              i = 0;\n\n            case 7:\n              if (!(i < queueData.length)) {\n                _context5.next = 26;\n                break;\n              }\n\n              queueObject = queueData[i];\n              id = queueObject.id, hash = queueObject.hash, className = queueObject.className;\n              ObjectType = _ParseObject.default.extend(className);\n\n              if (!id) {\n                _context5.next = 16;\n                break;\n              }\n\n              _context5.next = 14;\n              return _this5.process.byId(ObjectType, queueObject);\n\n            case 14:\n              _context5.next = 23;\n              break;\n\n            case 16:\n              if (!hash) {\n                _context5.next = 21;\n                break;\n              }\n\n              _context5.next = 19;\n              return _this5.process.byHash(ObjectType, queueObject);\n\n            case 19:\n              _context5.next = 23;\n              break;\n\n            case 21:\n              _context5.next = 23;\n              return _this5.process.create(ObjectType, queueObject);\n\n            case 23:\n              i += 1;\n              _context5.next = 7;\n              break;\n\n            case 26:\n              return _context5.abrupt(\"return\", true);\n\n            case 27:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }))();\n  },\n\n  /**\n   * Build queue object and add to queue.\n   *\n   * @param {ParseObject} object Parse.Object to be processed\n   * @param {QueueObject} queueObject Parse.Object data from the queue\n   * @returns {Promise} A promise that is fulfilled when operation is performed.\n   * @static\n   * @ignore\n   */\n  sendQueueCallback: function (object\n  /*: ParseObject*/\n  , queueObject\n  /*: QueueObject*/\n  )\n  /*: Promise<void>*/\n  {\n    var _this6 = this;\n\n    return (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee6() {\n      return _regenerator.default.wrap(function (_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              if (object) {\n                _context6.next = 2;\n                break;\n              }\n\n              return _context6.abrupt(\"return\", _this6.remove(queueObject.queueId));\n\n            case 2:\n              _context6.t0 = queueObject.action;\n              _context6.next = _context6.t0 === 'save' ? 5 : _context6.t0 === 'destroy' ? 20 : 33;\n              break;\n\n            case 5:\n              if (!(typeof object.updatedAt !== 'undefined' && object.updatedAt > new Date(queueObject.object.createdAt))) {\n                _context6.next = 7;\n                break;\n              }\n\n              return _context6.abrupt(\"return\", _this6.remove(queueObject.queueId));\n\n            case 7:\n              _context6.prev = 7;\n              _context6.next = 10;\n              return object.save(queueObject.object, queueObject.serverOptions);\n\n            case 10:\n              _context6.next = 12;\n              return _this6.remove(queueObject.queueId);\n\n            case 12:\n              _context6.next = 19;\n              break;\n\n            case 14:\n              _context6.prev = 14;\n              _context6.t1 = _context6[\"catch\"](7);\n\n              if (!(_context6.t1.message !== 'XMLHttpRequest failed: \"Unable to connect to the Parse API\"')) {\n                _context6.next = 19;\n                break;\n              }\n\n              _context6.next = 19;\n              return _this6.remove(queueObject.queueId);\n\n            case 19:\n              return _context6.abrupt(\"break\", 33);\n\n            case 20:\n              _context6.prev = 20;\n              _context6.next = 23;\n              return object.destroy(queueObject.serverOptions);\n\n            case 23:\n              _context6.next = 25;\n              return _this6.remove(queueObject.queueId);\n\n            case 25:\n              _context6.next = 32;\n              break;\n\n            case 27:\n              _context6.prev = 27;\n              _context6.t2 = _context6[\"catch\"](20);\n\n              if (!(_context6.t2.message !== 'XMLHttpRequest failed: \"Unable to connect to the Parse API\"')) {\n                _context6.next = 32;\n                break;\n              }\n\n              _context6.next = 32;\n              return _this6.remove(queueObject.queueId);\n\n            case 32:\n              return _context6.abrupt(\"break\", 33);\n\n            case 33:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[7, 14], [20, 27]]);\n    }))();\n  },\n\n  /**\n   * Start polling server for network connection.\n   * Will send queue if connection is established.\n   *\n   * @function poll\n   * @name Parse.EventuallyQueue.poll\n   * @param [ms] Milliseconds to ping the server. Default 2000ms\n   * @static\n   */\n  poll: function () {\n    var _this7 = this;\n\n    var ms\n    /*: number*/\n    = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 2000;\n\n    if (polling) {\n      return;\n    }\n\n    polling = (0, _setInterval2.default)(function () {\n      var RESTController = _CoreManager.default.getRESTController();\n\n      RESTController.request('GET', 'health').then(function (_ref) {\n        var status = _ref.status;\n\n        if (status === 'ok') {\n          _this7.stopPoll();\n\n          return _this7.sendQueue();\n        }\n      }).catch(function (e) {\n        return e;\n      });\n    }, ms);\n  },\n\n  /**\n   * Turns off polling.\n   *\n   * @function stopPoll\n   * @name Parse.EventuallyQueue.stopPoll\n   * @static\n   */\n  stopPoll: function () {\n    clearInterval(polling);\n    polling = undefined;\n  },\n\n  /**\n   * Return true if pinging the server.\n   *\n   * @function isPolling\n   * @name Parse.EventuallyQueue.isPolling\n   * @returns {boolean}\n   * @static\n   */\n  isPolling: function ()\n  /*: boolean*/\n  {\n    return !!polling;\n  },\n  _setPolling: function (flag\n  /*: boolean*/\n  ) {\n    polling = flag;\n  },\n  process: {\n    create: function (ObjectType, queueObject) {\n      var object = new ObjectType();\n      return EventuallyQueue.sendQueueCallback(object, queueObject);\n    },\n    byId: function (ObjectType, queueObject) {\n      return (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee7() {\n        var sessionToken, query, results;\n        return _regenerator.default.wrap(function (_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                sessionToken = queueObject.serverOptions.sessionToken;\n                query = new _ParseQuery.default(ObjectType);\n                query.equalTo('objectId', queueObject.id);\n                _context7.next = 5;\n                return (0, _find.default)(query).call(query, {\n                  sessionToken: sessionToken\n                });\n\n              case 5:\n                results = _context7.sent;\n                return _context7.abrupt(\"return\", EventuallyQueue.sendQueueCallback(results[0], queueObject));\n\n              case 7:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }))();\n    },\n    byHash: function (ObjectType, queueObject) {\n      return (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee8() {\n        var sessionToken, query, results;\n        return _regenerator.default.wrap(function (_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                sessionToken = queueObject.serverOptions.sessionToken;\n                query = new _ParseQuery.default(ObjectType);\n                query.equalTo('hash', queueObject.hash);\n                _context8.next = 5;\n                return (0, _find.default)(query).call(query, {\n                  sessionToken: sessionToken\n                });\n\n              case 5:\n                results = _context8.sent;\n\n                if (!(results.length > 0)) {\n                  _context8.next = 8;\n                  break;\n                }\n\n                return _context8.abrupt(\"return\", EventuallyQueue.sendQueueCallback(results[0], queueObject));\n\n              case 8:\n                return _context8.abrupt(\"return\", EventuallyQueue.process.create(ObjectType, queueObject));\n\n              case 9:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }))();\n    }\n  }\n};\nmodule.exports = EventuallyQueue;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}