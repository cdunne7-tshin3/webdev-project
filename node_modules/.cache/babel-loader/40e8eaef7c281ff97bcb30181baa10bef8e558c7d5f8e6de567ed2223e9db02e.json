{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nfunction promisifyRequest(request) {\n  return new Promise((resolve, reject) => {\n    // @ts-ignore - file size hacks\n    request.oncomplete = request.onsuccess = () => resolve(request.result);\n    // @ts-ignore - file size hacks\n    request.onabort = request.onerror = () => reject(request.error);\n  });\n}\nfunction createStore(dbName, storeName) {\n  const request = indexedDB.open(dbName);\n  request.onupgradeneeded = () => request.result.createObjectStore(storeName);\n  const dbp = promisifyRequest(request);\n  return (txMode, callback) => dbp.then(db => callback(db.transaction(storeName, txMode).objectStore(storeName)));\n}\nlet defaultGetStoreFunc;\nfunction defaultGetStore() {\n  if (!defaultGetStoreFunc) {\n    defaultGetStoreFunc = createStore('keyval-store', 'keyval');\n  }\n  return defaultGetStoreFunc;\n}\n/**\n * Get a value by its key.\n *\n * @param key\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction get(key, customStore = defaultGetStore()) {\n  return customStore('readonly', store => promisifyRequest(store.get(key)));\n}\n/**\n * Set a value with a key.\n *\n * @param key\n * @param value\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction set(key, value, customStore = defaultGetStore()) {\n  return customStore('readwrite', store => {\n    store.put(value, key);\n    return promisifyRequest(store.transaction);\n  });\n}\n/**\n * Set multiple values at once. This is faster than calling set() multiple times.\n * It's also atomic – if one of the pairs can't be added, none will be added.\n *\n * @param entries Array of entries, where each entry is an array of `[key, value]`.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction setMany(entries, customStore = defaultGetStore()) {\n  return customStore('readwrite', store => {\n    entries.forEach(entry => store.put(entry[1], entry[0]));\n    return promisifyRequest(store.transaction);\n  });\n}\n/**\n * Get multiple values by their keys\n *\n * @param keys\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction getMany(keys, customStore = defaultGetStore()) {\n  return customStore('readonly', store => Promise.all(keys.map(key => promisifyRequest(store.get(key)))));\n}\n/**\n * Update a value. This lets you see the old value and update it as an atomic operation.\n *\n * @param key\n * @param updater A callback that takes the old value and returns a new value.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction update(key, updater, customStore = defaultGetStore()) {\n  return customStore('readwrite', store =>\n  // Need to create the promise manually.\n  // If I try to chain promises, the transaction closes in browsers\n  // that use a promise polyfill (IE10/11).\n  new Promise((resolve, reject) => {\n    store.get(key).onsuccess = function () {\n      try {\n        store.put(updater(this.result), key);\n        resolve(promisifyRequest(store.transaction));\n      } catch (err) {\n        reject(err);\n      }\n    };\n  }));\n}\n/**\n * Delete a particular key from the store.\n *\n * @param key\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction del(key, customStore = defaultGetStore()) {\n  return customStore('readwrite', store => {\n    store.delete(key);\n    return promisifyRequest(store.transaction);\n  });\n}\n/**\n * Clear all values in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction clear(customStore = defaultGetStore()) {\n  return customStore('readwrite', store => {\n    store.clear();\n    return promisifyRequest(store.transaction);\n  });\n}\nfunction eachCursor(customStore, callback) {\n  return customStore('readonly', store => {\n    // This would be store.getAllKeys(), but it isn't supported by Edge or Safari.\n    // And openKeyCursor isn't supported by Safari.\n    store.openCursor().onsuccess = function () {\n      if (!this.result) return;\n      callback(this.result);\n      this.result.continue();\n    };\n    return promisifyRequest(store.transaction);\n  });\n}\n/**\n * Get all keys in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction keys(customStore = defaultGetStore()) {\n  const items = [];\n  return eachCursor(customStore, cursor => items.push(cursor.key)).then(() => items);\n}\n/**\n * Get all values in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction values(customStore = defaultGetStore()) {\n  const items = [];\n  return eachCursor(customStore, cursor => items.push(cursor.value)).then(() => items);\n}\n/**\n * Get all entries in the store. Each entry is an array of `[key, value]`.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction entries(customStore = defaultGetStore()) {\n  const items = [];\n  return eachCursor(customStore, cursor => items.push([cursor.key, cursor.value])).then(() => items);\n}\nexports.clear = clear;\nexports.createStore = createStore;\nexports.del = del;\nexports.entries = entries;\nexports.get = get;\nexports.getMany = getMany;\nexports.keys = keys;\nexports.promisifyRequest = promisifyRequest;\nexports.set = set;\nexports.setMany = setMany;\nexports.update = update;\nexports.values = values;","map":{"version":3,"names":["Object","defineProperty","exports","value","promisifyRequest","request","Promise","resolve","reject","oncomplete","onsuccess","result","onabort","onerror","error","createStore","dbName","storeName","indexedDB","open","onupgradeneeded","createObjectStore","dbp","txMode","callback","then","db","transaction","objectStore","defaultGetStoreFunc","defaultGetStore","get","key","customStore","store","set","put","setMany","entries","forEach","entry","getMany","keys","all","map","update","updater","err","del","delete","clear","eachCursor","openCursor","continue","items","cursor","push","values"],"sources":["C:/Users/chtdu/Documents/WEB DEV/git-repo/react-webpack8/node_modules/idb-keyval/dist/cjs/index.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction promisifyRequest(request) {\n    return new Promise((resolve, reject) => {\n        // @ts-ignore - file size hacks\n        request.oncomplete = request.onsuccess = () => resolve(request.result);\n        // @ts-ignore - file size hacks\n        request.onabort = request.onerror = () => reject(request.error);\n    });\n}\nfunction createStore(dbName, storeName) {\n    const request = indexedDB.open(dbName);\n    request.onupgradeneeded = () => request.result.createObjectStore(storeName);\n    const dbp = promisifyRequest(request);\n    return (txMode, callback) => dbp.then((db) => callback(db.transaction(storeName, txMode).objectStore(storeName)));\n}\nlet defaultGetStoreFunc;\nfunction defaultGetStore() {\n    if (!defaultGetStoreFunc) {\n        defaultGetStoreFunc = createStore('keyval-store', 'keyval');\n    }\n    return defaultGetStoreFunc;\n}\n/**\n * Get a value by its key.\n *\n * @param key\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction get(key, customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => promisifyRequest(store.get(key)));\n}\n/**\n * Set a value with a key.\n *\n * @param key\n * @param value\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction set(key, value, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        store.put(value, key);\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Set multiple values at once. This is faster than calling set() multiple times.\n * It's also atomic – if one of the pairs can't be added, none will be added.\n *\n * @param entries Array of entries, where each entry is an array of `[key, value]`.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction setMany(entries, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        entries.forEach((entry) => store.put(entry[1], entry[0]));\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Get multiple values by their keys\n *\n * @param keys\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction getMany(keys, customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => Promise.all(keys.map((key) => promisifyRequest(store.get(key)))));\n}\n/**\n * Update a value. This lets you see the old value and update it as an atomic operation.\n *\n * @param key\n * @param updater A callback that takes the old value and returns a new value.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction update(key, updater, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => \n    // Need to create the promise manually.\n    // If I try to chain promises, the transaction closes in browsers\n    // that use a promise polyfill (IE10/11).\n    new Promise((resolve, reject) => {\n        store.get(key).onsuccess = function () {\n            try {\n                store.put(updater(this.result), key);\n                resolve(promisifyRequest(store.transaction));\n            }\n            catch (err) {\n                reject(err);\n            }\n        };\n    }));\n}\n/**\n * Delete a particular key from the store.\n *\n * @param key\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction del(key, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        store.delete(key);\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Clear all values in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction clear(customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        store.clear();\n        return promisifyRequest(store.transaction);\n    });\n}\nfunction eachCursor(customStore, callback) {\n    return customStore('readonly', (store) => {\n        // This would be store.getAllKeys(), but it isn't supported by Edge or Safari.\n        // And openKeyCursor isn't supported by Safari.\n        store.openCursor().onsuccess = function () {\n            if (!this.result)\n                return;\n            callback(this.result);\n            this.result.continue();\n        };\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Get all keys in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction keys(customStore = defaultGetStore()) {\n    const items = [];\n    return eachCursor(customStore, (cursor) => items.push(cursor.key)).then(() => items);\n}\n/**\n * Get all values in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction values(customStore = defaultGetStore()) {\n    const items = [];\n    return eachCursor(customStore, (cursor) => items.push(cursor.value)).then(() => items);\n}\n/**\n * Get all entries in the store. Each entry is an array of `[key, value]`.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction entries(customStore = defaultGetStore()) {\n    const items = [];\n    return eachCursor(customStore, (cursor) => items.push([cursor.key, cursor.value])).then(() => items);\n}\n\nexports.clear = clear;\nexports.createStore = createStore;\nexports.del = del;\nexports.entries = entries;\nexports.get = get;\nexports.getMany = getMany;\nexports.keys = keys;\nexports.promisifyRequest = promisifyRequest;\nexports.set = set;\nexports.setMany = setMany;\nexports.update = update;\nexports.values = values;\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAE7D,SAASC,gBAAgBA,CAACC,OAAO,EAAE;EAC/B,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACpC;IACAH,OAAO,CAACI,UAAU,GAAGJ,OAAO,CAACK,SAAS,GAAG,MAAMH,OAAO,CAACF,OAAO,CAACM,MAAM,CAAC;IACtE;IACAN,OAAO,CAACO,OAAO,GAAGP,OAAO,CAACQ,OAAO,GAAG,MAAML,MAAM,CAACH,OAAO,CAACS,KAAK,CAAC;EACnE,CAAC,CAAC;AACN;AACA,SAASC,WAAWA,CAACC,MAAM,EAAEC,SAAS,EAAE;EACpC,MAAMZ,OAAO,GAAGa,SAAS,CAACC,IAAI,CAACH,MAAM,CAAC;EACtCX,OAAO,CAACe,eAAe,GAAG,MAAMf,OAAO,CAACM,MAAM,CAACU,iBAAiB,CAACJ,SAAS,CAAC;EAC3E,MAAMK,GAAG,GAAGlB,gBAAgB,CAACC,OAAO,CAAC;EACrC,OAAO,CAACkB,MAAM,EAAEC,QAAQ,KAAKF,GAAG,CAACG,IAAI,CAAEC,EAAE,IAAKF,QAAQ,CAACE,EAAE,CAACC,WAAW,CAACV,SAAS,EAAEM,MAAM,CAAC,CAACK,WAAW,CAACX,SAAS,CAAC,CAAC,CAAC;AACrH;AACA,IAAIY,mBAAmB;AACvB,SAASC,eAAeA,CAAA,EAAG;EACvB,IAAI,CAACD,mBAAmB,EAAE;IACtBA,mBAAmB,GAAGd,WAAW,CAAC,cAAc,EAAE,QAAQ,CAAC;EAC/D;EACA,OAAOc,mBAAmB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASE,GAAGA,CAACC,GAAG,EAAEC,WAAW,GAAGH,eAAe,CAAC,CAAC,EAAE;EAC/C,OAAOG,WAAW,CAAC,UAAU,EAAGC,KAAK,IAAK9B,gBAAgB,CAAC8B,KAAK,CAACH,GAAG,CAACC,GAAG,CAAC,CAAC,CAAC;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASG,GAAGA,CAACH,GAAG,EAAE7B,KAAK,EAAE8B,WAAW,GAAGH,eAAe,CAAC,CAAC,EAAE;EACtD,OAAOG,WAAW,CAAC,WAAW,EAAGC,KAAK,IAAK;IACvCA,KAAK,CAACE,GAAG,CAACjC,KAAK,EAAE6B,GAAG,CAAC;IACrB,OAAO5B,gBAAgB,CAAC8B,KAAK,CAACP,WAAW,CAAC;EAC9C,CAAC,CAAC;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASU,OAAOA,CAACC,OAAO,EAAEL,WAAW,GAAGH,eAAe,CAAC,CAAC,EAAE;EACvD,OAAOG,WAAW,CAAC,WAAW,EAAGC,KAAK,IAAK;IACvCI,OAAO,CAACC,OAAO,CAAEC,KAAK,IAAKN,KAAK,CAACE,GAAG,CAACI,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACzD,OAAOpC,gBAAgB,CAAC8B,KAAK,CAACP,WAAW,CAAC;EAC9C,CAAC,CAAC;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASc,OAAOA,CAACC,IAAI,EAAET,WAAW,GAAGH,eAAe,CAAC,CAAC,EAAE;EACpD,OAAOG,WAAW,CAAC,UAAU,EAAGC,KAAK,IAAK5B,OAAO,CAACqC,GAAG,CAACD,IAAI,CAACE,GAAG,CAAEZ,GAAG,IAAK5B,gBAAgB,CAAC8B,KAAK,CAACH,GAAG,CAACC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASa,MAAMA,CAACb,GAAG,EAAEc,OAAO,EAAEb,WAAW,GAAGH,eAAe,CAAC,CAAC,EAAE;EAC3D,OAAOG,WAAW,CAAC,WAAW,EAAGC,KAAK;EACtC;EACA;EACA;EACA,IAAI5B,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IAC7B0B,KAAK,CAACH,GAAG,CAACC,GAAG,CAAC,CAACtB,SAAS,GAAG,YAAY;MACnC,IAAI;QACAwB,KAAK,CAACE,GAAG,CAACU,OAAO,CAAC,IAAI,CAACnC,MAAM,CAAC,EAAEqB,GAAG,CAAC;QACpCzB,OAAO,CAACH,gBAAgB,CAAC8B,KAAK,CAACP,WAAW,CAAC,CAAC;MAChD,CAAC,CACD,OAAOoB,GAAG,EAAE;QACRvC,MAAM,CAACuC,GAAG,CAAC;MACf;IACJ,CAAC;EACL,CAAC,CAAC,CAAC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,GAAGA,CAAChB,GAAG,EAAEC,WAAW,GAAGH,eAAe,CAAC,CAAC,EAAE;EAC/C,OAAOG,WAAW,CAAC,WAAW,EAAGC,KAAK,IAAK;IACvCA,KAAK,CAACe,MAAM,CAACjB,GAAG,CAAC;IACjB,OAAO5B,gBAAgB,CAAC8B,KAAK,CAACP,WAAW,CAAC;EAC9C,CAAC,CAAC;AACN;AACA;AACA;AACA;AACA;AACA;AACA,SAASuB,KAAKA,CAACjB,WAAW,GAAGH,eAAe,CAAC,CAAC,EAAE;EAC5C,OAAOG,WAAW,CAAC,WAAW,EAAGC,KAAK,IAAK;IACvCA,KAAK,CAACgB,KAAK,CAAC,CAAC;IACb,OAAO9C,gBAAgB,CAAC8B,KAAK,CAACP,WAAW,CAAC;EAC9C,CAAC,CAAC;AACN;AACA,SAASwB,UAAUA,CAAClB,WAAW,EAAET,QAAQ,EAAE;EACvC,OAAOS,WAAW,CAAC,UAAU,EAAGC,KAAK,IAAK;IACtC;IACA;IACAA,KAAK,CAACkB,UAAU,CAAC,CAAC,CAAC1C,SAAS,GAAG,YAAY;MACvC,IAAI,CAAC,IAAI,CAACC,MAAM,EACZ;MACJa,QAAQ,CAAC,IAAI,CAACb,MAAM,CAAC;MACrB,IAAI,CAACA,MAAM,CAAC0C,QAAQ,CAAC,CAAC;IAC1B,CAAC;IACD,OAAOjD,gBAAgB,CAAC8B,KAAK,CAACP,WAAW,CAAC;EAC9C,CAAC,CAAC;AACN;AACA;AACA;AACA;AACA;AACA;AACA,SAASe,IAAIA,CAACT,WAAW,GAAGH,eAAe,CAAC,CAAC,EAAE;EAC3C,MAAMwB,KAAK,GAAG,EAAE;EAChB,OAAOH,UAAU,CAAClB,WAAW,EAAGsB,MAAM,IAAKD,KAAK,CAACE,IAAI,CAACD,MAAM,CAACvB,GAAG,CAAC,CAAC,CAACP,IAAI,CAAC,MAAM6B,KAAK,CAAC;AACxF;AACA;AACA;AACA;AACA;AACA;AACA,SAASG,MAAMA,CAACxB,WAAW,GAAGH,eAAe,CAAC,CAAC,EAAE;EAC7C,MAAMwB,KAAK,GAAG,EAAE;EAChB,OAAOH,UAAU,CAAClB,WAAW,EAAGsB,MAAM,IAAKD,KAAK,CAACE,IAAI,CAACD,MAAM,CAACpD,KAAK,CAAC,CAAC,CAACsB,IAAI,CAAC,MAAM6B,KAAK,CAAC;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA,SAAShB,OAAOA,CAACL,WAAW,GAAGH,eAAe,CAAC,CAAC,EAAE;EAC9C,MAAMwB,KAAK,GAAG,EAAE;EAChB,OAAOH,UAAU,CAAClB,WAAW,EAAGsB,MAAM,IAAKD,KAAK,CAACE,IAAI,CAAC,CAACD,MAAM,CAACvB,GAAG,EAAEuB,MAAM,CAACpD,KAAK,CAAC,CAAC,CAAC,CAACsB,IAAI,CAAC,MAAM6B,KAAK,CAAC;AACxG;AAEApD,OAAO,CAACgD,KAAK,GAAGA,KAAK;AACrBhD,OAAO,CAACa,WAAW,GAAGA,WAAW;AACjCb,OAAO,CAAC8C,GAAG,GAAGA,GAAG;AACjB9C,OAAO,CAACoC,OAAO,GAAGA,OAAO;AACzBpC,OAAO,CAAC6B,GAAG,GAAGA,GAAG;AACjB7B,OAAO,CAACuC,OAAO,GAAGA,OAAO;AACzBvC,OAAO,CAACwC,IAAI,GAAGA,IAAI;AACnBxC,OAAO,CAACE,gBAAgB,GAAGA,gBAAgB;AAC3CF,OAAO,CAACiC,GAAG,GAAGA,GAAG;AACjBjC,OAAO,CAACmC,OAAO,GAAGA,OAAO;AACzBnC,OAAO,CAAC2C,MAAM,GAAGA,MAAM;AACvB3C,OAAO,CAACuD,MAAM,GAAGA,MAAM","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}