{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chtdu\\\\Documents\\\\WEB DEV\\\\git-repo\\\\react-webpack8\\\\src\\\\Components\\\\StudentMain.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { getAllStudents, getStudentsByClass, createStudent } from \"../Common/StudentService\";\nimport { getAllClasses } from \"../Common/ClassService\";\nimport StudentList from \"./StudentList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentMain = () => {\n  _s();\n  const [searchParams] = useSearchParams();\n  const classId = searchParams.get(\"classId\");\n  const [students, setStudents] = useState([]);\n  const [classes, setClasses] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetchData();\n  }, [classId]);\n  const fetchData = async () => {\n    setLoading(true);\n    try {\n      const classResults = await getAllClasses();\n      setClasses(classResults || []);\n      let studentResults;\n      if (classId) {\n        studentResults = await getStudentsByClass(classId);\n      } else {\n        studentResults = await getAllStudents();\n      }\n      setStudents(studentResults || []);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleCreateStudent = async (first, last, email, selectedClassId) => {\n    try {\n      await createStudent(first, last, email, selectedClassId);\n      await fetchData();\n    } catch (error) {\n      console.error(\"Error creating student:\", error);\n      alert(\"Failed to create student\");\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: \"20px\"\n      },\n      children: \"Loading students...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(StudentList, {\n    students: students,\n    classes: classes,\n    classId: classId,\n    onCreateStudent: handleCreateStudent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentMain, \"uZKCQe69ryedApEMPbvzQEZIh7M=\", false, function () {\n  return [useSearchParams];\n});\n_c = StudentMain;\nexport default StudentMain;\nvar _c;\n$RefreshReg$(_c, \"StudentMain\");","map":{"version":3,"names":["React","useState","useEffect","useSearchParams","getAllStudents","getStudentsByClass","createStudent","getAllClasses","StudentList","jsxDEV","_jsxDEV","StudentMain","_s","searchParams","classId","get","students","setStudents","classes","setClasses","loading","setLoading","fetchData","classResults","studentResults","error","console","handleCreateStudent","first","last","email","selectedClassId","alert","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onCreateStudent","_c","$RefreshReg$"],"sources":["C:/Users/chtdu/Documents/WEB DEV/git-repo/react-webpack8/src/Components/StudentMain.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport {\r\n  getAllStudents,\r\n  getStudentsByClass,\r\n  createStudent,\r\n} from \"../Common/StudentService\";\r\nimport { getAllClasses } from \"../Common/ClassService\";\r\nimport StudentList from \"./StudentList\";\r\n\r\nconst StudentMain = () => {\r\n  const [searchParams] = useSearchParams();\r\n  const classId = searchParams.get(\"classId\");\r\n\r\n  const [students, setStudents] = useState([]);\r\n  const [classes, setClasses] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [classId]);\r\n\r\n  const fetchData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const classResults = await getAllClasses();\r\n      setClasses(classResults || []);\r\n\r\n      let studentResults;\r\n      if (classId) {\r\n        studentResults = await getStudentsByClass(classId);\r\n      } else {\r\n        studentResults = await getAllStudents();\r\n      }\r\n      setStudents(studentResults || []);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCreateStudent = async (first, last, email, selectedClassId) => {\r\n    try {\r\n      await createStudent(first, last, email, selectedClassId);\r\n      await fetchData();\r\n    } catch (error) {\r\n      console.error(\"Error creating student:\", error);\r\n      alert(\"Failed to create student\");\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div style={{ padding: \"20px\" }}>Loading students...</div>;\r\n  }\r\n\r\n  return (\r\n    <StudentList\r\n      students={students}\r\n      classes={classes}\r\n      classId={classId}\r\n      onCreateStudent={handleCreateStudent}\r\n    />\r\n  );\r\n};\r\n\r\nexport default StudentMain;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,eAAe,QAAQ,kBAAkB;AAClD,SACEC,cAAc,EACdC,kBAAkB,EAClBC,aAAa,QACR,0BAA0B;AACjC,SAASC,aAAa,QAAQ,wBAAwB;AACtD,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,YAAY,CAAC,GAAGV,eAAe,CAAC,CAAC;EACxC,MAAMW,OAAO,GAAGD,YAAY,CAACE,GAAG,CAAC,SAAS,CAAC;EAE3C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACdoB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACR,OAAO,CAAC,CAAC;EAEb,MAAMQ,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5BD,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAME,YAAY,GAAG,MAAMhB,aAAa,CAAC,CAAC;MAC1CY,UAAU,CAACI,YAAY,IAAI,EAAE,CAAC;MAE9B,IAAIC,cAAc;MAClB,IAAIV,OAAO,EAAE;QACXU,cAAc,GAAG,MAAMnB,kBAAkB,CAACS,OAAO,CAAC;MACpD,CAAC,MAAM;QACLU,cAAc,GAAG,MAAMpB,cAAc,CAAC,CAAC;MACzC;MACAa,WAAW,CAACO,cAAc,IAAI,EAAE,CAAC;IACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,SAAS;MACRJ,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMM,mBAAmB,GAAG,MAAAA,CAAOC,KAAK,EAAEC,IAAI,EAAEC,KAAK,EAAEC,eAAe,KAAK;IACzE,IAAI;MACF,MAAMzB,aAAa,CAACsB,KAAK,EAAEC,IAAI,EAAEC,KAAK,EAAEC,eAAe,CAAC;MACxD,MAAMT,SAAS,CAAC,CAAC;IACnB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/CO,KAAK,CAAC,0BAA0B,CAAC;IACnC;EACF,CAAC;EAED,IAAIZ,OAAO,EAAE;IACX,oBAAOV,OAAA;MAAKuB,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAO,CAAE;MAAAC,QAAA,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACnE;EAEA,oBACE7B,OAAA,CAACF,WAAW;IACVQ,QAAQ,EAAEA,QAAS;IACnBE,OAAO,EAAEA,OAAQ;IACjBJ,OAAO,EAAEA,OAAQ;IACjB0B,eAAe,EAAEb;EAAoB;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEN,CAAC;AAAC3B,EAAA,CAtDID,WAAW;EAAA,QACQR,eAAe;AAAA;AAAAsC,EAAA,GADlC9B,WAAW;AAwDjB,eAAeA,WAAW;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}