{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\nvar _Object$defineProperties = require(\"@babel/runtime-corejs3/core-js-stable/object/define-properties\");\nvar _Object$getOwnPropertyDescriptors = require(\"@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptors\");\nvar _forEachInstanceProperty2 = require(\"@babel/runtime-corejs3/core-js-stable/instance/for-each\");\nvar _Object$getOwnPropertyDescriptor = require(\"@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor\");\nvar _filterInstanceProperty = require(\"@babel/runtime-corejs3/core-js-stable/instance/filter\");\nvar _Object$getOwnPropertySymbols = require(\"@babel/runtime-corejs3/core-js-stable/object/get-own-property-symbols\");\nvar _Object$keys2 = require(\"@babel/runtime-corejs3/core-js-stable/object/keys\");\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/slicedToArray\"));\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/promise\"));\nvar _keys = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/object/keys\"));\nvar _forEach = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/for-each\"));\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/typeof\"));\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime-corejs3/regenerator\"));\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/asyncToGenerator\"));\nvar _slice = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/slice\"));\nvar _indexOf = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/index-of\"));\nvar _isArray = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/array/is-array\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/createClass\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/defineProperty\"));\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\nfunction ownKeys(object, enumerableOnly) {\n  var keys = _Object$keys2(object);\n  if (_Object$getOwnPropertySymbols) {\n    var symbols = _Object$getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) {\n      return _Object$getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      var _context5;\n      _forEachInstanceProperty2(_context5 = ownKeys(Object(source), true)).call(_context5, function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (_Object$getOwnPropertyDescriptors) {\n      _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source));\n    } else {\n      var _context6;\n      _forEachInstanceProperty2(_context6 = ownKeys(Object(source))).call(_context6, function (key) {\n        _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nvar ParseError = require('./ParseError').default;\nvar XHR = null;\nif (typeof XMLHttpRequest !== 'undefined') {\n  XHR = XMLHttpRequest;\n}\n\n/*:: type Base64 = { base64: string };*/\n\n/*:: type Uri = { uri: string };*/\n\n/*:: type FileData = Array<number> | Base64 | Blob | Uri;*/\n\n/*:: export type FileSource =\n  | {\n      format: 'file',\n      file: Blob,\n      type: string,\n    }\n  | {\n      format: 'base64',\n      base64: string,\n      type: string,\n    }\n  | {\n      format: 'uri',\n      uri: string,\n      type: string,\n    };*/\nvar dataUriRegexp = /^data:([a-zA-Z]+\\/[-a-zA-Z0-9+.]+)(;charset=[a-zA-Z0-9\\-\\/]*)?;base64,/;\nfunction b64Digit(number\n/*: number*/) /*: string*/\n{\n  if (number < 26) {\n    return String.fromCharCode(65 + number);\n  }\n  if (number < 52) {\n    return String.fromCharCode(97 + (number - 26));\n  }\n  if (number < 62) {\n    return String.fromCharCode(48 + (number - 52));\n  }\n  if (number === 62) {\n    return '+';\n  }\n  if (number === 63) {\n    return '/';\n  }\n  throw new TypeError('Tried to encode large digit ' + number + ' in base64.');\n}\n/**\n * A Parse.File is a local representation of a file that is saved to the Parse\n * cloud.\n *\n * @alias Parse.File\n */\n\nvar ParseFile = /*#__PURE__*/function () {\n  /**\n   * @param name {String} The file's name. This will be prefixed by a unique\n   *     value once the file has finished saving. The file name must begin with\n   *     an alphanumeric character, and consist of alphanumeric characters,\n   *     periods, spaces, underscores, or dashes.\n   * @param data {Array} The data for the file, as either:\n   *     1. an Array of byte value Numbers, or\n   *     2. an Object like { base64: \"...\" } with a base64-encoded String.\n   *     3. an Object like { uri: \"...\" } with a uri String.\n   *     4. a File object selected with a file upload control. (3) only works\n   *        in Firefox 3.6+, Safari 6.0.2+, Chrome 7+, and IE 10+.\n   *        For example:\n   * <pre>\n   * var fileUploadControl = $(\"#profilePhotoFileUpload\")[0];\n   * if (fileUploadControl.files.length > 0) {\n   *   var file = fileUploadControl.files[0];\n   *   var name = \"photo.jpg\";\n   *   var parseFile = new Parse.File(name, file);\n   *   parseFile.save().then(function() {\n   *     // The file has been saved to Parse.\n   *   }, function(error) {\n   *     // The file either could not be read, or could not be saved to Parse.\n   *   });\n   * }</pre>\n   * @param type {String} Optional Content-Type header to use for the file. If\n   *     this is omitted, the content type will be inferred from the name's\n   *     extension.\n   * @param metadata {Object} Optional key value pairs to be stored with file object\n   * @param tags {Object} Optional key value pairs to be stored with file object\n   */\n  function ParseFile(name\n  /*: string*/, data\n  /*:: ?: FileData*/, type\n  /*:: ?: string*/, metadata\n  /*:: ?: Object*/, tags\n  /*:: ?: Object*/) {\n    (0, _classCallCheck2.default)(this, ParseFile);\n    (0, _defineProperty2.default)(this, \"_name\", void 0);\n    (0, _defineProperty2.default)(this, \"_url\", void 0);\n    (0, _defineProperty2.default)(this, \"_source\", void 0);\n    (0, _defineProperty2.default)(this, \"_previousSave\", void 0);\n    (0, _defineProperty2.default)(this, \"_data\", void 0);\n    (0, _defineProperty2.default)(this, \"_requestTask\", void 0);\n    (0, _defineProperty2.default)(this, \"_metadata\", void 0);\n    (0, _defineProperty2.default)(this, \"_tags\", void 0);\n    var specifiedType = type || '';\n    this._name = name;\n    this._metadata = metadata || {};\n    this._tags = tags || {};\n    if (data !== undefined) {\n      if ((0, _isArray.default)(data)) {\n        this._data = ParseFile.encodeBase64(data);\n        this._source = {\n          format: 'base64',\n          base64: this._data,\n          type: specifiedType\n        };\n      } else if (typeof Blob !== 'undefined' && data instanceof Blob) {\n        this._source = {\n          format: 'file',\n          file: data,\n          type: specifiedType\n        };\n      } else if (data && typeof data.uri === 'string' && data.uri !== undefined) {\n        this._source = {\n          format: 'uri',\n          uri: data.uri,\n          type: specifiedType\n        };\n      } else if (data && typeof data.base64 === 'string') {\n        var base64 = data.base64;\n        var commaIndex = (0, _indexOf.default)(base64).call(base64, ',');\n        if (commaIndex !== -1) {\n          var matches = dataUriRegexp.exec((0, _slice.default)(base64).call(base64, 0, commaIndex + 1)); // if data URI with type and charset, there will be 4 matches.\n\n          this._data = (0, _slice.default)(base64).call(base64, commaIndex + 1);\n          this._source = {\n            format: 'base64',\n            base64: this._data,\n            type: matches[1]\n          };\n        } else {\n          this._data = base64;\n          this._source = {\n            format: 'base64',\n            base64: base64,\n            type: specifiedType\n          };\n        }\n      } else {\n        throw new TypeError('Cannot create a Parse.File with that data.');\n      }\n    }\n  }\n  /**\n   * Return the data for the file, downloading it if not already present.\n   * Data is present if initialized with Byte Array, Base64 or Saved with Uri.\n   * Data is cleared if saved with File object selected with a file upload control\n   *\n   * @returns {Promise} Promise that is resolve with base64 data\n   */\n\n  (0, _createClass2.default)(ParseFile, [{\n    key: \"getData\",\n    value: function () {\n      var _getData = (0, _asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee() {\n        var _this = this;\n        var options, controller, result;\n        return _regenerator.default.wrap(function (_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!this._data) {\n                  _context.next = 2;\n                  break;\n                }\n                return _context.abrupt(\"return\", this._data);\n              case 2:\n                if (this._url) {\n                  _context.next = 4;\n                  break;\n                }\n                throw new Error('Cannot retrieve data for unsaved ParseFile.');\n              case 4:\n                options = {\n                  requestTask: function (task) {\n                    return _this._requestTask = task;\n                  }\n                };\n                controller = _CoreManager.default.getFileController();\n                _context.next = 8;\n                return controller.download(this._url, options);\n              case 8:\n                result = _context.sent;\n                this._data = result.base64;\n                return _context.abrupt(\"return\", this._data);\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      return function () {\n        return _getData.apply(this, arguments);\n      };\n    }()\n    /**\n     * Gets the name of the file. Before save is called, this is the filename\n     * given by the user. After save is called, that name gets prefixed with a\n     * unique identifier.\n     *\n     * @returns {string}\n     */\n  }, {\n    key: \"name\",\n    value: function () /*: string*/\n    {\n      return this._name;\n    }\n    /**\n     * Gets the url of the file. It is only available after you save the file or\n     * after you get the file from a Parse.Object.\n     *\n     * @param {object} options An object to specify url options\n     * @returns {string}\n     */\n  }, {\n    key: \"url\",\n    value: function (options\n    /*:: ?: { forceSecure?: boolean }*/) /*: ?string*/\n    {\n      options = options || {};\n      if (!this._url) {\n        return;\n      }\n      if (options.forceSecure) {\n        return this._url.replace(/^http:\\/\\//i, 'https://');\n      } else {\n        return this._url;\n      }\n    }\n    /**\n     * Gets the metadata of the file.\n     *\n     * @returns {object}\n     */\n  }, {\n    key: \"metadata\",\n    value: function () /*: Object*/\n    {\n      return this._metadata;\n    }\n    /**\n     * Gets the tags of the file.\n     *\n     * @returns {object}\n     */\n  }, {\n    key: \"tags\",\n    value: function () /*: Object*/\n    {\n      return this._tags;\n    }\n    /**\n     * Saves the file to the Parse cloud.\n     *\n     * @param {object} options\n     *  * Valid options are:<ul>\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n     *     be used for this request.\n     *   <li>sessionToken: A valid session token, used for making a request on\n     *     behalf of a specific user.\n     *   <li>progress: In Browser only, callback for upload progress. For example:\n     * <pre>\n     * let parseFile = new Parse.File(name, file);\n     * parseFile.save({\n     *   progress: (progressValue, loaded, total, { type }) => {\n     *     if (type === \"upload\" && progressValue !== null) {\n     *       // Update the UI using progressValue\n     *     }\n     *   }\n     * });\n     * </pre>\n     * </ul>\n     * @returns {Promise} Promise that is resolved when the save finishes.\n     */\n  }, {\n    key: \"save\",\n    value: function (options\n    /*:: ?: FullOptions*/) {\n      var _this2 = this;\n      options = options || {};\n      options.requestTask = function (task) {\n        return _this2._requestTask = task;\n      };\n      options.metadata = this._metadata;\n      options.tags = this._tags;\n      var controller = _CoreManager.default.getFileController();\n      if (!this._previousSave) {\n        if (this._source.format === 'file') {\n          this._previousSave = controller.saveFile(this._name, this._source, options).then(function (res) {\n            _this2._name = res.name;\n            _this2._url = res.url;\n            _this2._data = null;\n            _this2._requestTask = null;\n            return _this2;\n          });\n        } else if (this._source.format === 'uri') {\n          this._previousSave = controller.download(this._source.uri, options).then(function (result) {\n            if (!(result && result.base64)) {\n              return {};\n            }\n            var newSource = {\n              format: 'base64',\n              base64: result.base64,\n              type: result.contentType\n            };\n            _this2._data = result.base64;\n            _this2._requestTask = null;\n            return controller.saveBase64(_this2._name, newSource, options);\n          }).then(function (res) {\n            _this2._name = res.name;\n            _this2._url = res.url;\n            _this2._requestTask = null;\n            return _this2;\n          });\n        } else {\n          this._previousSave = controller.saveBase64(this._name, this._source, options).then(function (res) {\n            _this2._name = res.name;\n            _this2._url = res.url;\n            _this2._requestTask = null;\n            return _this2;\n          });\n        }\n      }\n      if (this._previousSave) {\n        return this._previousSave;\n      }\n    }\n    /**\n     * Aborts the request if it has already been sent.\n     */\n  }, {\n    key: \"cancel\",\n    value: function () {\n      if (this._requestTask && typeof this._requestTask.abort === 'function') {\n        this._requestTask.abort();\n      }\n      this._requestTask = null;\n    }\n    /**\n     * Deletes the file from the Parse cloud.\n     * In Cloud Code and Node only with Master Key.\n     *\n     * @param {object} options\n     *  * Valid options are:<ul>\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n     *     be used for this request.\n     * <pre>\n     * @returns {Promise} Promise that is resolved when the delete finishes.\n     */\n  }, {\n    key: \"destroy\",\n    value: function () {\n      var _this3 = this;\n      var options\n      /*:: ?: FullOptions*/ = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      if (!this._name) {\n        throw new ParseError(ParseError.FILE_DELETE_UNNAMED_ERROR, 'Cannot delete an unnamed file.');\n      }\n      var destroyOptions = {\n        useMasterKey: true\n      };\n      if (options.hasOwnProperty('useMasterKey')) {\n        destroyOptions.useMasterKey = options.useMasterKey;\n      }\n      var controller = _CoreManager.default.getFileController();\n      return controller.deleteFile(this._name, destroyOptions).then(function () {\n        _this3._data = null;\n        _this3._requestTask = null;\n        return _this3;\n      });\n    }\n  }, {\n    key: \"toJSON\",\n    value: function () /*: { name: ?string, url: ?string }*/\n    {\n      return {\n        __type: 'File',\n        name: this._name,\n        url: this._url\n      };\n    }\n  }, {\n    key: \"equals\",\n    value: function (other\n    /*: mixed*/) /*: boolean*/\n    {\n      if (this === other) {\n        return true;\n      } // Unsaved Files are never equal, since they will be saved to different URLs\n\n      return other instanceof ParseFile && this.name() === other.name() && this.url() === other.url() && typeof this.url() !== 'undefined';\n    }\n    /**\n     * Sets metadata to be saved with file object. Overwrites existing metadata\n     *\n     * @param {object} metadata Key value pairs to be stored with file object\n     */\n  }, {\n    key: \"setMetadata\",\n    value: function (metadata\n    /*: any*/) {\n      var _this4 = this;\n      if (metadata && (0, _typeof2.default)(metadata) === 'object') {\n        var _context2;\n        (0, _forEach.default)(_context2 = (0, _keys.default)(metadata)).call(_context2, function (key) {\n          _this4.addMetadata(key, metadata[key]);\n        });\n      }\n    }\n    /**\n     * Sets metadata to be saved with file object. Adds to existing metadata.\n     *\n     * @param {string} key key to store the metadata\n     * @param {*} value metadata\n     */\n  }, {\n    key: \"addMetadata\",\n    value: function (key\n    /*: string*/, value\n    /*: any*/) {\n      if (typeof key === 'string') {\n        this._metadata[key] = value;\n      }\n    }\n    /**\n     * Sets tags to be saved with file object. Overwrites existing tags\n     *\n     * @param {object} tags Key value pairs to be stored with file object\n     */\n  }, {\n    key: \"setTags\",\n    value: function (tags\n    /*: any*/) {\n      var _this5 = this;\n      if (tags && (0, _typeof2.default)(tags) === 'object') {\n        var _context3;\n        (0, _forEach.default)(_context3 = (0, _keys.default)(tags)).call(_context3, function (key) {\n          _this5.addTag(key, tags[key]);\n        });\n      }\n    }\n    /**\n     * Sets tags to be saved with file object. Adds to existing tags.\n     *\n     * @param {string} key key to store tags\n     * @param {*} value tag\n     */\n  }, {\n    key: \"addTag\",\n    value: function (key\n    /*: string*/, value\n    /*: string*/) {\n      if (typeof key === 'string') {\n        this._tags[key] = value;\n      }\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function (obj) /*: ParseFile*/\n    {\n      if (obj.__type !== 'File') {\n        throw new TypeError('JSON object does not represent a ParseFile');\n      }\n      var file = new ParseFile(obj.name);\n      file._url = obj.url;\n      return file;\n    }\n  }, {\n    key: \"encodeBase64\",\n    value: function (bytes\n    /*: Array<number>*/) /*: string*/\n    {\n      var chunks = [];\n      chunks.length = Math.ceil(bytes.length / 3);\n      for (var i = 0; i < chunks.length; i++) {\n        var b1 = bytes[i * 3];\n        var b2 = bytes[i * 3 + 1] || 0;\n        var b3 = bytes[i * 3 + 2] || 0;\n        var has2 = i * 3 + 1 < bytes.length;\n        var has3 = i * 3 + 2 < bytes.length;\n        chunks[i] = [b64Digit(b1 >> 2 & 0x3f), b64Digit(b1 << 4 & 0x30 | b2 >> 4 & 0x0f), has2 ? b64Digit(b2 << 2 & 0x3c | b3 >> 6 & 0x03) : '=', has3 ? b64Digit(b3 & 0x3f) : '='].join('');\n      }\n      return chunks.join('');\n    }\n  }]);\n  return ParseFile;\n}();\nvar DefaultController = {\n  saveFile: function () {\n    var _saveFile = (0, _asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee2(name\n    /*: string*/, source\n    /*: FileSource*/, options\n    /*:: ?: FullOptions*/) {\n      var base64Data, _base64Data$split, _base64Data$split2, first, second, data, newSource;\n      return _regenerator.default.wrap(function (_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!(source.format !== 'file')) {\n                _context4.next = 2;\n                break;\n              }\n              throw new Error('saveFile can only be used with File-type sources.');\n            case 2:\n              _context4.next = 4;\n              return new _promise.default(function (res, rej) {\n                // eslint-disable-next-line no-undef\n                var reader = new FileReader();\n                reader.onload = function () {\n                  return res(reader.result);\n                };\n                reader.onerror = function (error) {\n                  return rej(error);\n                };\n                reader.readAsDataURL(source.file);\n              });\n            case 4:\n              base64Data = _context4.sent; // we only want the data after the comma\n              // For example: \"data:application/pdf;base64,JVBERi0xLjQKJ...\" we would only want \"JVBERi0xLjQKJ...\"\n\n              _base64Data$split = base64Data.split(','), _base64Data$split2 = (0, _slicedToArray2.default)(_base64Data$split, 2), first = _base64Data$split2[0], second = _base64Data$split2[1]; // in the event there is no 'data:application/pdf;base64,' at the beginning of the base64 string\n              // use the entire string instead\n\n              data = second ? second : first;\n              newSource = {\n                format: 'base64',\n                base64: data,\n                type: source.type || (source.file ? source.file.type : null)\n              };\n              _context4.next = 10;\n              return DefaultController.saveBase64(name, newSource, options);\n            case 10:\n              return _context4.abrupt(\"return\", _context4.sent);\n            case 11:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return function () {\n      return _saveFile.apply(this, arguments);\n    };\n  }(),\n  saveBase64: function (name\n  /*: string*/, source\n  /*: FileSource*/, options\n  /*:: ?: FullOptions*/) {\n    if (source.format !== 'base64') {\n      throw new Error('saveBase64 can only be used with Base64-type sources.');\n    }\n    var data\n    /*: { base64: any, _ContentType?: any, fileData: Object }*/ = {\n      base64: source.base64,\n      fileData: {\n        metadata: _objectSpread({}, options.metadata),\n        tags: _objectSpread({}, options.tags)\n      }\n    };\n    delete options.metadata;\n    delete options.tags;\n    if (source.type) {\n      data._ContentType = source.type;\n    }\n    return _CoreManager.default.getRESTController().request('POST', 'files/' + name, data, options);\n  },\n  download: function (uri, options) {\n    if (XHR) {\n      return this.downloadAjax(uri, options);\n    } else {\n      return _promise.default.reject('Cannot make a request: No definition of XMLHttpRequest was found.');\n    }\n  },\n  downloadAjax: function (uri, options) {\n    return new _promise.default(function (resolve, reject) {\n      var xhr = new XHR();\n      xhr.open('GET', uri, true);\n      xhr.responseType = 'arraybuffer';\n      xhr.onerror = function (e) {\n        reject(e);\n      };\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState !== xhr.DONE) {\n          return;\n        }\n        if (!this.response) {\n          return resolve({});\n        }\n        var bytes = new Uint8Array(this.response);\n        resolve({\n          base64: ParseFile.encodeBase64(bytes),\n          contentType: xhr.getResponseHeader('content-type')\n        });\n      };\n      options.requestTask(xhr);\n      xhr.send();\n    });\n  },\n  deleteFile: function (name\n  /*: string*/, options\n  /*:: ?: FullOptions*/) {\n    var headers = {\n      'X-Parse-Application-ID': _CoreManager.default.get('APPLICATION_ID')\n    };\n    if (options.useMasterKey) {\n      headers['X-Parse-Master-Key'] = _CoreManager.default.get('MASTER_KEY');\n    }\n    var url = _CoreManager.default.get('SERVER_URL');\n    if (url[url.length - 1] !== '/') {\n      url += '/';\n    }\n    url += 'files/' + name;\n    return _CoreManager.default.getRESTController().ajax('DELETE', url, '', headers).catch(function (response) {\n      // TODO: return JSON object in server\n      if (!response || response === 'SyntaxError: Unexpected end of JSON input') {\n        return _promise.default.resolve();\n      } else {\n        return _CoreManager.default.getRESTController().handleError(response);\n      }\n    });\n  },\n  _setXHR: function (xhr\n  /*: any*/) {\n    XHR = xhr;\n  },\n  _getXHR: function () {\n    return XHR;\n  }\n};\n_CoreManager.default.setFileController(DefaultController);\nvar _default = ParseFile;\nexports.default = _default;\nexports.b64Digit = b64Digit;","map":{"version":3,"names":["_interopRequireDefault","require","_Object$defineProperty","_Object$defineProperties","_Object$getOwnPropertyDescriptors","_forEachInstanceProperty2","_Object$getOwnPropertyDescriptor","_filterInstanceProperty","_Object$getOwnPropertySymbols","_Object$keys2","exports","value","default","_slicedToArray2","_promise","_keys","_forEach","_typeof2","_regenerator","_asyncToGenerator2","_slice","_indexOf","_isArray","_classCallCheck2","_createClass2","_defineProperty2","_CoreManager","ownKeys","object","enumerableOnly","keys","symbols","call","sym","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","_context5","Object","key","_context6","ParseError","XHR","XMLHttpRequest","dataUriRegexp","b64Digit","number","String","fromCharCode","TypeError","ParseFile","name","data","type","metadata","tags","specifiedType","_name","_metadata","_tags","undefined","_data","encodeBase64","_source","format","base64","Blob","file","uri","commaIndex","matches","exec","_getData","mark","_callee","_this","options","controller","result","wrap","_context","prev","next","abrupt","_url","Error","requestTask","task","_requestTask","getFileController","download","sent","stop","forceSecure","replace","_this2","_previousSave","saveFile","then","res","url","newSource","contentType","saveBase64","abort","_this3","FILE_DELETE_UNNAMED_ERROR","destroyOptions","useMasterKey","hasOwnProperty","deleteFile","__type","other","_this4","_context2","addMetadata","_this5","_context3","addTag","obj","bytes","chunks","Math","ceil","b1","b2","b3","has2","has3","join","DefaultController","_saveFile","_callee2","base64Data","_base64Data$split","_base64Data$split2","first","second","_context4","rej","reader","FileReader","onload","onerror","error","readAsDataURL","split","fileData","_ContentType","getRESTController","request","downloadAjax","reject","resolve","xhr","open","responseType","e","onreadystatechange","readyState","DONE","response","Uint8Array","getResponseHeader","send","headers","get","ajax","catch","handleError","_setXHR","_getXHR","setFileController","_default"],"sources":["C:/Users/chtdu/Documents/WEB DEV/git-repo/react-webpack8/node_modules/parse/lib/browser/ParseFile.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\n\nvar _Object$defineProperties = require(\"@babel/runtime-corejs3/core-js-stable/object/define-properties\");\n\nvar _Object$getOwnPropertyDescriptors = require(\"@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptors\");\n\nvar _forEachInstanceProperty2 = require(\"@babel/runtime-corejs3/core-js-stable/instance/for-each\");\n\nvar _Object$getOwnPropertyDescriptor = require(\"@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor\");\n\nvar _filterInstanceProperty = require(\"@babel/runtime-corejs3/core-js-stable/instance/filter\");\n\nvar _Object$getOwnPropertySymbols = require(\"@babel/runtime-corejs3/core-js-stable/object/get-own-property-symbols\");\n\nvar _Object$keys2 = require(\"@babel/runtime-corejs3/core-js-stable/object/keys\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/slicedToArray\"));\n\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/promise\"));\n\nvar _keys = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/object/keys\"));\n\nvar _forEach = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/for-each\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/typeof\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime-corejs3/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/asyncToGenerator\"));\n\nvar _slice = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/slice\"));\n\nvar _indexOf = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/index-of\"));\n\nvar _isArray = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/array/is-array\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/defineProperty\"));\n\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = _Object$keys2(object);\n\n  if (_Object$getOwnPropertySymbols) {\n    var symbols = _Object$getOwnPropertySymbols(object);\n\n    if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) {\n      return _Object$getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      var _context5;\n\n      _forEachInstanceProperty2(_context5 = ownKeys(Object(source), true)).call(_context5, function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (_Object$getOwnPropertyDescriptors) {\n      _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source));\n    } else {\n      var _context6;\n\n      _forEachInstanceProperty2(_context6 = ownKeys(Object(source))).call(_context6, function (key) {\n        _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar ParseError = require('./ParseError').default;\n\nvar XHR = null;\n\nif (typeof XMLHttpRequest !== 'undefined') {\n  XHR = XMLHttpRequest;\n}\n\n/*:: type Base64 = { base64: string };*/\n\n/*:: type Uri = { uri: string };*/\n\n/*:: type FileData = Array<number> | Base64 | Blob | Uri;*/\n\n/*:: export type FileSource =\n  | {\n      format: 'file',\n      file: Blob,\n      type: string,\n    }\n  | {\n      format: 'base64',\n      base64: string,\n      type: string,\n    }\n  | {\n      format: 'uri',\n      uri: string,\n      type: string,\n    };*/\nvar dataUriRegexp = /^data:([a-zA-Z]+\\/[-a-zA-Z0-9+.]+)(;charset=[a-zA-Z0-9\\-\\/]*)?;base64,/;\n\nfunction b64Digit(number\n/*: number*/\n)\n/*: string*/\n{\n  if (number < 26) {\n    return String.fromCharCode(65 + number);\n  }\n\n  if (number < 52) {\n    return String.fromCharCode(97 + (number - 26));\n  }\n\n  if (number < 62) {\n    return String.fromCharCode(48 + (number - 52));\n  }\n\n  if (number === 62) {\n    return '+';\n  }\n\n  if (number === 63) {\n    return '/';\n  }\n\n  throw new TypeError('Tried to encode large digit ' + number + ' in base64.');\n}\n/**\n * A Parse.File is a local representation of a file that is saved to the Parse\n * cloud.\n *\n * @alias Parse.File\n */\n\n\nvar ParseFile = /*#__PURE__*/function () {\n  /**\n   * @param name {String} The file's name. This will be prefixed by a unique\n   *     value once the file has finished saving. The file name must begin with\n   *     an alphanumeric character, and consist of alphanumeric characters,\n   *     periods, spaces, underscores, or dashes.\n   * @param data {Array} The data for the file, as either:\n   *     1. an Array of byte value Numbers, or\n   *     2. an Object like { base64: \"...\" } with a base64-encoded String.\n   *     3. an Object like { uri: \"...\" } with a uri String.\n   *     4. a File object selected with a file upload control. (3) only works\n   *        in Firefox 3.6+, Safari 6.0.2+, Chrome 7+, and IE 10+.\n   *        For example:\n   * <pre>\n   * var fileUploadControl = $(\"#profilePhotoFileUpload\")[0];\n   * if (fileUploadControl.files.length > 0) {\n   *   var file = fileUploadControl.files[0];\n   *   var name = \"photo.jpg\";\n   *   var parseFile = new Parse.File(name, file);\n   *   parseFile.save().then(function() {\n   *     // The file has been saved to Parse.\n   *   }, function(error) {\n   *     // The file either could not be read, or could not be saved to Parse.\n   *   });\n   * }</pre>\n   * @param type {String} Optional Content-Type header to use for the file. If\n   *     this is omitted, the content type will be inferred from the name's\n   *     extension.\n   * @param metadata {Object} Optional key value pairs to be stored with file object\n   * @param tags {Object} Optional key value pairs to be stored with file object\n   */\n  function ParseFile(name\n  /*: string*/\n  , data\n  /*:: ?: FileData*/\n  , type\n  /*:: ?: string*/\n  , metadata\n  /*:: ?: Object*/\n  , tags\n  /*:: ?: Object*/\n  ) {\n    (0, _classCallCheck2.default)(this, ParseFile);\n    (0, _defineProperty2.default)(this, \"_name\", void 0);\n    (0, _defineProperty2.default)(this, \"_url\", void 0);\n    (0, _defineProperty2.default)(this, \"_source\", void 0);\n    (0, _defineProperty2.default)(this, \"_previousSave\", void 0);\n    (0, _defineProperty2.default)(this, \"_data\", void 0);\n    (0, _defineProperty2.default)(this, \"_requestTask\", void 0);\n    (0, _defineProperty2.default)(this, \"_metadata\", void 0);\n    (0, _defineProperty2.default)(this, \"_tags\", void 0);\n    var specifiedType = type || '';\n    this._name = name;\n    this._metadata = metadata || {};\n    this._tags = tags || {};\n\n    if (data !== undefined) {\n      if ((0, _isArray.default)(data)) {\n        this._data = ParseFile.encodeBase64(data);\n        this._source = {\n          format: 'base64',\n          base64: this._data,\n          type: specifiedType\n        };\n      } else if (typeof Blob !== 'undefined' && data instanceof Blob) {\n        this._source = {\n          format: 'file',\n          file: data,\n          type: specifiedType\n        };\n      } else if (data && typeof data.uri === 'string' && data.uri !== undefined) {\n        this._source = {\n          format: 'uri',\n          uri: data.uri,\n          type: specifiedType\n        };\n      } else if (data && typeof data.base64 === 'string') {\n        var base64 = data.base64;\n        var commaIndex = (0, _indexOf.default)(base64).call(base64, ',');\n\n        if (commaIndex !== -1) {\n          var matches = dataUriRegexp.exec((0, _slice.default)(base64).call(base64, 0, commaIndex + 1)); // if data URI with type and charset, there will be 4 matches.\n\n          this._data = (0, _slice.default)(base64).call(base64, commaIndex + 1);\n          this._source = {\n            format: 'base64',\n            base64: this._data,\n            type: matches[1]\n          };\n        } else {\n          this._data = base64;\n          this._source = {\n            format: 'base64',\n            base64: base64,\n            type: specifiedType\n          };\n        }\n      } else {\n        throw new TypeError('Cannot create a Parse.File with that data.');\n      }\n    }\n  }\n  /**\n   * Return the data for the file, downloading it if not already present.\n   * Data is present if initialized with Byte Array, Base64 or Saved with Uri.\n   * Data is cleared if saved with File object selected with a file upload control\n   *\n   * @returns {Promise} Promise that is resolve with base64 data\n   */\n\n\n  (0, _createClass2.default)(ParseFile, [{\n    key: \"getData\",\n    value: function () {\n      var _getData = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee() {\n        var _this = this;\n\n        var options, controller, result;\n        return _regenerator.default.wrap(function (_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!this._data) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this._data);\n\n              case 2:\n                if (this._url) {\n                  _context.next = 4;\n                  break;\n                }\n\n                throw new Error('Cannot retrieve data for unsaved ParseFile.');\n\n              case 4:\n                options = {\n                  requestTask: function (task) {\n                    return _this._requestTask = task;\n                  }\n                };\n                controller = _CoreManager.default.getFileController();\n                _context.next = 8;\n                return controller.download(this._url, options);\n\n              case 8:\n                result = _context.sent;\n                this._data = result.base64;\n                return _context.abrupt(\"return\", this._data);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function () {\n        return _getData.apply(this, arguments);\n      };\n    }()\n    /**\n     * Gets the name of the file. Before save is called, this is the filename\n     * given by the user. After save is called, that name gets prefixed with a\n     * unique identifier.\n     *\n     * @returns {string}\n     */\n\n  }, {\n    key: \"name\",\n    value: function ()\n    /*: string*/\n    {\n      return this._name;\n    }\n    /**\n     * Gets the url of the file. It is only available after you save the file or\n     * after you get the file from a Parse.Object.\n     *\n     * @param {object} options An object to specify url options\n     * @returns {string}\n     */\n\n  }, {\n    key: \"url\",\n    value: function (options\n    /*:: ?: { forceSecure?: boolean }*/\n    )\n    /*: ?string*/\n    {\n      options = options || {};\n\n      if (!this._url) {\n        return;\n      }\n\n      if (options.forceSecure) {\n        return this._url.replace(/^http:\\/\\//i, 'https://');\n      } else {\n        return this._url;\n      }\n    }\n    /**\n     * Gets the metadata of the file.\n     *\n     * @returns {object}\n     */\n\n  }, {\n    key: \"metadata\",\n    value: function ()\n    /*: Object*/\n    {\n      return this._metadata;\n    }\n    /**\n     * Gets the tags of the file.\n     *\n     * @returns {object}\n     */\n\n  }, {\n    key: \"tags\",\n    value: function ()\n    /*: Object*/\n    {\n      return this._tags;\n    }\n    /**\n     * Saves the file to the Parse cloud.\n     *\n     * @param {object} options\n     *  * Valid options are:<ul>\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n     *     be used for this request.\n     *   <li>sessionToken: A valid session token, used for making a request on\n     *     behalf of a specific user.\n     *   <li>progress: In Browser only, callback for upload progress. For example:\n     * <pre>\n     * let parseFile = new Parse.File(name, file);\n     * parseFile.save({\n     *   progress: (progressValue, loaded, total, { type }) => {\n     *     if (type === \"upload\" && progressValue !== null) {\n     *       // Update the UI using progressValue\n     *     }\n     *   }\n     * });\n     * </pre>\n     * </ul>\n     * @returns {Promise} Promise that is resolved when the save finishes.\n     */\n\n  }, {\n    key: \"save\",\n    value: function (options\n    /*:: ?: FullOptions*/\n    ) {\n      var _this2 = this;\n\n      options = options || {};\n\n      options.requestTask = function (task) {\n        return _this2._requestTask = task;\n      };\n\n      options.metadata = this._metadata;\n      options.tags = this._tags;\n\n      var controller = _CoreManager.default.getFileController();\n\n      if (!this._previousSave) {\n        if (this._source.format === 'file') {\n          this._previousSave = controller.saveFile(this._name, this._source, options).then(function (res) {\n            _this2._name = res.name;\n            _this2._url = res.url;\n            _this2._data = null;\n            _this2._requestTask = null;\n            return _this2;\n          });\n        } else if (this._source.format === 'uri') {\n          this._previousSave = controller.download(this._source.uri, options).then(function (result) {\n            if (!(result && result.base64)) {\n              return {};\n            }\n\n            var newSource = {\n              format: 'base64',\n              base64: result.base64,\n              type: result.contentType\n            };\n            _this2._data = result.base64;\n            _this2._requestTask = null;\n            return controller.saveBase64(_this2._name, newSource, options);\n          }).then(function (res) {\n            _this2._name = res.name;\n            _this2._url = res.url;\n            _this2._requestTask = null;\n            return _this2;\n          });\n        } else {\n          this._previousSave = controller.saveBase64(this._name, this._source, options).then(function (res) {\n            _this2._name = res.name;\n            _this2._url = res.url;\n            _this2._requestTask = null;\n            return _this2;\n          });\n        }\n      }\n\n      if (this._previousSave) {\n        return this._previousSave;\n      }\n    }\n    /**\n     * Aborts the request if it has already been sent.\n     */\n\n  }, {\n    key: \"cancel\",\n    value: function () {\n      if (this._requestTask && typeof this._requestTask.abort === 'function') {\n        this._requestTask.abort();\n      }\n\n      this._requestTask = null;\n    }\n    /**\n     * Deletes the file from the Parse cloud.\n     * In Cloud Code and Node only with Master Key.\n     *\n     * @param {object} options\n     *  * Valid options are:<ul>\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n     *     be used for this request.\n     * <pre>\n     * @returns {Promise} Promise that is resolved when the delete finishes.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function () {\n      var _this3 = this;\n\n      var options\n      /*:: ?: FullOptions*/\n      = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (!this._name) {\n        throw new ParseError(ParseError.FILE_DELETE_UNNAMED_ERROR, 'Cannot delete an unnamed file.');\n      }\n\n      var destroyOptions = {\n        useMasterKey: true\n      };\n\n      if (options.hasOwnProperty('useMasterKey')) {\n        destroyOptions.useMasterKey = options.useMasterKey;\n      }\n\n      var controller = _CoreManager.default.getFileController();\n\n      return controller.deleteFile(this._name, destroyOptions).then(function () {\n        _this3._data = null;\n        _this3._requestTask = null;\n        return _this3;\n      });\n    }\n  }, {\n    key: \"toJSON\",\n    value: function ()\n    /*: { name: ?string, url: ?string }*/\n    {\n      return {\n        __type: 'File',\n        name: this._name,\n        url: this._url\n      };\n    }\n  }, {\n    key: \"equals\",\n    value: function (other\n    /*: mixed*/\n    )\n    /*: boolean*/\n    {\n      if (this === other) {\n        return true;\n      } // Unsaved Files are never equal, since they will be saved to different URLs\n\n\n      return other instanceof ParseFile && this.name() === other.name() && this.url() === other.url() && typeof this.url() !== 'undefined';\n    }\n    /**\n     * Sets metadata to be saved with file object. Overwrites existing metadata\n     *\n     * @param {object} metadata Key value pairs to be stored with file object\n     */\n\n  }, {\n    key: \"setMetadata\",\n    value: function (metadata\n    /*: any*/\n    ) {\n      var _this4 = this;\n\n      if (metadata && (0, _typeof2.default)(metadata) === 'object') {\n        var _context2;\n\n        (0, _forEach.default)(_context2 = (0, _keys.default)(metadata)).call(_context2, function (key) {\n          _this4.addMetadata(key, metadata[key]);\n        });\n      }\n    }\n    /**\n     * Sets metadata to be saved with file object. Adds to existing metadata.\n     *\n     * @param {string} key key to store the metadata\n     * @param {*} value metadata\n     */\n\n  }, {\n    key: \"addMetadata\",\n    value: function (key\n    /*: string*/\n    , value\n    /*: any*/\n    ) {\n      if (typeof key === 'string') {\n        this._metadata[key] = value;\n      }\n    }\n    /**\n     * Sets tags to be saved with file object. Overwrites existing tags\n     *\n     * @param {object} tags Key value pairs to be stored with file object\n     */\n\n  }, {\n    key: \"setTags\",\n    value: function (tags\n    /*: any*/\n    ) {\n      var _this5 = this;\n\n      if (tags && (0, _typeof2.default)(tags) === 'object') {\n        var _context3;\n\n        (0, _forEach.default)(_context3 = (0, _keys.default)(tags)).call(_context3, function (key) {\n          _this5.addTag(key, tags[key]);\n        });\n      }\n    }\n    /**\n     * Sets tags to be saved with file object. Adds to existing tags.\n     *\n     * @param {string} key key to store tags\n     * @param {*} value tag\n     */\n\n  }, {\n    key: \"addTag\",\n    value: function (key\n    /*: string*/\n    , value\n    /*: string*/\n    ) {\n      if (typeof key === 'string') {\n        this._tags[key] = value;\n      }\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function (obj)\n    /*: ParseFile*/\n    {\n      if (obj.__type !== 'File') {\n        throw new TypeError('JSON object does not represent a ParseFile');\n      }\n\n      var file = new ParseFile(obj.name);\n      file._url = obj.url;\n      return file;\n    }\n  }, {\n    key: \"encodeBase64\",\n    value: function (bytes\n    /*: Array<number>*/\n    )\n    /*: string*/\n    {\n      var chunks = [];\n      chunks.length = Math.ceil(bytes.length / 3);\n\n      for (var i = 0; i < chunks.length; i++) {\n        var b1 = bytes[i * 3];\n        var b2 = bytes[i * 3 + 1] || 0;\n        var b3 = bytes[i * 3 + 2] || 0;\n        var has2 = i * 3 + 1 < bytes.length;\n        var has3 = i * 3 + 2 < bytes.length;\n        chunks[i] = [b64Digit(b1 >> 2 & 0x3f), b64Digit(b1 << 4 & 0x30 | b2 >> 4 & 0x0f), has2 ? b64Digit(b2 << 2 & 0x3c | b3 >> 6 & 0x03) : '=', has3 ? b64Digit(b3 & 0x3f) : '='].join('');\n      }\n\n      return chunks.join('');\n    }\n  }]);\n  return ParseFile;\n}();\n\nvar DefaultController = {\n  saveFile: function () {\n    var _saveFile = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2(name\n    /*: string*/\n    , source\n    /*: FileSource*/\n    , options\n    /*:: ?: FullOptions*/\n    ) {\n      var base64Data, _base64Data$split, _base64Data$split2, first, second, data, newSource;\n\n      return _regenerator.default.wrap(function (_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!(source.format !== 'file')) {\n                _context4.next = 2;\n                break;\n              }\n\n              throw new Error('saveFile can only be used with File-type sources.');\n\n            case 2:\n              _context4.next = 4;\n              return new _promise.default(function (res, rej) {\n                // eslint-disable-next-line no-undef\n                var reader = new FileReader();\n\n                reader.onload = function () {\n                  return res(reader.result);\n                };\n\n                reader.onerror = function (error) {\n                  return rej(error);\n                };\n\n                reader.readAsDataURL(source.file);\n              });\n\n            case 4:\n              base64Data = _context4.sent; // we only want the data after the comma\n              // For example: \"data:application/pdf;base64,JVBERi0xLjQKJ...\" we would only want \"JVBERi0xLjQKJ...\"\n\n              _base64Data$split = base64Data.split(','), _base64Data$split2 = (0, _slicedToArray2.default)(_base64Data$split, 2), first = _base64Data$split2[0], second = _base64Data$split2[1]; // in the event there is no 'data:application/pdf;base64,' at the beginning of the base64 string\n              // use the entire string instead\n\n              data = second ? second : first;\n              newSource = {\n                format: 'base64',\n                base64: data,\n                type: source.type || (source.file ? source.file.type : null)\n              };\n              _context4.next = 10;\n              return DefaultController.saveBase64(name, newSource, options);\n\n            case 10:\n              return _context4.abrupt(\"return\", _context4.sent);\n\n            case 11:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function () {\n      return _saveFile.apply(this, arguments);\n    };\n  }(),\n  saveBase64: function (name\n  /*: string*/\n  , source\n  /*: FileSource*/\n  , options\n  /*:: ?: FullOptions*/\n  ) {\n    if (source.format !== 'base64') {\n      throw new Error('saveBase64 can only be used with Base64-type sources.');\n    }\n\n    var data\n    /*: { base64: any, _ContentType?: any, fileData: Object }*/\n    = {\n      base64: source.base64,\n      fileData: {\n        metadata: _objectSpread({}, options.metadata),\n        tags: _objectSpread({}, options.tags)\n      }\n    };\n    delete options.metadata;\n    delete options.tags;\n\n    if (source.type) {\n      data._ContentType = source.type;\n    }\n\n    return _CoreManager.default.getRESTController().request('POST', 'files/' + name, data, options);\n  },\n  download: function (uri, options) {\n    if (XHR) {\n      return this.downloadAjax(uri, options);\n    } else {\n      return _promise.default.reject('Cannot make a request: No definition of XMLHttpRequest was found.');\n    }\n  },\n  downloadAjax: function (uri, options) {\n    return new _promise.default(function (resolve, reject) {\n      var xhr = new XHR();\n      xhr.open('GET', uri, true);\n      xhr.responseType = 'arraybuffer';\n\n      xhr.onerror = function (e) {\n        reject(e);\n      };\n\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState !== xhr.DONE) {\n          return;\n        }\n\n        if (!this.response) {\n          return resolve({});\n        }\n\n        var bytes = new Uint8Array(this.response);\n        resolve({\n          base64: ParseFile.encodeBase64(bytes),\n          contentType: xhr.getResponseHeader('content-type')\n        });\n      };\n\n      options.requestTask(xhr);\n      xhr.send();\n    });\n  },\n  deleteFile: function (name\n  /*: string*/\n  , options\n  /*:: ?: FullOptions*/\n  ) {\n    var headers = {\n      'X-Parse-Application-ID': _CoreManager.default.get('APPLICATION_ID')\n    };\n\n    if (options.useMasterKey) {\n      headers['X-Parse-Master-Key'] = _CoreManager.default.get('MASTER_KEY');\n    }\n\n    var url = _CoreManager.default.get('SERVER_URL');\n\n    if (url[url.length - 1] !== '/') {\n      url += '/';\n    }\n\n    url += 'files/' + name;\n    return _CoreManager.default.getRESTController().ajax('DELETE', url, '', headers).catch(function (response) {\n      // TODO: return JSON object in server\n      if (!response || response === 'SyntaxError: Unexpected end of JSON input') {\n        return _promise.default.resolve();\n      } else {\n        return _CoreManager.default.getRESTController().handleError(response);\n      }\n    });\n  },\n  _setXHR: function (xhr\n  /*: any*/\n  ) {\n    XHR = xhr;\n  },\n  _getXHR: function () {\n    return XHR;\n  }\n};\n\n_CoreManager.default.setFileController(DefaultController);\n\nvar _default = ParseFile;\nexports.default = _default;\nexports.b64Digit = b64Digit;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}