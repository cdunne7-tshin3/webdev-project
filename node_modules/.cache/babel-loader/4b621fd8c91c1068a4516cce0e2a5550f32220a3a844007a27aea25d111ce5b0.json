{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\nvar _sliceInstanceProperty = require(\"@babel/runtime-corejs3/core-js-stable/instance/slice\");\nvar _reverseInstanceProperty = require(\"@babel/runtime-corejs3/core-js-stable/instance/reverse\");\nvar _Promise2 = require(\"@babel/runtime-corejs3/core-js-stable/promise\");\nvar _Object$setPrototypeOf = require(\"@babel/runtime-corejs3/core-js-stable/object/set-prototype-of\");\nvar _typeof3 = require(\"@babel/runtime-corejs3/helpers/typeof\");\nvar _forEachInstanceProperty = require(\"@babel/runtime-corejs3/core-js-stable/instance/for-each\");\nvar _Object$getPrototypeOf = require(\"@babel/runtime-corejs3/core-js-stable/object/get-prototype-of\");\nvar _Object$create = require(\"@babel/runtime-corejs3/core-js-stable/object/create\");\nvar _Object$defineProperty2 = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\nvar _Symbol = require(\"@babel/runtime-corejs3/core-js-stable/symbol\");\nvar _Reflect$construct = require(\"@babel/runtime-corejs3/core-js-stable/reflect/construct\");\n_Object$defineProperty2(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _stringify = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/json/stringify\"));\nvar _defineProperty = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\"));\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/asyncToGenerator\"));\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/promise\"));\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/typeof\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/createClass\"));\nvar _get2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/get\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/getPrototypeOf\"));\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\nvar _isRevocableSession = _interopRequireDefault(require(\"./isRevocableSession\"));\nvar _ParseError = _interopRequireDefault(require(\"./ParseError\"));\nvar _ParseObject2 = _interopRequireDefault(require(\"./ParseObject\"));\nvar _ParseSession = _interopRequireDefault(require(\"./ParseSession\"));\nvar _Storage = _interopRequireDefault(require(\"./Storage\"));\nfunction _regeneratorRuntime() {\n  \"use strict\";\n\n  /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  _regeneratorRuntime = function () {\n    return exports;\n  };\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    $Symbol = \"function\" == typeof _Symbol ? _Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return _Object$defineProperty2(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function (obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = _Object$create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return generator._invoke = function (innerFn, self, context) {\n      var state = \"suspendedStart\";\n      return function (method, arg) {\n        if (\"executing\" === state) throw new Error(\"Generator is already running\");\n        if (\"completed\" === state) {\n          if (\"throw\" === method) throw arg;\n          return doneResult();\n        }\n        for (context.method = method, context.arg = arg;;) {\n          var delegate = context.delegate;\n          if (delegate) {\n            var delegateResult = maybeInvokeDelegate(delegate, context);\n            if (delegateResult) {\n              if (delegateResult === ContinueSentinel) continue;\n              return delegateResult;\n            }\n          }\n          if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n            if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n            context.dispatchException(context.arg);\n          } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n          state = \"executing\";\n          var record = tryCatch(innerFn, self, context);\n          if (\"normal\" === record.type) {\n            if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n            return {\n              value: record.arg,\n              done: context.done\n            };\n          }\n          \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n        }\n      };\n    }(innerFn, self, context), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = _Object$getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = _Object$create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    var _context7;\n    _forEachInstanceProperty(_context7 = [\"next\", \"throw\", \"return\"]).call(_context7, function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof3(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    this._invoke = function (method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n      return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (undefined === method) {\n      if (context.delegate = null, \"throw\" === context.method) {\n        if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel;\n        context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n      return ContinueSentinel;\n    }\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], _forEachInstanceProperty(tryLocsList).call(tryLocsList, pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) {\n              if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            }\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return _Object$setPrototypeOf ? _Object$setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = _Object$create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = _Promise2);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    return _reverseInstanceProperty(keys).call(keys), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function (skipTempReset) {\n      var _context8;\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, _forEachInstanceProperty(_context8 = this.tryEntries).call(_context8, resetTryEntry), !skipTempReset) for (var name in this) {\n        \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+_sliceInstanceProperty(name).call(name, 1)) && (this[name] = undefined);\n      }\n    },\n    stop: function () {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function (exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function (type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function (record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function (finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    catch: function (tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function (iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function () {\n    var Super = (0, _getPrototypeOf2.default)(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return (0, _possibleConstructorReturn2.default)(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar CURRENT_USER_KEY = 'currentUser';\nvar canUseCurrentUser = !_CoreManager.default.get('IS_NODE');\nvar currentUserCacheMatchesDisk = false;\nvar currentUserCache = null;\nvar authProviders = {};\n/**\r\n * <p>A Parse.User object is a local representation of a user persisted to the\r\n * Parse cloud. This class is a subclass of a Parse.Object, and retains the\r\n * same functionality of a Parse.Object, but also extends it with various\r\n * user specific methods, like authentication, signing up, and validation of\r\n * uniqueness.</p>\r\n *\r\n * @alias Parse.User\r\n * @augments Parse.Object\r\n */\n\nvar ParseUser = /*#__PURE__*/function (_ParseObject) {\n  (0, _inherits2.default)(ParseUser, _ParseObject);\n  var _super = _createSuper(ParseUser);\n  /**\r\n   * @param {object} attributes The initial set of data to store in the user.\r\n   */\n\n  function ParseUser(attributes\n  /*: ?AttributeMap*/) {\n    var _this;\n    (0, _classCallCheck2.default)(this, ParseUser);\n    _this = _super.call(this, '_User');\n    if (attributes && (0, _typeof2.default)(attributes) === 'object') {\n      if (!_this.set(attributes || {})) {\n        throw new Error(\"Can't create an invalid Parse User\");\n      }\n    }\n    return _this;\n  }\n  /**\r\n   * Request a revocable session token to replace the older style of token.\r\n   *\r\n   * @param {object} options\r\n   * @returns {Promise} A promise that is resolved when the replacement\r\n   *   token has been fetched.\r\n   */\n\n  (0, _createClass2.default)(ParseUser, [{\n    key: \"_upgradeToRevocableSession\",\n    value: function (options\n    /*: RequestOptions*/) /*: Promise<void>*/\n    {\n      options = options || {};\n      var upgradeOptions = {};\n      if (options.hasOwnProperty('useMasterKey')) {\n        upgradeOptions.useMasterKey = options.useMasterKey;\n      }\n      var controller = _CoreManager.default.getUserController();\n      return controller.upgradeToRevocableSession(this, upgradeOptions);\n    }\n    /**\r\n     * Parse allows you to link your users with {@link https://docs.parseplatform.org/parse-server/guide/#oauth-and-3rd-party-authentication 3rd party authentication}, enabling\r\n     * your users to sign up or log into your application using their existing identities.\r\n     * Since 2.9.0\r\n     *\r\n     * @see {@link https://docs.parseplatform.org/js/guide/#linking-users Linking Users}\r\n     * @param {string | AuthProvider} provider Name of auth provider or {@link https://parseplatform.org/Parse-SDK-JS/api/master/AuthProvider.html AuthProvider}\r\n     * @param {object} options\r\n     * <ul>\r\n     *   <li>If provider is string, options is {@link http://docs.parseplatform.org/parse-server/guide/#supported-3rd-party-authentications authData}\r\n     *   <li>If provider is AuthProvider, options is saveOpts\r\n     * </ul>\r\n     * @param {object} saveOpts useMasterKey / sessionToken\r\n     * @returns {Promise} A promise that is fulfilled with the user is linked\r\n     */\n  }, {\n    key: \"linkWith\",\n    value: function (provider\n    /*: any*/, options\n    /*: { authData?: AuthData }*/) /*: Promise<ParseUser>*/\n    {\n      var _this2 = this;\n      var saveOpts\n      /*:: ?: FullOptions*/ = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      saveOpts.sessionToken = saveOpts.sessionToken || this.getSessionToken() || '';\n      var authType;\n      if (typeof provider === 'string') {\n        authType = provider;\n        if (authProviders[provider]) {\n          provider = authProviders[provider];\n        } else {\n          var authProvider = {\n            restoreAuthentication: function () {\n              return true;\n            },\n            getAuthType: function () {\n              return authType;\n            }\n          };\n          authProviders[authProvider.getAuthType()] = authProvider;\n          provider = authProvider;\n        }\n      } else {\n        authType = provider.getAuthType();\n      }\n      if (options && options.hasOwnProperty('authData')) {\n        var authData = this.get('authData') || {};\n        if ((0, _typeof2.default)(authData) !== 'object') {\n          throw new Error('Invalid type: authData field should be an object');\n        }\n        authData[authType] = options.authData;\n        var controller = _CoreManager.default.getUserController();\n        return controller.linkWith(this, authData, saveOpts);\n      } else {\n        return new _promise.default(function (resolve, reject) {\n          provider.authenticate({\n            success: function (provider, result) {\n              var opts = {};\n              opts.authData = result;\n              _this2.linkWith(provider, opts, saveOpts).then(function () {\n                resolve(_this2);\n              }, function (error) {\n                reject(error);\n              });\n            },\n            error: function (provider, _error) {\n              reject(_error);\n            }\n          });\n        });\n      }\n    }\n    /**\r\n     * @param provider\r\n     * @param options\r\n     * @param saveOpts\r\n     * @deprecated since 2.9.0 see {@link https://parseplatform.org/Parse-SDK-JS/api/master/Parse.User.html#linkWith linkWith}\r\n     * @returns {Promise}\r\n     */\n  }, {\n    key: \"_linkWith\",\n    value: function (provider\n    /*: any*/, options\n    /*: { authData?: AuthData }*/) /*: Promise<ParseUser>*/\n    {\n      var saveOpts\n      /*:: ?: FullOptions*/ = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.linkWith(provider, options, saveOpts);\n    }\n    /**\r\n     * Synchronizes auth data for a provider (e.g. puts the access token in the\r\n     * right place to be used by the Facebook SDK).\r\n     *\r\n     * @param provider\r\n     */\n  }, {\n    key: \"_synchronizeAuthData\",\n    value: function (provider\n    /*: string*/) {\n      if (!this.isCurrent() || !provider) {\n        return;\n      }\n      var authType;\n      if (typeof provider === 'string') {\n        authType = provider;\n        provider = authProviders[authType];\n      } else {\n        authType = provider.getAuthType();\n      }\n      var authData = this.get('authData');\n      if (!provider || !authData || (0, _typeof2.default)(authData) !== 'object') {\n        return;\n      }\n      var success = provider.restoreAuthentication(authData[authType]);\n      if (!success) {\n        this._unlinkFrom(provider);\n      }\n    }\n    /**\r\n     * Synchronizes authData for all providers.\r\n     */\n  }, {\n    key: \"_synchronizeAllAuthData\",\n    value: function () {\n      var authData = this.get('authData');\n      if ((0, _typeof2.default)(authData) !== 'object') {\n        return;\n      }\n      for (var _key in authData) {\n        this._synchronizeAuthData(_key);\n      }\n    }\n    /**\r\n     * Removes null values from authData (which exist temporarily for unlinking)\r\n     */\n  }, {\n    key: \"_cleanupAuthData\",\n    value: function () {\n      if (!this.isCurrent()) {\n        return;\n      }\n      var authData = this.get('authData');\n      if ((0, _typeof2.default)(authData) !== 'object') {\n        return;\n      }\n      for (var _key2 in authData) {\n        if (!authData[_key2]) {\n          delete authData[_key2];\n        }\n      }\n    }\n    /**\r\n     * Unlinks a user from a service.\r\n     *\r\n     * @param {string | AuthProvider} provider Name of auth provider or {@link https://parseplatform.org/Parse-SDK-JS/api/master/AuthProvider.html AuthProvider}\r\n     * @param {object} options MasterKey / SessionToken\r\n     * @returns {Promise} A promise that is fulfilled when the unlinking\r\n     *     finishes.\r\n     */\n  }, {\n    key: \"_unlinkFrom\",\n    value: function (provider\n    /*: any*/, options\n    /*:: ?: FullOptions*/) /*: Promise<ParseUser>*/\n    {\n      var _this3 = this;\n      return this.linkWith(provider, {\n        authData: null\n      }, options).then(function () {\n        _this3._synchronizeAuthData(provider);\n        return _promise.default.resolve(_this3);\n      });\n    }\n    /**\r\n     * Checks whether a user is linked to a service.\r\n     *\r\n     * @param {object} provider service to link to\r\n     * @returns {boolean} true if link was successful\r\n     */\n  }, {\n    key: \"_isLinked\",\n    value: function (provider\n    /*: any*/) /*: boolean*/\n    {\n      var authType;\n      if (typeof provider === 'string') {\n        authType = provider;\n      } else {\n        authType = provider.getAuthType();\n      }\n      var authData = this.get('authData') || {};\n      if ((0, _typeof2.default)(authData) !== 'object') {\n        return false;\n      }\n      return !!authData[authType];\n    }\n    /**\r\n     * Deauthenticates all providers.\r\n     */\n  }, {\n    key: \"_logOutWithAll\",\n    value: function () {\n      var authData = this.get('authData');\n      if ((0, _typeof2.default)(authData) !== 'object') {\n        return;\n      }\n      for (var _key3 in authData) {\n        this._logOutWith(_key3);\n      }\n    }\n    /**\r\n     * Deauthenticates a single provider (e.g. removing access tokens from the\r\n     * Facebook SDK).\r\n     *\r\n     * @param {object} provider service to logout of\r\n     */\n  }, {\n    key: \"_logOutWith\",\n    value: function (provider\n    /*: any*/) {\n      if (!this.isCurrent()) {\n        return;\n      }\n      if (typeof provider === 'string') {\n        provider = authProviders[provider];\n      }\n      if (provider && provider.deauthenticate) {\n        provider.deauthenticate();\n      }\n    }\n    /**\r\n     * Class instance method used to maintain specific keys when a fetch occurs.\r\n     * Used to ensure that the session token is not lost.\r\n     *\r\n     * @returns {object} sessionToken\r\n     */\n  }, {\n    key: \"_preserveFieldsOnFetch\",\n    value: function () /*: AttributeMap*/\n    {\n      return {\n        sessionToken: this.get('sessionToken')\n      };\n    }\n    /**\r\n     * Returns true if <code>current</code> would return this user.\r\n     *\r\n     * @returns {boolean} true if user is cached on disk\r\n     */\n  }, {\n    key: \"isCurrent\",\n    value: function () /*: boolean*/\n    {\n      var current = ParseUser.current();\n      return !!current && current.id === this.id;\n    }\n    /**\r\n     * Returns true if <code>current</code> would return this user.\r\n     *\r\n     * @returns {Promise<boolean>} true if user is cached on disk\r\n     */\n  }, {\n    key: \"isCurrentAsync\",\n    value: function () {\n      var _isCurrentAsync = (0, _asyncToGenerator2.default)(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var current;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return ParseUser.currentAsync();\n              case 2:\n                current = _context.sent;\n                return _context.abrupt(\"return\", !!current && current.id === this.id);\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function isCurrentAsync() {\n        return _isCurrentAsync.apply(this, arguments);\n      }\n      return isCurrentAsync;\n    }()\n    /**\r\n     * Returns get(\"username\").\r\n     *\r\n     * @returns {string}\r\n     */\n  }, {\n    key: \"getUsername\",\n    value: function getUsername() /*: ?string*/\n    {\n      var username = this.get('username');\n      if (username == null || typeof username === 'string') {\n        return username;\n      }\n      return '';\n    }\n    /**\r\n     * Calls set(\"username\", username, options) and returns the result.\r\n     *\r\n     * @param {string} username\r\n     */\n  }, {\n    key: \"setUsername\",\n    value: function setUsername(username\n    /*: string*/) {\n      // Strip anonymity\n      var authData = this.get('authData');\n      if (authData && (0, _typeof2.default)(authData) === 'object' && authData.hasOwnProperty('anonymous')) {\n        // We need to set anonymous to null instead of deleting it in order to remove it from Parse.\n        authData.anonymous = null;\n      }\n      this.set('username', username);\n    }\n    /**\r\n     * Calls set(\"password\", password, options) and returns the result.\r\n     *\r\n     * @param {string} password User's Password\r\n     */\n  }, {\n    key: \"setPassword\",\n    value: function setPassword(password\n    /*: string*/) {\n      this.set('password', password);\n    }\n    /**\r\n     * Returns get(\"email\").\r\n     *\r\n     * @returns {string} User's Email\r\n     */\n  }, {\n    key: \"getEmail\",\n    value: function getEmail() /*: ?string*/\n    {\n      var email = this.get('email');\n      if (email == null || typeof email === 'string') {\n        return email;\n      }\n      return '';\n    }\n    /**\r\n     * Calls set(\"email\", email) and returns the result.\r\n     *\r\n     * @param {string} email\r\n     * @returns {boolean}\r\n     */\n  }, {\n    key: \"setEmail\",\n    value: function setEmail(email\n    /*: string*/) {\n      return this.set('email', email);\n    }\n    /**\r\n     * Returns the session token for this user, if the user has been logged in,\r\n     * or if it is the result of a query with the master key. Otherwise, returns\r\n     * undefined.\r\n     *\r\n     * @returns {string} the session token, or undefined\r\n     */\n  }, {\n    key: \"getSessionToken\",\n    value: function getSessionToken() /*: ?string*/\n    {\n      var token = this.get('sessionToken');\n      if (token == null || typeof token === 'string') {\n        return token;\n      }\n      return '';\n    }\n    /**\r\n     * Checks whether this user is the current user and has been authenticated.\r\n     *\r\n     * @returns {boolean} whether this user is the current user and is logged in.\r\n     */\n  }, {\n    key: \"authenticated\",\n    value: function authenticated() /*: boolean*/\n    {\n      var current = ParseUser.current();\n      return !!this.get('sessionToken') && !!current && current.id === this.id;\n    }\n    /**\r\n     * Signs up a new user. You should call this instead of save for\r\n     * new Parse.Users. This will create a new Parse.User on the server, and\r\n     * also persist the session on disk so that you can access the user using\r\n     * <code>current</code>.\r\n     *\r\n     * <p>A username and password must be set before calling signUp.</p>\r\n     *\r\n     * @param {object} attrs Extra fields to set on the new user, or null.\r\n     * @param {object} options\r\n     * @returns {Promise} A promise that is fulfilled when the signup\r\n     *     finishes.\r\n     */\n  }, {\n    key: \"signUp\",\n    value: function signUp(attrs\n    /*: AttributeMap*/, options\n    /*:: ?: FullOptions*/) /*: Promise<ParseUser>*/\n    {\n      options = options || {};\n      var signupOptions = {};\n      if (options.hasOwnProperty('useMasterKey')) {\n        signupOptions.useMasterKey = options.useMasterKey;\n      }\n      if (options.hasOwnProperty('installationId')) {\n        signupOptions.installationId = options.installationId;\n      }\n      if (options.hasOwnProperty('context') && Object.prototype.toString.call(options.context) === '[object Object]') {\n        signupOptions.context = options.context;\n      }\n      var controller = _CoreManager.default.getUserController();\n      return controller.signUp(this, attrs, signupOptions);\n    }\n    /**\r\n     * Logs in a Parse.User. On success, this saves the session to disk,\r\n     * so you can retrieve the currently logged in user using\r\n     * <code>current</code>.\r\n     *\r\n     * <p>A username and password must be set before calling logIn.</p>\r\n     *\r\n     * @param {object} options\r\n     * @returns {Promise} A promise that is fulfilled with the user when\r\n     *     the login is complete.\r\n     */\n  }, {\n    key: \"logIn\",\n    value: function logIn(options\n    /*:: ?: FullOptions*/) /*: Promise<ParseUser>*/\n    {\n      options = options || {};\n      var loginOptions = {\n        usePost: true\n      };\n      if (options.hasOwnProperty('useMasterKey')) {\n        loginOptions.useMasterKey = options.useMasterKey;\n      }\n      if (options.hasOwnProperty('installationId')) {\n        loginOptions.installationId = options.installationId;\n      }\n      if (options.hasOwnProperty('usePost')) {\n        loginOptions.usePost = options.usePost;\n      }\n      var controller = _CoreManager.default.getUserController();\n      return controller.logIn(this, loginOptions);\n    }\n    /**\r\n     * Wrap the default save behavior with functionality to save to local\r\n     * storage if this is current user.\r\n     *\r\n     * @param {...any} args\r\n     * @returns {Promise}\r\n     */\n  }, {\n    key: \"save\",\n    value: function () {\n      var _save = (0, _asyncToGenerator2.default)(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var _len,\n          args,\n          _key4,\n          current,\n          _args2 = arguments;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                for (_len = _args2.length, args = new Array(_len), _key4 = 0; _key4 < _len; _key4++) {\n                  args[_key4] = _args2[_key4];\n                }\n                _context2.next = 3;\n                return (0, _get2.default)((0, _getPrototypeOf2.default)(ParseUser.prototype), \"save\", this).apply(this, args);\n              case 3:\n                _context2.next = 5;\n                return this.isCurrentAsync();\n              case 5:\n                current = _context2.sent;\n                if (!current) {\n                  _context2.next = 8;\n                  break;\n                }\n                return _context2.abrupt(\"return\", _CoreManager.default.getUserController().updateUserOnDisk(this));\n              case 8:\n                return _context2.abrupt(\"return\", this);\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n      function save() {\n        return _save.apply(this, arguments);\n      }\n      return save;\n    }()\n    /**\r\n     * Wrap the default destroy behavior with functionality that logs out\r\n     * the current user when it is destroyed\r\n     *\r\n     * @param {...any} args\r\n     * @returns {Parse.User}\r\n     */\n  }, {\n    key: \"destroy\",\n    value: function () {\n      var _destroy = (0, _asyncToGenerator2.default)(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var _len2,\n          args,\n          _key5,\n          current,\n          _args3 = arguments;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                for (_len2 = _args3.length, args = new Array(_len2), _key5 = 0; _key5 < _len2; _key5++) {\n                  args[_key5] = _args3[_key5];\n                }\n                _context3.next = 3;\n                return (0, _get2.default)((0, _getPrototypeOf2.default)(ParseUser.prototype), \"destroy\", this).apply(this, args);\n              case 3:\n                _context3.next = 5;\n                return this.isCurrentAsync();\n              case 5:\n                current = _context3.sent;\n                if (!current) {\n                  _context3.next = 8;\n                  break;\n                }\n                return _context3.abrupt(\"return\", _CoreManager.default.getUserController().removeUserFromDisk());\n              case 8:\n                return _context3.abrupt(\"return\", this);\n              case 9:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n      function destroy() {\n        return _destroy.apply(this, arguments);\n      }\n      return destroy;\n    }()\n    /**\r\n     * Wrap the default fetch behavior with functionality to save to local\r\n     * storage if this is current user.\r\n     *\r\n     * @param {...any} args\r\n     * @returns {Parse.User}\r\n     */\n  }, {\n    key: \"fetch\",\n    value: function () {\n      var _fetch = (0, _asyncToGenerator2.default)(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var _len3,\n          args,\n          _key6,\n          current,\n          _args4 = arguments;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                for (_len3 = _args4.length, args = new Array(_len3), _key6 = 0; _key6 < _len3; _key6++) {\n                  args[_key6] = _args4[_key6];\n                }\n                _context4.next = 3;\n                return (0, _get2.default)((0, _getPrototypeOf2.default)(ParseUser.prototype), \"fetch\", this).apply(this, args);\n              case 3:\n                _context4.next = 5;\n                return this.isCurrentAsync();\n              case 5:\n                current = _context4.sent;\n                if (!current) {\n                  _context4.next = 8;\n                  break;\n                }\n                return _context4.abrupt(\"return\", _CoreManager.default.getUserController().updateUserOnDisk(this));\n              case 8:\n                return _context4.abrupt(\"return\", this);\n              case 9:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n      function fetch() {\n        return _fetch.apply(this, arguments);\n      }\n      return fetch;\n    }()\n    /**\r\n     * Wrap the default fetchWithInclude behavior with functionality to save to local\r\n     * storage if this is current user.\r\n     *\r\n     * @param {...any} args\r\n     * @returns {Parse.User}\r\n     */\n  }, {\n    key: \"fetchWithInclude\",\n    value: function () {\n      var _fetchWithInclude = (0, _asyncToGenerator2.default)(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var _len4,\n          args,\n          _key7,\n          current,\n          _args5 = arguments;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                for (_len4 = _args5.length, args = new Array(_len4), _key7 = 0; _key7 < _len4; _key7++) {\n                  args[_key7] = _args5[_key7];\n                }\n                _context5.next = 3;\n                return (0, _get2.default)((0, _getPrototypeOf2.default)(ParseUser.prototype), \"fetchWithInclude\", this).apply(this, args);\n              case 3:\n                _context5.next = 5;\n                return this.isCurrentAsync();\n              case 5:\n                current = _context5.sent;\n                if (!current) {\n                  _context5.next = 8;\n                  break;\n                }\n                return _context5.abrupt(\"return\", _CoreManager.default.getUserController().updateUserOnDisk(this));\n              case 8:\n                return _context5.abrupt(\"return\", this);\n              case 9:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n      function fetchWithInclude() {\n        return _fetchWithInclude.apply(this, arguments);\n      }\n      return fetchWithInclude;\n    }()\n    /**\r\n     * Verify whether a given password is the password of the current user.\r\n     *\r\n     * @param {string} password A password to be verified\r\n     * @param {object} options\r\n     * @returns {Promise} A promise that is fulfilled with a user\r\n     *  when the password is correct.\r\n     */\n  }, {\n    key: \"verifyPassword\",\n    value: function verifyPassword(password\n    /*: string*/, options\n    /*:: ?: RequestOptions*/) /*: Promise<ParseUser>*/\n    {\n      var username = this.getUsername() || '';\n      return ParseUser.verifyPassword(username, password, options);\n    }\n  }], [{\n    key: \"readOnlyAttributes\",\n    value: function readOnlyAttributes() {\n      return ['sessionToken'];\n    }\n    /**\r\n     * Adds functionality to the existing Parse.User class.\r\n     *\r\n     * @param {object} protoProps A set of properties to add to the prototype\r\n     * @param {object} classProps A set of static properties to add to the class\r\n     * @static\r\n     * @returns {Parse.User} The newly extended Parse.User class\r\n     */\n  }, {\n    key: \"extend\",\n    value: function extend(protoProps\n    /*: { [prop: string]: any }*/, classProps\n    /*: { [prop: string]: any }*/) {\n      if (protoProps) {\n        for (var _prop in protoProps) {\n          if (_prop !== 'className') {\n            (0, _defineProperty.default)(ParseUser.prototype, _prop, {\n              value: protoProps[_prop],\n              enumerable: false,\n              writable: true,\n              configurable: true\n            });\n          }\n        }\n      }\n      if (classProps) {\n        for (var _prop2 in classProps) {\n          if (_prop2 !== 'className') {\n            (0, _defineProperty.default)(ParseUser, _prop2, {\n              value: classProps[_prop2],\n              enumerable: false,\n              writable: true,\n              configurable: true\n            });\n          }\n        }\n      }\n      return ParseUser;\n    }\n    /**\r\n     * Retrieves the currently logged in ParseUser with a valid session,\r\n     * either from memory or localStorage, if necessary.\r\n     *\r\n     * @static\r\n     * @returns {Parse.Object} The currently logged in Parse.User.\r\n     */\n  }, {\n    key: \"current\",\n    value: function current() /*: ?ParseUser*/\n    {\n      if (!canUseCurrentUser) {\n        return null;\n      }\n      var controller = _CoreManager.default.getUserController();\n      return controller.currentUser();\n    }\n    /**\r\n     * Retrieves the currently logged in ParseUser from asynchronous Storage.\r\n     *\r\n     * @static\r\n     * @returns {Promise} A Promise that is resolved with the currently\r\n     *   logged in Parse User\r\n     */\n  }, {\n    key: \"currentAsync\",\n    value: function currentAsync() /*: Promise<?ParseUser>*/\n    {\n      if (!canUseCurrentUser) {\n        return _promise.default.resolve(null);\n      }\n      var controller = _CoreManager.default.getUserController();\n      return controller.currentUserAsync();\n    }\n    /**\r\n     * Signs up a new user with a username (or email) and password.\r\n     * This will create a new Parse.User on the server, and also persist the\r\n     * session in localStorage so that you can access the user using\r\n     * {@link #current}.\r\n     *\r\n     * @param {string} username The username (or email) to sign up with.\r\n     * @param {string} password The password to sign up with.\r\n     * @param {object} attrs Extra fields to set on the new user.\r\n     * @param {object} options\r\n     * @static\r\n     * @returns {Promise} A promise that is fulfilled with the user when\r\n     *     the signup completes.\r\n     */\n  }, {\n    key: \"signUp\",\n    value: function signUp(username\n    /*: string*/, password\n    /*: string*/, attrs\n    /*: AttributeMap*/, options\n    /*:: ?: FullOptions*/) {\n      attrs = attrs || {};\n      attrs.username = username;\n      attrs.password = password;\n      var user = new this(attrs);\n      return user.signUp({}, options);\n    }\n    /**\r\n     * Logs in a user with a username (or email) and password. On success, this\r\n     * saves the session to disk, so you can retrieve the currently logged in\r\n     * user using <code>current</code>.\r\n     *\r\n     * @param {string} username The username (or email) to log in with.\r\n     * @param {string} password The password to log in with.\r\n     * @param {object} options\r\n     * @static\r\n     * @returns {Promise} A promise that is fulfilled with the user when\r\n     *     the login completes.\r\n     */\n  }, {\n    key: \"logIn\",\n    value: function logIn(username\n    /*: string*/, password\n    /*: string*/, options\n    /*:: ?: FullOptions*/) {\n      if (typeof username !== 'string') {\n        return _promise.default.reject(new _ParseError.default(_ParseError.default.OTHER_CAUSE, 'Username must be a string.'));\n      } else if (typeof password !== 'string') {\n        return _promise.default.reject(new _ParseError.default(_ParseError.default.OTHER_CAUSE, 'Password must be a string.'));\n      }\n      var user = new this();\n      user._finishFetch({\n        username: username,\n        password: password\n      });\n      return user.logIn(options);\n    }\n    /**\r\n     * Logs in a user with a session token. On success, this saves the session\r\n     * to disk, so you can retrieve the currently logged in user using\r\n     * <code>current</code>.\r\n     *\r\n     * @param {string} sessionToken The sessionToken to log in with.\r\n     * @param {object} options\r\n     * @static\r\n     * @returns {Promise} A promise that is fulfilled with the user when\r\n     *     the login completes.\r\n     */\n  }, {\n    key: \"become\",\n    value: function become(sessionToken\n    /*: string*/, options\n    /*:: ?: RequestOptions*/) {\n      if (!canUseCurrentUser) {\n        throw new Error('It is not memory-safe to become a user in a server environment');\n      }\n      options = options || {};\n      var becomeOptions\n      /*: RequestOptions*/ = {\n        sessionToken: sessionToken\n      };\n      if (options.hasOwnProperty('useMasterKey')) {\n        becomeOptions.useMasterKey = options.useMasterKey;\n      }\n      var controller = _CoreManager.default.getUserController();\n      var user = new this();\n      return controller.become(user, becomeOptions);\n    }\n    /**\r\n     * Retrieves a user with a session token.\r\n     *\r\n     * @param {string} sessionToken The sessionToken to get user with.\r\n     * @param {object} options\r\n     * @static\r\n     * @returns {Promise} A promise that is fulfilled with the user is fetched.\r\n     */\n  }, {\n    key: \"me\",\n    value: function me(sessionToken\n    /*: string*/) {\n      var options\n      /*:: ?: RequestOptions*/ = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var controller = _CoreManager.default.getUserController();\n      var meOptions\n      /*: RequestOptions*/ = {\n        sessionToken: sessionToken\n      };\n      if (options.useMasterKey) {\n        meOptions.useMasterKey = options.useMasterKey;\n      }\n      var user = new this();\n      return controller.me(user, meOptions);\n    }\n    /**\r\n     * Logs in a user with a session token. On success, this saves the session\r\n     * to disk, so you can retrieve the currently logged in user using\r\n     * <code>current</code>. If there is no session token the user will not logged in.\r\n     *\r\n     * @param {object} userJSON The JSON map of the User's data\r\n     * @static\r\n     * @returns {Promise} A promise that is fulfilled with the user when\r\n     *     the login completes.\r\n     */\n  }, {\n    key: \"hydrate\",\n    value: function hydrate(userJSON\n    /*: AttributeMap*/) {\n      var controller = _CoreManager.default.getUserController();\n      var user = new this();\n      return controller.hydrate(user, userJSON);\n    }\n    /**\r\n     * Static version of {@link https://parseplatform.org/Parse-SDK-JS/api/master/Parse.User.html#linkWith linkWith}\r\n     *\r\n     * @param provider\r\n     * @param options\r\n     * @param saveOpts\r\n     * @static\r\n     * @returns {Promise}\r\n     */\n  }, {\n    key: \"logInWith\",\n    value: function logInWith(provider\n    /*: any*/, options\n    /*: { authData?: AuthData }*/, saveOpts\n    /*:: ?: FullOptions*/) /*: Promise<ParseUser>*/\n    {\n      var user = new this();\n      return user.linkWith(provider, options, saveOpts);\n    }\n    /**\r\n     * Logs out the currently logged in user session. This will remove the\r\n     * session from disk, log out of linked services, and future calls to\r\n     * <code>current</code> will return <code>null</code>.\r\n     *\r\n     * @param {object} options\r\n     * @static\r\n     * @returns {Promise} A promise that is resolved when the session is\r\n     *   destroyed on the server.\r\n     */\n  }, {\n    key: \"logOut\",\n    value: function logOut() {\n      var options\n      /*: RequestOptions*/ = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var controller = _CoreManager.default.getUserController();\n      return controller.logOut(options);\n    }\n    /**\r\n     * Requests a password reset email to be sent to the specified email address\r\n     * associated with the user account. This email allows the user to securely\r\n     * reset their password on the Parse site.\r\n     *\r\n     * @param {string} email The email address associated with the user that\r\n     *     forgot their password.\r\n     * @param {object} options\r\n     * @static\r\n     * @returns {Promise}\r\n     */\n  }, {\n    key: \"requestPasswordReset\",\n    value: function requestPasswordReset(email\n    /*: string*/, options\n    /*:: ?: RequestOptions*/) {\n      options = options || {};\n      var requestOptions = {};\n      if (options.hasOwnProperty('useMasterKey')) {\n        requestOptions.useMasterKey = options.useMasterKey;\n      }\n      var controller = _CoreManager.default.getUserController();\n      return controller.requestPasswordReset(email, requestOptions);\n    }\n    /**\r\n     * Request an email verification.\r\n     *\r\n     * @param {string} email The email address associated with the user that\r\n     *     needs to verify their email.\r\n     * @param {object} options\r\n     * @static\r\n     * @returns {Promise}\r\n     */\n  }, {\n    key: \"requestEmailVerification\",\n    value: function requestEmailVerification(email\n    /*: string*/, options\n    /*:: ?: RequestOptions*/) {\n      options = options || {};\n      var requestOptions = {};\n      if (options.hasOwnProperty('useMasterKey')) {\n        requestOptions.useMasterKey = options.useMasterKey;\n      }\n      var controller = _CoreManager.default.getUserController();\n      return controller.requestEmailVerification(email, requestOptions);\n    }\n    /**\r\n     * Verify whether a given password is the password of the current user.\r\n     *\r\n     * @param {string} username  A username to be used for identificaiton\r\n     * @param {string} password A password to be verified\r\n     * @param {object} options\r\n     * @static\r\n     * @returns {Promise} A promise that is fulfilled with a user\r\n     *  when the password is correct.\r\n     */\n  }, {\n    key: \"verifyPassword\",\n    value: function verifyPassword(username\n    /*: string*/, password\n    /*: string*/, options\n    /*:: ?: RequestOptions*/) {\n      if (typeof username !== 'string') {\n        return _promise.default.reject(new _ParseError.default(_ParseError.default.OTHER_CAUSE, 'Username must be a string.'));\n      }\n      if (typeof password !== 'string') {\n        return _promise.default.reject(new _ParseError.default(_ParseError.default.OTHER_CAUSE, 'Password must be a string.'));\n      }\n      options = options || {};\n      var verificationOption = {};\n      if (options.hasOwnProperty('useMasterKey')) {\n        verificationOption.useMasterKey = options.useMasterKey;\n      }\n      var controller = _CoreManager.default.getUserController();\n      return controller.verifyPassword(username, password, verificationOption);\n    }\n    /**\r\n     * Allow someone to define a custom User class without className\r\n     * being rewritten to _User. The default behavior is to rewrite\r\n     * User to _User for legacy reasons. This allows developers to\r\n     * override that behavior.\r\n     *\r\n     * @param {boolean} isAllowed Whether or not to allow custom User class\r\n     * @static\r\n     */\n  }, {\n    key: \"allowCustomUserClass\",\n    value: function allowCustomUserClass(isAllowed\n    /*: boolean*/) {\n      _CoreManager.default.set('PERFORM_USER_REWRITE', !isAllowed);\n    }\n    /**\r\n     * Allows a legacy application to start using revocable sessions. If the\r\n     * current session token is not revocable, a request will be made for a new,\r\n     * revocable session.\r\n     * It is not necessary to call this method from cloud code unless you are\r\n     * handling user signup or login from the server side. In a cloud code call,\r\n     * this function will not attempt to upgrade the current token.\r\n     *\r\n     * @param {object} options\r\n     * @static\r\n     * @returns {Promise} A promise that is resolved when the process has\r\n     *   completed. If a replacement session token is requested, the promise\r\n     *   will be resolved after a new token has been fetched.\r\n     */\n  }, {\n    key: \"enableRevocableSession\",\n    value: function enableRevocableSession(options\n    /*:: ?: RequestOptions*/) {\n      options = options || {};\n      _CoreManager.default.set('FORCE_REVOCABLE_SESSION', true);\n      if (canUseCurrentUser) {\n        var current = ParseUser.current();\n        if (current) {\n          return current._upgradeToRevocableSession(options);\n        }\n      }\n      return _promise.default.resolve();\n    }\n    /**\r\n     * Enables the use of become or the current user in a server\r\n     * environment. These features are disabled by default, since they depend on\r\n     * global objects that are not memory-safe for most servers.\r\n     *\r\n     * @static\r\n     */\n  }, {\n    key: \"enableUnsafeCurrentUser\",\n    value: function enableUnsafeCurrentUser() {\n      canUseCurrentUser = true;\n    }\n    /**\r\n     * Disables the use of become or the current user in any environment.\r\n     * These features are disabled on servers by default, since they depend on\r\n     * global objects that are not memory-safe for most servers.\r\n     *\r\n     * @static\r\n     */\n  }, {\n    key: \"disableUnsafeCurrentUser\",\n    value: function disableUnsafeCurrentUser() {\n      canUseCurrentUser = false;\n    }\n    /**\r\n     * When registering users with {@link https://parseplatform.org/Parse-SDK-JS/api/master/Parse.User.html#linkWith linkWith} a basic auth provider\r\n     * is automatically created for you.\r\n     *\r\n     * For advanced authentication, you can register an Auth provider to\r\n     * implement custom authentication, deauthentication.\r\n     *\r\n     * @param provider\r\n     * @see {@link https://parseplatform.org/Parse-SDK-JS/api/master/AuthProvider.html AuthProvider}\r\n     * @see {@link https://docs.parseplatform.org/js/guide/#custom-authentication-module Custom Authentication Module}\r\n     * @static\r\n     */\n  }, {\n    key: \"_registerAuthenticationProvider\",\n    value: function _registerAuthenticationProvider(provider\n    /*: any*/) {\n      authProviders[provider.getAuthType()] = provider; // Synchronize the current user with the auth provider.\n\n      ParseUser.currentAsync().then(function (current) {\n        if (current) {\n          current._synchronizeAuthData(provider.getAuthType());\n        }\n      });\n    }\n    /**\r\n     * @param provider\r\n     * @param options\r\n     * @param saveOpts\r\n     * @deprecated since 2.9.0 see {@link https://parseplatform.org/Parse-SDK-JS/api/master/Parse.User.html#logInWith logInWith}\r\n     * @static\r\n     * @returns {Promise}\r\n     */\n  }, {\n    key: \"_logInWith\",\n    value: function _logInWith(provider\n    /*: any*/, options\n    /*: { authData?: AuthData }*/, saveOpts\n    /*:: ?: FullOptions*/) {\n      var user = new this();\n      return user.linkWith(provider, options, saveOpts);\n    }\n  }, {\n    key: \"_clearCache\",\n    value: function _clearCache() {\n      currentUserCache = null;\n      currentUserCacheMatchesDisk = false;\n    }\n  }, {\n    key: \"_setCurrentUserCache\",\n    value: function _setCurrentUserCache(user\n    /*: ParseUser*/) {\n      currentUserCache = user;\n    }\n  }]);\n  return ParseUser;\n}(_ParseObject2.default);\n_ParseObject2.default.registerSubclass('_User', ParseUser);\nvar DefaultController = {\n  updateUserOnDisk: function updateUserOnDisk(user) {\n    var path = _Storage.default.generatePath(CURRENT_USER_KEY);\n    var json = user.toJSON();\n    delete json.password;\n    json.className = '_User';\n    var userData = (0, _stringify.default)(json);\n    if (_CoreManager.default.get('ENCRYPTED_USER')) {\n      var crypto = _CoreManager.default.getCryptoController();\n      userData = crypto.encrypt(json, _CoreManager.default.get('ENCRYPTED_KEY'));\n    }\n    return _Storage.default.setItemAsync(path, userData).then(function () {\n      return user;\n    });\n  },\n  removeUserFromDisk: function removeUserFromDisk() {\n    var path = _Storage.default.generatePath(CURRENT_USER_KEY);\n    currentUserCacheMatchesDisk = true;\n    currentUserCache = null;\n    return _Storage.default.removeItemAsync(path);\n  },\n  setCurrentUser: function setCurrentUser(user) {\n    currentUserCache = user;\n    user._cleanupAuthData();\n    user._synchronizeAllAuthData();\n    return DefaultController.updateUserOnDisk(user);\n  },\n  currentUser: function currentUser() /*: ?ParseUser*/\n  {\n    if (currentUserCache) {\n      return currentUserCache;\n    }\n    if (currentUserCacheMatchesDisk) {\n      return null;\n    }\n    if (_Storage.default.async()) {\n      throw new Error('Cannot call currentUser() when using a platform with an async ' + 'storage system. Call currentUserAsync() instead.');\n    }\n    var path = _Storage.default.generatePath(CURRENT_USER_KEY);\n    var userData = _Storage.default.getItem(path);\n    currentUserCacheMatchesDisk = true;\n    if (!userData) {\n      currentUserCache = null;\n      return null;\n    }\n    if (_CoreManager.default.get('ENCRYPTED_USER')) {\n      var crypto = _CoreManager.default.getCryptoController();\n      userData = crypto.decrypt(userData, _CoreManager.default.get('ENCRYPTED_KEY'));\n    }\n    userData = JSON.parse(userData);\n    if (!userData.className) {\n      userData.className = '_User';\n    }\n    if (userData._id) {\n      if (userData.objectId !== userData._id) {\n        userData.objectId = userData._id;\n      }\n      delete userData._id;\n    }\n    if (userData._sessionToken) {\n      userData.sessionToken = userData._sessionToken;\n      delete userData._sessionToken;\n    }\n    var current = _ParseObject2.default.fromJSON(userData);\n    currentUserCache = current;\n    current._synchronizeAllAuthData();\n    return current;\n  },\n  currentUserAsync: function currentUserAsync() /*: Promise<?ParseUser>*/\n  {\n    if (currentUserCache) {\n      return _promise.default.resolve(currentUserCache);\n    }\n    if (currentUserCacheMatchesDisk) {\n      return _promise.default.resolve(null);\n    }\n    var path = _Storage.default.generatePath(CURRENT_USER_KEY);\n    return _Storage.default.getItemAsync(path).then(function (userData) {\n      currentUserCacheMatchesDisk = true;\n      if (!userData) {\n        currentUserCache = null;\n        return _promise.default.resolve(null);\n      }\n      if (_CoreManager.default.get('ENCRYPTED_USER')) {\n        var crypto = _CoreManager.default.getCryptoController();\n        userData = crypto.decrypt(userData.toString(), _CoreManager.default.get('ENCRYPTED_KEY'));\n      }\n      userData = JSON.parse(userData);\n      if (!userData.className) {\n        userData.className = '_User';\n      }\n      if (userData._id) {\n        if (userData.objectId !== userData._id) {\n          userData.objectId = userData._id;\n        }\n        delete userData._id;\n      }\n      if (userData._sessionToken) {\n        userData.sessionToken = userData._sessionToken;\n        delete userData._sessionToken;\n      }\n      var current = _ParseObject2.default.fromJSON(userData);\n      currentUserCache = current;\n      current._synchronizeAllAuthData();\n      return _promise.default.resolve(current);\n    });\n  },\n  signUp: function signUp(user\n  /*: ParseUser*/, attrs\n  /*: AttributeMap*/, options\n  /*: RequestOptions*/) /*: Promise<ParseUser>*/\n  {\n    var username = attrs && attrs.username || user.get('username');\n    var password = attrs && attrs.password || user.get('password');\n    if (!username || !username.length) {\n      return _promise.default.reject(new _ParseError.default(_ParseError.default.OTHER_CAUSE, 'Cannot sign up user with an empty username.'));\n    }\n    if (!password || !password.length) {\n      return _promise.default.reject(new _ParseError.default(_ParseError.default.OTHER_CAUSE, 'Cannot sign up user with an empty password.'));\n    }\n    return user.save(attrs, options).then(function () {\n      // Clear the password field\n      user._finishFetch({\n        password: undefined\n      });\n      if (canUseCurrentUser) {\n        return DefaultController.setCurrentUser(user);\n      }\n      return user;\n    });\n  },\n  logIn: function logIn(user\n  /*: ParseUser*/, options\n  /*: RequestOptions*/) /*: Promise<ParseUser>*/\n  {\n    var RESTController = _CoreManager.default.getRESTController();\n    var stateController = _CoreManager.default.getObjectStateController();\n    var auth = {\n      username: user.get('username'),\n      password: user.get('password')\n    };\n    return RESTController.request(options.usePost ? 'POST' : 'GET', 'login', auth, options).then(function (response) {\n      user._migrateId(response.objectId);\n      user._setExisted(true);\n      stateController.setPendingOp(user._getStateIdentifier(), 'username', undefined);\n      stateController.setPendingOp(user._getStateIdentifier(), 'password', undefined);\n      response.password = undefined;\n      user._finishFetch(response);\n      if (!canUseCurrentUser) {\n        // We can't set the current user, so just return the one we logged in\n        return _promise.default.resolve(user);\n      }\n      return DefaultController.setCurrentUser(user);\n    });\n  },\n  become: function become(user\n  /*: ParseUser*/, options\n  /*: RequestOptions*/) /*: Promise<ParseUser>*/\n  {\n    var RESTController = _CoreManager.default.getRESTController();\n    return RESTController.request('GET', 'users/me', {}, options).then(function (response) {\n      user._finishFetch(response);\n      user._setExisted(true);\n      return DefaultController.setCurrentUser(user);\n    });\n  },\n  hydrate: function hydrate(user\n  /*: ParseUser*/, userJSON\n  /*: AttributeMap*/) /*: Promise<ParseUser>*/\n  {\n    user._finishFetch(userJSON);\n    user._setExisted(true);\n    if (userJSON.sessionToken && canUseCurrentUser) {\n      return DefaultController.setCurrentUser(user);\n    } else {\n      return _promise.default.resolve(user);\n    }\n  },\n  me: function me(user\n  /*: ParseUser*/, options\n  /*: RequestOptions*/) /*: Promise<ParseUser>*/\n  {\n    var RESTController = _CoreManager.default.getRESTController();\n    return RESTController.request('GET', 'users/me', {}, options).then(function (response) {\n      user._finishFetch(response);\n      user._setExisted(true);\n      return user;\n    });\n  },\n  logOut: function logOut(options\n  /*: RequestOptions*/) /*: Promise<ParseUser>*/\n  {\n    var RESTController = _CoreManager.default.getRESTController();\n    if (options.sessionToken) {\n      return RESTController.request('POST', 'logout', {}, options);\n    }\n    return DefaultController.currentUserAsync().then(function (currentUser) {\n      var path = _Storage.default.generatePath(CURRENT_USER_KEY);\n      var promise = _Storage.default.removeItemAsync(path);\n      if (currentUser !== null) {\n        var currentSession = currentUser.getSessionToken();\n        if (currentSession && (0, _isRevocableSession.default)(currentSession)) {\n          promise = promise.then(function () {\n            return RESTController.request('POST', 'logout', {}, {\n              sessionToken: currentSession\n            });\n          });\n        }\n        currentUser._logOutWithAll();\n        currentUser._finishFetch({\n          sessionToken: undefined\n        });\n      }\n      currentUserCacheMatchesDisk = true;\n      currentUserCache = null;\n      return promise;\n    });\n  },\n  requestPasswordReset: function requestPasswordReset(email\n  /*: string*/, options\n  /*: RequestOptions*/) {\n    var RESTController = _CoreManager.default.getRESTController();\n    return RESTController.request('POST', 'requestPasswordReset', {\n      email: email\n    }, options);\n  },\n  upgradeToRevocableSession: function upgradeToRevocableSession(user\n  /*: ParseUser*/, options\n  /*: RequestOptions*/) {\n    return (0, _asyncToGenerator2.default)(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n      var token, RESTController, result, session, current;\n      return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              token = user.getSessionToken();\n              if (token) {\n                _context6.next = 3;\n                break;\n              }\n              return _context6.abrupt(\"return\", _promise.default.reject(new _ParseError.default(_ParseError.default.SESSION_MISSING, 'Cannot upgrade a user with no session token')));\n            case 3:\n              options.sessionToken = token;\n              RESTController = _CoreManager.default.getRESTController();\n              _context6.next = 7;\n              return RESTController.request('POST', 'upgradeToRevocableSession', {}, options);\n            case 7:\n              result = _context6.sent;\n              session = new _ParseSession.default();\n              session._finishFetch(result);\n              user._finishFetch({\n                sessionToken: session.getSessionToken()\n              });\n              _context6.next = 13;\n              return user.isCurrentAsync();\n            case 13:\n              current = _context6.sent;\n              if (!current) {\n                _context6.next = 16;\n                break;\n              }\n              return _context6.abrupt(\"return\", DefaultController.setCurrentUser(user));\n            case 16:\n              return _context6.abrupt(\"return\", _promise.default.resolve(user));\n            case 17:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }))();\n  },\n  linkWith: function linkWith(user\n  /*: ParseUser*/, authData\n  /*: AuthData*/, options\n  /*: FullOptions*/) {\n    return user.save({\n      authData: authData\n    }, options).then(function () {\n      if (canUseCurrentUser) {\n        return DefaultController.setCurrentUser(user);\n      }\n      return user;\n    });\n  },\n  verifyPassword: function verifyPassword(username\n  /*: string*/, password\n  /*: string*/, options\n  /*: RequestOptions*/) {\n    var RESTController = _CoreManager.default.getRESTController();\n    return RESTController.request('GET', 'verifyPassword', {\n      username: username,\n      password: password\n    }, options);\n  },\n  requestEmailVerification: function requestEmailVerification(email\n  /*: string*/, options\n  /*: RequestOptions*/) {\n    var RESTController = _CoreManager.default.getRESTController();\n    return RESTController.request('POST', 'verificationEmailRequest', {\n      email: email\n    }, options);\n  }\n};\n_CoreManager.default.setUserController(DefaultController);\nvar _default = ParseUser;\nexports.default = _default;","map":{"version":3,"names":["_interopRequireDefault","require","_sliceInstanceProperty","_reverseInstanceProperty","_Promise2","_Object$setPrototypeOf","_typeof3","_forEachInstanceProperty","_Object$getPrototypeOf","_Object$create","_Object$defineProperty2","_Symbol","_Reflect$construct","exports","value","default","_stringify","_defineProperty","_asyncToGenerator2","_promise","_typeof2","_classCallCheck2","_createClass2","_get2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_CoreManager","_isRevocableSession","_ParseError","_ParseObject2","_ParseSession","_Storage","_regeneratorRuntime","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","state","method","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","defineIteratorMethods","_context7","AsyncIterator","PromiseImpl","invoke","resolve","reject","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","__proto__","awrap","async","iter","keys","object","pop","skipTempReset","_context8","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","Super","NewTarget","arguments","apply","Reflect","sham","Proxy","Boolean","valueOf","e","CURRENT_USER_KEY","canUseCurrentUser","get","currentUserCacheMatchesDisk","currentUserCache","authProviders","ParseUser","_ParseObject","_super","attributes","_this","set","options","upgradeOptions","useMasterKey","controller","getUserController","upgradeToRevocableSession","provider","_this2","saveOpts","sessionToken","getSessionToken","authType","authProvider","restoreAuthentication","getAuthType","authData","linkWith","authenticate","success","opts","_error","isCurrent","_unlinkFrom","_key","_synchronizeAuthData","_key2","_this3","_key3","_logOutWith","deauthenticate","current","id","_isCurrentAsync","_callee","_callee$","_context","currentAsync","isCurrentAsync","getUsername","username","setUsername","anonymous","setPassword","password","getEmail","email","setEmail","token","authenticated","signUp","attrs","signupOptions","installationId","toString","logIn","loginOptions","usePost","_save","_callee2","_len","args","_key4","_args2","_callee2$","_context2","Array","updateUserOnDisk","save","_destroy","_callee3","_len2","_key5","_args3","_callee3$","_context3","removeUserFromDisk","destroy","_fetch","_callee4","_len3","_key6","_args4","_callee4$","_context4","fetch","_fetchWithInclude","_callee5","_len4","_key7","_args5","_callee5$","_context5","fetchWithInclude","verifyPassword","readOnlyAttributes","extend","protoProps","classProps","_prop","_prop2","currentUser","currentUserAsync","user","OTHER_CAUSE","_finishFetch","become","becomeOptions","me","meOptions","hydrate","userJSON","logInWith","logOut","requestPasswordReset","requestOptions","requestEmailVerification","verificationOption","allowCustomUserClass","isAllowed","enableRevocableSession","_upgradeToRevocableSession","enableUnsafeCurrentUser","disableUnsafeCurrentUser","_registerAuthenticationProvider","_logInWith","_clearCache","_setCurrentUserCache","registerSubclass","DefaultController","path","generatePath","json","toJSON","className","userData","crypto","getCryptoController","encrypt","setItemAsync","removeItemAsync","setCurrentUser","_cleanupAuthData","_synchronizeAllAuthData","getItem","decrypt","JSON","parse","_id","objectId","_sessionToken","fromJSON","getItemAsync","RESTController","getRESTController","stateController","getObjectStateController","auth","request","response","_migrateId","_setExisted","setPendingOp","_getStateIdentifier","promise","currentSession","_logOutWithAll","_callee6","session","_callee6$","_context6","SESSION_MISSING","setUserController","_default"],"sources":["C:/Users/chtdu/Documents/WEB DEV/git-repo/react-webpack8/node_modules/parse/lib/browser/ParseUser.js"],"sourcesContent":["\"use strict\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\r\n\r\nvar _sliceInstanceProperty = require(\"@babel/runtime-corejs3/core-js-stable/instance/slice\");\r\n\r\nvar _reverseInstanceProperty = require(\"@babel/runtime-corejs3/core-js-stable/instance/reverse\");\r\n\r\nvar _Promise2 = require(\"@babel/runtime-corejs3/core-js-stable/promise\");\r\n\r\nvar _Object$setPrototypeOf = require(\"@babel/runtime-corejs3/core-js-stable/object/set-prototype-of\");\r\n\r\nvar _typeof3 = require(\"@babel/runtime-corejs3/helpers/typeof\");\r\n\r\nvar _forEachInstanceProperty = require(\"@babel/runtime-corejs3/core-js-stable/instance/for-each\");\r\n\r\nvar _Object$getPrototypeOf = require(\"@babel/runtime-corejs3/core-js-stable/object/get-prototype-of\");\r\n\r\nvar _Object$create = require(\"@babel/runtime-corejs3/core-js-stable/object/create\");\r\n\r\nvar _Object$defineProperty2 = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\r\n\r\nvar _Symbol = require(\"@babel/runtime-corejs3/core-js-stable/symbol\");\r\n\r\nvar _Reflect$construct = require(\"@babel/runtime-corejs3/core-js-stable/reflect/construct\");\r\n\r\n_Object$defineProperty2(exports, \"__esModule\", {\r\n  value: true\r\n});\r\n\r\nexports.default = void 0;\r\n\r\nvar _stringify = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/json/stringify\"));\r\n\r\nvar _defineProperty = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\"));\r\n\r\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/asyncToGenerator\"));\r\n\r\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/promise\"));\r\n\r\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/typeof\"));\r\n\r\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/classCallCheck\"));\r\n\r\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/createClass\"));\r\n\r\nvar _get2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/get\"));\r\n\r\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/inherits\"));\r\n\r\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/possibleConstructorReturn\"));\r\n\r\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/getPrototypeOf\"));\r\n\r\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\r\n\r\nvar _isRevocableSession = _interopRequireDefault(require(\"./isRevocableSession\"));\r\n\r\nvar _ParseError = _interopRequireDefault(require(\"./ParseError\"));\r\n\r\nvar _ParseObject2 = _interopRequireDefault(require(\"./ParseObject\"));\r\n\r\nvar _ParseSession = _interopRequireDefault(require(\"./ParseSession\"));\r\n\r\nvar _Storage = _interopRequireDefault(require(\"./Storage\"));\r\n\r\nfunction _regeneratorRuntime() {\r\n  \"use strict\";\r\n  /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\r\n\r\n  _regeneratorRuntime = function () {\r\n    return exports;\r\n  };\r\n\r\n  var exports = {},\r\n      Op = Object.prototype,\r\n      hasOwn = Op.hasOwnProperty,\r\n      $Symbol = \"function\" == typeof _Symbol ? _Symbol : {},\r\n      iteratorSymbol = $Symbol.iterator || \"@@iterator\",\r\n      asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\r\n      toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\r\n\r\n  function define(obj, key, value) {\r\n    return _Object$defineProperty2(obj, key, {\r\n      value: value,\r\n      enumerable: !0,\r\n      configurable: !0,\r\n      writable: !0\r\n    }), obj[key];\r\n  }\r\n\r\n  try {\r\n    define({}, \"\");\r\n  } catch (err) {\r\n    define = function (obj, key, value) {\r\n      return obj[key] = value;\r\n    };\r\n  }\r\n\r\n  function wrap(innerFn, outerFn, self, tryLocsList) {\r\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\r\n        generator = _Object$create(protoGenerator.prototype),\r\n        context = new Context(tryLocsList || []);\r\n\r\n    return generator._invoke = function (innerFn, self, context) {\r\n      var state = \"suspendedStart\";\r\n      return function (method, arg) {\r\n        if (\"executing\" === state) throw new Error(\"Generator is already running\");\r\n\r\n        if (\"completed\" === state) {\r\n          if (\"throw\" === method) throw arg;\r\n          return doneResult();\r\n        }\r\n\r\n        for (context.method = method, context.arg = arg;;) {\r\n          var delegate = context.delegate;\r\n\r\n          if (delegate) {\r\n            var delegateResult = maybeInvokeDelegate(delegate, context);\r\n\r\n            if (delegateResult) {\r\n              if (delegateResult === ContinueSentinel) continue;\r\n              return delegateResult;\r\n            }\r\n          }\r\n\r\n          if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\r\n            if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\r\n            context.dispatchException(context.arg);\r\n          } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\r\n          state = \"executing\";\r\n          var record = tryCatch(innerFn, self, context);\r\n\r\n          if (\"normal\" === record.type) {\r\n            if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\r\n            return {\r\n              value: record.arg,\r\n              done: context.done\r\n            };\r\n          }\r\n\r\n          \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\r\n        }\r\n      };\r\n    }(innerFn, self, context), generator;\r\n  }\r\n\r\n  function tryCatch(fn, obj, arg) {\r\n    try {\r\n      return {\r\n        type: \"normal\",\r\n        arg: fn.call(obj, arg)\r\n      };\r\n    } catch (err) {\r\n      return {\r\n        type: \"throw\",\r\n        arg: err\r\n      };\r\n    }\r\n  }\r\n\r\n  exports.wrap = wrap;\r\n  var ContinueSentinel = {};\r\n\r\n  function Generator() {}\r\n\r\n  function GeneratorFunction() {}\r\n\r\n  function GeneratorFunctionPrototype() {}\r\n\r\n  var IteratorPrototype = {};\r\n  define(IteratorPrototype, iteratorSymbol, function () {\r\n    return this;\r\n  });\r\n  var getProto = _Object$getPrototypeOf,\r\n      NativeIteratorPrototype = getProto && getProto(getProto(values([])));\r\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\r\n\r\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = _Object$create(IteratorPrototype);\r\n\r\n  function defineIteratorMethods(prototype) {\r\n    var _context7;\r\n\r\n    _forEachInstanceProperty(_context7 = [\"next\", \"throw\", \"return\"]).call(_context7, function (method) {\r\n      define(prototype, method, function (arg) {\r\n        return this._invoke(method, arg);\r\n      });\r\n    });\r\n  }\r\n\r\n  function AsyncIterator(generator, PromiseImpl) {\r\n    function invoke(method, arg, resolve, reject) {\r\n      var record = tryCatch(generator[method], generator, arg);\r\n\r\n      if (\"throw\" !== record.type) {\r\n        var result = record.arg,\r\n            value = result.value;\r\n        return value && \"object\" == _typeof3(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\r\n          invoke(\"next\", value, resolve, reject);\r\n        }, function (err) {\r\n          invoke(\"throw\", err, resolve, reject);\r\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\r\n          result.value = unwrapped, resolve(result);\r\n        }, function (error) {\r\n          return invoke(\"throw\", error, resolve, reject);\r\n        });\r\n      }\r\n\r\n      reject(record.arg);\r\n    }\r\n\r\n    var previousPromise;\r\n\r\n    this._invoke = function (method, arg) {\r\n      function callInvokeWithMethodAndArg() {\r\n        return new PromiseImpl(function (resolve, reject) {\r\n          invoke(method, arg, resolve, reject);\r\n        });\r\n      }\r\n\r\n      return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\r\n    };\r\n  }\r\n\r\n  function maybeInvokeDelegate(delegate, context) {\r\n    var method = delegate.iterator[context.method];\r\n\r\n    if (undefined === method) {\r\n      if (context.delegate = null, \"throw\" === context.method) {\r\n        if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel;\r\n        context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\r\n      }\r\n\r\n      return ContinueSentinel;\r\n    }\r\n\r\n    var record = tryCatch(method, delegate.iterator, context.arg);\r\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\r\n    var info = record.arg;\r\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\r\n  }\r\n\r\n  function pushTryEntry(locs) {\r\n    var entry = {\r\n      tryLoc: locs[0]\r\n    };\r\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\r\n  }\r\n\r\n  function resetTryEntry(entry) {\r\n    var record = entry.completion || {};\r\n    record.type = \"normal\", delete record.arg, entry.completion = record;\r\n  }\r\n\r\n  function Context(tryLocsList) {\r\n    this.tryEntries = [{\r\n      tryLoc: \"root\"\r\n    }], _forEachInstanceProperty(tryLocsList).call(tryLocsList, pushTryEntry, this), this.reset(!0);\r\n  }\r\n\r\n  function values(iterable) {\r\n    if (iterable) {\r\n      var iteratorMethod = iterable[iteratorSymbol];\r\n      if (iteratorMethod) return iteratorMethod.call(iterable);\r\n      if (\"function\" == typeof iterable.next) return iterable;\r\n\r\n      if (!isNaN(iterable.length)) {\r\n        var i = -1,\r\n            next = function next() {\r\n          for (; ++i < iterable.length;) {\r\n            if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\r\n          }\r\n\r\n          return next.value = undefined, next.done = !0, next;\r\n        };\r\n\r\n        return next.next = next;\r\n      }\r\n    }\r\n\r\n    return {\r\n      next: doneResult\r\n    };\r\n  }\r\n\r\n  function doneResult() {\r\n    return {\r\n      value: undefined,\r\n      done: !0\r\n    };\r\n  }\r\n\r\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\r\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\r\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\r\n  }, exports.mark = function (genFun) {\r\n    return _Object$setPrototypeOf ? _Object$setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = _Object$create(Gp), genFun;\r\n  }, exports.awrap = function (arg) {\r\n    return {\r\n      __await: arg\r\n    };\r\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\r\n    return this;\r\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\r\n    void 0 === PromiseImpl && (PromiseImpl = _Promise2);\r\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\r\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\r\n      return result.done ? result.value : iter.next();\r\n    });\r\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\r\n    return this;\r\n  }), define(Gp, \"toString\", function () {\r\n    return \"[object Generator]\";\r\n  }), exports.keys = function (object) {\r\n    var keys = [];\r\n\r\n    for (var key in object) {\r\n      keys.push(key);\r\n    }\r\n\r\n    return _reverseInstanceProperty(keys).call(keys), function next() {\r\n      for (; keys.length;) {\r\n        var key = keys.pop();\r\n        if (key in object) return next.value = key, next.done = !1, next;\r\n      }\r\n\r\n      return next.done = !0, next;\r\n    };\r\n  }, exports.values = values, Context.prototype = {\r\n    constructor: Context,\r\n    reset: function (skipTempReset) {\r\n      var _context8;\r\n\r\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, _forEachInstanceProperty(_context8 = this.tryEntries).call(_context8, resetTryEntry), !skipTempReset) for (var name in this) {\r\n        \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+_sliceInstanceProperty(name).call(name, 1)) && (this[name] = undefined);\r\n      }\r\n    },\r\n    stop: function () {\r\n      this.done = !0;\r\n      var rootRecord = this.tryEntries[0].completion;\r\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\r\n      return this.rval;\r\n    },\r\n    dispatchException: function (exception) {\r\n      if (this.done) throw exception;\r\n      var context = this;\r\n\r\n      function handle(loc, caught) {\r\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\r\n      }\r\n\r\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\r\n        var entry = this.tryEntries[i],\r\n            record = entry.completion;\r\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\r\n\r\n        if (entry.tryLoc <= this.prev) {\r\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\r\n              hasFinally = hasOwn.call(entry, \"finallyLoc\");\r\n\r\n          if (hasCatch && hasFinally) {\r\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\r\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\r\n          } else if (hasCatch) {\r\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\r\n          } else {\r\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\r\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\r\n          }\r\n        }\r\n      }\r\n    },\r\n    abrupt: function (type, arg) {\r\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\r\n        var entry = this.tryEntries[i];\r\n\r\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\r\n          var finallyEntry = entry;\r\n          break;\r\n        }\r\n      }\r\n\r\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\r\n      var record = finallyEntry ? finallyEntry.completion : {};\r\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\r\n    },\r\n    complete: function (record, afterLoc) {\r\n      if (\"throw\" === record.type) throw record.arg;\r\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\r\n    },\r\n    finish: function (finallyLoc) {\r\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\r\n        var entry = this.tryEntries[i];\r\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\r\n      }\r\n    },\r\n    catch: function (tryLoc) {\r\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\r\n        var entry = this.tryEntries[i];\r\n\r\n        if (entry.tryLoc === tryLoc) {\r\n          var record = entry.completion;\r\n\r\n          if (\"throw\" === record.type) {\r\n            var thrown = record.arg;\r\n            resetTryEntry(entry);\r\n          }\r\n\r\n          return thrown;\r\n        }\r\n      }\r\n\r\n      throw new Error(\"illegal catch attempt\");\r\n    },\r\n    delegateYield: function (iterable, resultName, nextLoc) {\r\n      return this.delegate = {\r\n        iterator: values(iterable),\r\n        resultName: resultName,\r\n        nextLoc: nextLoc\r\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\r\n    }\r\n  }, exports;\r\n}\r\n\r\nfunction _createSuper(Derived) {\r\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\r\n\r\n  return function () {\r\n    var Super = (0, _getPrototypeOf2.default)(Derived),\r\n        result;\r\n\r\n    if (hasNativeReflectConstruct) {\r\n      var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;\r\n      result = _Reflect$construct(Super, arguments, NewTarget);\r\n    } else {\r\n      result = Super.apply(this, arguments);\r\n    }\r\n\r\n    return (0, _possibleConstructorReturn2.default)(this, result);\r\n  };\r\n}\r\n\r\nfunction _isNativeReflectConstruct() {\r\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\r\n  if (_Reflect$construct.sham) return false;\r\n  if (typeof Proxy === \"function\") return true;\r\n\r\n  try {\r\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\r\n    return true;\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n}\r\n\r\nvar CURRENT_USER_KEY = 'currentUser';\r\nvar canUseCurrentUser = !_CoreManager.default.get('IS_NODE');\r\nvar currentUserCacheMatchesDisk = false;\r\nvar currentUserCache = null;\r\nvar authProviders = {};\r\n/**\r\n * <p>A Parse.User object is a local representation of a user persisted to the\r\n * Parse cloud. This class is a subclass of a Parse.Object, and retains the\r\n * same functionality of a Parse.Object, but also extends it with various\r\n * user specific methods, like authentication, signing up, and validation of\r\n * uniqueness.</p>\r\n *\r\n * @alias Parse.User\r\n * @augments Parse.Object\r\n */\r\n\r\nvar ParseUser = /*#__PURE__*/function (_ParseObject) {\r\n  (0, _inherits2.default)(ParseUser, _ParseObject);\r\n\r\n  var _super = _createSuper(ParseUser);\r\n  /**\r\n   * @param {object} attributes The initial set of data to store in the user.\r\n   */\r\n\r\n\r\n  function ParseUser(attributes\r\n  /*: ?AttributeMap*/\r\n  ) {\r\n    var _this;\r\n\r\n    (0, _classCallCheck2.default)(this, ParseUser);\r\n    _this = _super.call(this, '_User');\r\n\r\n    if (attributes && (0, _typeof2.default)(attributes) === 'object') {\r\n      if (!_this.set(attributes || {})) {\r\n        throw new Error(\"Can't create an invalid Parse User\");\r\n      }\r\n    }\r\n\r\n    return _this;\r\n  }\r\n  /**\r\n   * Request a revocable session token to replace the older style of token.\r\n   *\r\n   * @param {object} options\r\n   * @returns {Promise} A promise that is resolved when the replacement\r\n   *   token has been fetched.\r\n   */\r\n\r\n\r\n  (0, _createClass2.default)(ParseUser, [{\r\n    key: \"_upgradeToRevocableSession\",\r\n    value: function (options\r\n    /*: RequestOptions*/\r\n    )\r\n    /*: Promise<void>*/\r\n    {\r\n      options = options || {};\r\n      var upgradeOptions = {};\r\n\r\n      if (options.hasOwnProperty('useMasterKey')) {\r\n        upgradeOptions.useMasterKey = options.useMasterKey;\r\n      }\r\n\r\n      var controller = _CoreManager.default.getUserController();\r\n\r\n      return controller.upgradeToRevocableSession(this, upgradeOptions);\r\n    }\r\n    /**\r\n     * Parse allows you to link your users with {@link https://docs.parseplatform.org/parse-server/guide/#oauth-and-3rd-party-authentication 3rd party authentication}, enabling\r\n     * your users to sign up or log into your application using their existing identities.\r\n     * Since 2.9.0\r\n     *\r\n     * @see {@link https://docs.parseplatform.org/js/guide/#linking-users Linking Users}\r\n     * @param {string | AuthProvider} provider Name of auth provider or {@link https://parseplatform.org/Parse-SDK-JS/api/master/AuthProvider.html AuthProvider}\r\n     * @param {object} options\r\n     * <ul>\r\n     *   <li>If provider is string, options is {@link http://docs.parseplatform.org/parse-server/guide/#supported-3rd-party-authentications authData}\r\n     *   <li>If provider is AuthProvider, options is saveOpts\r\n     * </ul>\r\n     * @param {object} saveOpts useMasterKey / sessionToken\r\n     * @returns {Promise} A promise that is fulfilled with the user is linked\r\n     */\r\n\r\n  }, {\r\n    key: \"linkWith\",\r\n    value: function (provider\r\n    /*: any*/\r\n    , options\r\n    /*: { authData?: AuthData }*/\r\n    )\r\n    /*: Promise<ParseUser>*/\r\n    {\r\n      var _this2 = this;\r\n\r\n      var saveOpts\r\n      /*:: ?: FullOptions*/\r\n      = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n      saveOpts.sessionToken = saveOpts.sessionToken || this.getSessionToken() || '';\r\n      var authType;\r\n\r\n      if (typeof provider === 'string') {\r\n        authType = provider;\r\n\r\n        if (authProviders[provider]) {\r\n          provider = authProviders[provider];\r\n        } else {\r\n          var authProvider = {\r\n            restoreAuthentication: function () {\r\n              return true;\r\n            },\r\n            getAuthType: function () {\r\n              return authType;\r\n            }\r\n          };\r\n          authProviders[authProvider.getAuthType()] = authProvider;\r\n          provider = authProvider;\r\n        }\r\n      } else {\r\n        authType = provider.getAuthType();\r\n      }\r\n\r\n      if (options && options.hasOwnProperty('authData')) {\r\n        var authData = this.get('authData') || {};\r\n\r\n        if ((0, _typeof2.default)(authData) !== 'object') {\r\n          throw new Error('Invalid type: authData field should be an object');\r\n        }\r\n\r\n        authData[authType] = options.authData;\r\n\r\n        var controller = _CoreManager.default.getUserController();\r\n\r\n        return controller.linkWith(this, authData, saveOpts);\r\n      } else {\r\n        return new _promise.default(function (resolve, reject) {\r\n          provider.authenticate({\r\n            success: function (provider, result) {\r\n              var opts = {};\r\n              opts.authData = result;\r\n\r\n              _this2.linkWith(provider, opts, saveOpts).then(function () {\r\n                resolve(_this2);\r\n              }, function (error) {\r\n                reject(error);\r\n              });\r\n            },\r\n            error: function (provider, _error) {\r\n              reject(_error);\r\n            }\r\n          });\r\n        });\r\n      }\r\n    }\r\n    /**\r\n     * @param provider\r\n     * @param options\r\n     * @param saveOpts\r\n     * @deprecated since 2.9.0 see {@link https://parseplatform.org/Parse-SDK-JS/api/master/Parse.User.html#linkWith linkWith}\r\n     * @returns {Promise}\r\n     */\r\n\r\n  }, {\r\n    key: \"_linkWith\",\r\n    value: function (provider\r\n    /*: any*/\r\n    , options\r\n    /*: { authData?: AuthData }*/\r\n    )\r\n    /*: Promise<ParseUser>*/\r\n    {\r\n      var saveOpts\r\n      /*:: ?: FullOptions*/\r\n      = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n      return this.linkWith(provider, options, saveOpts);\r\n    }\r\n    /**\r\n     * Synchronizes auth data for a provider (e.g. puts the access token in the\r\n     * right place to be used by the Facebook SDK).\r\n     *\r\n     * @param provider\r\n     */\r\n\r\n  }, {\r\n    key: \"_synchronizeAuthData\",\r\n    value: function (provider\r\n    /*: string*/\r\n    ) {\r\n      if (!this.isCurrent() || !provider) {\r\n        return;\r\n      }\r\n\r\n      var authType;\r\n\r\n      if (typeof provider === 'string') {\r\n        authType = provider;\r\n        provider = authProviders[authType];\r\n      } else {\r\n        authType = provider.getAuthType();\r\n      }\r\n\r\n      var authData = this.get('authData');\r\n\r\n      if (!provider || !authData || (0, _typeof2.default)(authData) !== 'object') {\r\n        return;\r\n      }\r\n\r\n      var success = provider.restoreAuthentication(authData[authType]);\r\n\r\n      if (!success) {\r\n        this._unlinkFrom(provider);\r\n      }\r\n    }\r\n    /**\r\n     * Synchronizes authData for all providers.\r\n     */\r\n\r\n  }, {\r\n    key: \"_synchronizeAllAuthData\",\r\n    value: function () {\r\n      var authData = this.get('authData');\r\n\r\n      if ((0, _typeof2.default)(authData) !== 'object') {\r\n        return;\r\n      }\r\n\r\n      for (var _key in authData) {\r\n        this._synchronizeAuthData(_key);\r\n      }\r\n    }\r\n    /**\r\n     * Removes null values from authData (which exist temporarily for unlinking)\r\n     */\r\n\r\n  }, {\r\n    key: \"_cleanupAuthData\",\r\n    value: function () {\r\n      if (!this.isCurrent()) {\r\n        return;\r\n      }\r\n\r\n      var authData = this.get('authData');\r\n\r\n      if ((0, _typeof2.default)(authData) !== 'object') {\r\n        return;\r\n      }\r\n\r\n      for (var _key2 in authData) {\r\n        if (!authData[_key2]) {\r\n          delete authData[_key2];\r\n        }\r\n      }\r\n    }\r\n    /**\r\n     * Unlinks a user from a service.\r\n     *\r\n     * @param {string | AuthProvider} provider Name of auth provider or {@link https://parseplatform.org/Parse-SDK-JS/api/master/AuthProvider.html AuthProvider}\r\n     * @param {object} options MasterKey / SessionToken\r\n     * @returns {Promise} A promise that is fulfilled when the unlinking\r\n     *     finishes.\r\n     */\r\n\r\n  }, {\r\n    key: \"_unlinkFrom\",\r\n    value: function (provider\r\n    /*: any*/\r\n    , options\r\n    /*:: ?: FullOptions*/\r\n    )\r\n    /*: Promise<ParseUser>*/\r\n    {\r\n      var _this3 = this;\r\n\r\n      return this.linkWith(provider, {\r\n        authData: null\r\n      }, options).then(function () {\r\n        _this3._synchronizeAuthData(provider);\r\n\r\n        return _promise.default.resolve(_this3);\r\n      });\r\n    }\r\n    /**\r\n     * Checks whether a user is linked to a service.\r\n     *\r\n     * @param {object} provider service to link to\r\n     * @returns {boolean} true if link was successful\r\n     */\r\n\r\n  }, {\r\n    key: \"_isLinked\",\r\n    value: function (provider\r\n    /*: any*/\r\n    )\r\n    /*: boolean*/\r\n    {\r\n      var authType;\r\n\r\n      if (typeof provider === 'string') {\r\n        authType = provider;\r\n      } else {\r\n        authType = provider.getAuthType();\r\n      }\r\n\r\n      var authData = this.get('authData') || {};\r\n\r\n      if ((0, _typeof2.default)(authData) !== 'object') {\r\n        return false;\r\n      }\r\n\r\n      return !!authData[authType];\r\n    }\r\n    /**\r\n     * Deauthenticates all providers.\r\n     */\r\n\r\n  }, {\r\n    key: \"_logOutWithAll\",\r\n    value: function () {\r\n      var authData = this.get('authData');\r\n\r\n      if ((0, _typeof2.default)(authData) !== 'object') {\r\n        return;\r\n      }\r\n\r\n      for (var _key3 in authData) {\r\n        this._logOutWith(_key3);\r\n      }\r\n    }\r\n    /**\r\n     * Deauthenticates a single provider (e.g. removing access tokens from the\r\n     * Facebook SDK).\r\n     *\r\n     * @param {object} provider service to logout of\r\n     */\r\n\r\n  }, {\r\n    key: \"_logOutWith\",\r\n    value: function (provider\r\n    /*: any*/\r\n    ) {\r\n      if (!this.isCurrent()) {\r\n        return;\r\n      }\r\n\r\n      if (typeof provider === 'string') {\r\n        provider = authProviders[provider];\r\n      }\r\n\r\n      if (provider && provider.deauthenticate) {\r\n        provider.deauthenticate();\r\n      }\r\n    }\r\n    /**\r\n     * Class instance method used to maintain specific keys when a fetch occurs.\r\n     * Used to ensure that the session token is not lost.\r\n     *\r\n     * @returns {object} sessionToken\r\n     */\r\n\r\n  }, {\r\n    key: \"_preserveFieldsOnFetch\",\r\n    value: function ()\r\n    /*: AttributeMap*/\r\n    {\r\n      return {\r\n        sessionToken: this.get('sessionToken')\r\n      };\r\n    }\r\n    /**\r\n     * Returns true if <code>current</code> would return this user.\r\n     *\r\n     * @returns {boolean} true if user is cached on disk\r\n     */\r\n\r\n  }, {\r\n    key: \"isCurrent\",\r\n    value: function ()\r\n    /*: boolean*/\r\n    {\r\n      var current = ParseUser.current();\r\n      return !!current && current.id === this.id;\r\n    }\r\n    /**\r\n     * Returns true if <code>current</code> would return this user.\r\n     *\r\n     * @returns {Promise<boolean>} true if user is cached on disk\r\n     */\r\n\r\n  }, {\r\n    key: \"isCurrentAsync\",\r\n    value: function () {\r\n      var _isCurrentAsync = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\r\n        var current;\r\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\r\n          while (1) {\r\n            switch (_context.prev = _context.next) {\r\n              case 0:\r\n                _context.next = 2;\r\n                return ParseUser.currentAsync();\r\n\r\n              case 2:\r\n                current = _context.sent;\r\n                return _context.abrupt(\"return\", !!current && current.id === this.id);\r\n\r\n              case 4:\r\n              case \"end\":\r\n                return _context.stop();\r\n            }\r\n          }\r\n        }, _callee, this);\r\n      }));\r\n\r\n      function isCurrentAsync() {\r\n        return _isCurrentAsync.apply(this, arguments);\r\n      }\r\n\r\n      return isCurrentAsync;\r\n    }()\r\n    /**\r\n     * Returns get(\"username\").\r\n     *\r\n     * @returns {string}\r\n     */\r\n\r\n  }, {\r\n    key: \"getUsername\",\r\n    value: function getUsername()\r\n    /*: ?string*/\r\n    {\r\n      var username = this.get('username');\r\n\r\n      if (username == null || typeof username === 'string') {\r\n        return username;\r\n      }\r\n\r\n      return '';\r\n    }\r\n    /**\r\n     * Calls set(\"username\", username, options) and returns the result.\r\n     *\r\n     * @param {string} username\r\n     */\r\n\r\n  }, {\r\n    key: \"setUsername\",\r\n    value: function setUsername(username\r\n    /*: string*/\r\n    ) {\r\n      // Strip anonymity\r\n      var authData = this.get('authData');\r\n\r\n      if (authData && (0, _typeof2.default)(authData) === 'object' && authData.hasOwnProperty('anonymous')) {\r\n        // We need to set anonymous to null instead of deleting it in order to remove it from Parse.\r\n        authData.anonymous = null;\r\n      }\r\n\r\n      this.set('username', username);\r\n    }\r\n    /**\r\n     * Calls set(\"password\", password, options) and returns the result.\r\n     *\r\n     * @param {string} password User's Password\r\n     */\r\n\r\n  }, {\r\n    key: \"setPassword\",\r\n    value: function setPassword(password\r\n    /*: string*/\r\n    ) {\r\n      this.set('password', password);\r\n    }\r\n    /**\r\n     * Returns get(\"email\").\r\n     *\r\n     * @returns {string} User's Email\r\n     */\r\n\r\n  }, {\r\n    key: \"getEmail\",\r\n    value: function getEmail()\r\n    /*: ?string*/\r\n    {\r\n      var email = this.get('email');\r\n\r\n      if (email == null || typeof email === 'string') {\r\n        return email;\r\n      }\r\n\r\n      return '';\r\n    }\r\n    /**\r\n     * Calls set(\"email\", email) and returns the result.\r\n     *\r\n     * @param {string} email\r\n     * @returns {boolean}\r\n     */\r\n\r\n  }, {\r\n    key: \"setEmail\",\r\n    value: function setEmail(email\r\n    /*: string*/\r\n    ) {\r\n      return this.set('email', email);\r\n    }\r\n    /**\r\n     * Returns the session token for this user, if the user has been logged in,\r\n     * or if it is the result of a query with the master key. Otherwise, returns\r\n     * undefined.\r\n     *\r\n     * @returns {string} the session token, or undefined\r\n     */\r\n\r\n  }, {\r\n    key: \"getSessionToken\",\r\n    value: function getSessionToken()\r\n    /*: ?string*/\r\n    {\r\n      var token = this.get('sessionToken');\r\n\r\n      if (token == null || typeof token === 'string') {\r\n        return token;\r\n      }\r\n\r\n      return '';\r\n    }\r\n    /**\r\n     * Checks whether this user is the current user and has been authenticated.\r\n     *\r\n     * @returns {boolean} whether this user is the current user and is logged in.\r\n     */\r\n\r\n  }, {\r\n    key: \"authenticated\",\r\n    value: function authenticated()\r\n    /*: boolean*/\r\n    {\r\n      var current = ParseUser.current();\r\n      return !!this.get('sessionToken') && !!current && current.id === this.id;\r\n    }\r\n    /**\r\n     * Signs up a new user. You should call this instead of save for\r\n     * new Parse.Users. This will create a new Parse.User on the server, and\r\n     * also persist the session on disk so that you can access the user using\r\n     * <code>current</code>.\r\n     *\r\n     * <p>A username and password must be set before calling signUp.</p>\r\n     *\r\n     * @param {object} attrs Extra fields to set on the new user, or null.\r\n     * @param {object} options\r\n     * @returns {Promise} A promise that is fulfilled when the signup\r\n     *     finishes.\r\n     */\r\n\r\n  }, {\r\n    key: \"signUp\",\r\n    value: function signUp(attrs\r\n    /*: AttributeMap*/\r\n    , options\r\n    /*:: ?: FullOptions*/\r\n    )\r\n    /*: Promise<ParseUser>*/\r\n    {\r\n      options = options || {};\r\n      var signupOptions = {};\r\n\r\n      if (options.hasOwnProperty('useMasterKey')) {\r\n        signupOptions.useMasterKey = options.useMasterKey;\r\n      }\r\n\r\n      if (options.hasOwnProperty('installationId')) {\r\n        signupOptions.installationId = options.installationId;\r\n      }\r\n\r\n      if (options.hasOwnProperty('context') && Object.prototype.toString.call(options.context) === '[object Object]') {\r\n        signupOptions.context = options.context;\r\n      }\r\n\r\n      var controller = _CoreManager.default.getUserController();\r\n\r\n      return controller.signUp(this, attrs, signupOptions);\r\n    }\r\n    /**\r\n     * Logs in a Parse.User. On success, this saves the session to disk,\r\n     * so you can retrieve the currently logged in user using\r\n     * <code>current</code>.\r\n     *\r\n     * <p>A username and password must be set before calling logIn.</p>\r\n     *\r\n     * @param {object} options\r\n     * @returns {Promise} A promise that is fulfilled with the user when\r\n     *     the login is complete.\r\n     */\r\n\r\n  }, {\r\n    key: \"logIn\",\r\n    value: function logIn(options\r\n    /*:: ?: FullOptions*/\r\n    )\r\n    /*: Promise<ParseUser>*/\r\n    {\r\n      options = options || {};\r\n      var loginOptions = {\r\n        usePost: true\r\n      };\r\n\r\n      if (options.hasOwnProperty('useMasterKey')) {\r\n        loginOptions.useMasterKey = options.useMasterKey;\r\n      }\r\n\r\n      if (options.hasOwnProperty('installationId')) {\r\n        loginOptions.installationId = options.installationId;\r\n      }\r\n\r\n      if (options.hasOwnProperty('usePost')) {\r\n        loginOptions.usePost = options.usePost;\r\n      }\r\n\r\n      var controller = _CoreManager.default.getUserController();\r\n\r\n      return controller.logIn(this, loginOptions);\r\n    }\r\n    /**\r\n     * Wrap the default save behavior with functionality to save to local\r\n     * storage if this is current user.\r\n     *\r\n     * @param {...any} args\r\n     * @returns {Promise}\r\n     */\r\n\r\n  }, {\r\n    key: \"save\",\r\n    value: function () {\r\n      var _save = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\r\n        var _len,\r\n            args,\r\n            _key4,\r\n            current,\r\n            _args2 = arguments;\r\n\r\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\r\n          while (1) {\r\n            switch (_context2.prev = _context2.next) {\r\n              case 0:\r\n                for (_len = _args2.length, args = new Array(_len), _key4 = 0; _key4 < _len; _key4++) {\r\n                  args[_key4] = _args2[_key4];\r\n                }\r\n\r\n                _context2.next = 3;\r\n                return (0, _get2.default)((0, _getPrototypeOf2.default)(ParseUser.prototype), \"save\", this).apply(this, args);\r\n\r\n              case 3:\r\n                _context2.next = 5;\r\n                return this.isCurrentAsync();\r\n\r\n              case 5:\r\n                current = _context2.sent;\r\n\r\n                if (!current) {\r\n                  _context2.next = 8;\r\n                  break;\r\n                }\r\n\r\n                return _context2.abrupt(\"return\", _CoreManager.default.getUserController().updateUserOnDisk(this));\r\n\r\n              case 8:\r\n                return _context2.abrupt(\"return\", this);\r\n\r\n              case 9:\r\n              case \"end\":\r\n                return _context2.stop();\r\n            }\r\n          }\r\n        }, _callee2, this);\r\n      }));\r\n\r\n      function save() {\r\n        return _save.apply(this, arguments);\r\n      }\r\n\r\n      return save;\r\n    }()\r\n    /**\r\n     * Wrap the default destroy behavior with functionality that logs out\r\n     * the current user when it is destroyed\r\n     *\r\n     * @param {...any} args\r\n     * @returns {Parse.User}\r\n     */\r\n\r\n  }, {\r\n    key: \"destroy\",\r\n    value: function () {\r\n      var _destroy = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\r\n        var _len2,\r\n            args,\r\n            _key5,\r\n            current,\r\n            _args3 = arguments;\r\n\r\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\r\n          while (1) {\r\n            switch (_context3.prev = _context3.next) {\r\n              case 0:\r\n                for (_len2 = _args3.length, args = new Array(_len2), _key5 = 0; _key5 < _len2; _key5++) {\r\n                  args[_key5] = _args3[_key5];\r\n                }\r\n\r\n                _context3.next = 3;\r\n                return (0, _get2.default)((0, _getPrototypeOf2.default)(ParseUser.prototype), \"destroy\", this).apply(this, args);\r\n\r\n              case 3:\r\n                _context3.next = 5;\r\n                return this.isCurrentAsync();\r\n\r\n              case 5:\r\n                current = _context3.sent;\r\n\r\n                if (!current) {\r\n                  _context3.next = 8;\r\n                  break;\r\n                }\r\n\r\n                return _context3.abrupt(\"return\", _CoreManager.default.getUserController().removeUserFromDisk());\r\n\r\n              case 8:\r\n                return _context3.abrupt(\"return\", this);\r\n\r\n              case 9:\r\n              case \"end\":\r\n                return _context3.stop();\r\n            }\r\n          }\r\n        }, _callee3, this);\r\n      }));\r\n\r\n      function destroy() {\r\n        return _destroy.apply(this, arguments);\r\n      }\r\n\r\n      return destroy;\r\n    }()\r\n    /**\r\n     * Wrap the default fetch behavior with functionality to save to local\r\n     * storage if this is current user.\r\n     *\r\n     * @param {...any} args\r\n     * @returns {Parse.User}\r\n     */\r\n\r\n  }, {\r\n    key: \"fetch\",\r\n    value: function () {\r\n      var _fetch = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\r\n        var _len3,\r\n            args,\r\n            _key6,\r\n            current,\r\n            _args4 = arguments;\r\n\r\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\r\n          while (1) {\r\n            switch (_context4.prev = _context4.next) {\r\n              case 0:\r\n                for (_len3 = _args4.length, args = new Array(_len3), _key6 = 0; _key6 < _len3; _key6++) {\r\n                  args[_key6] = _args4[_key6];\r\n                }\r\n\r\n                _context4.next = 3;\r\n                return (0, _get2.default)((0, _getPrototypeOf2.default)(ParseUser.prototype), \"fetch\", this).apply(this, args);\r\n\r\n              case 3:\r\n                _context4.next = 5;\r\n                return this.isCurrentAsync();\r\n\r\n              case 5:\r\n                current = _context4.sent;\r\n\r\n                if (!current) {\r\n                  _context4.next = 8;\r\n                  break;\r\n                }\r\n\r\n                return _context4.abrupt(\"return\", _CoreManager.default.getUserController().updateUserOnDisk(this));\r\n\r\n              case 8:\r\n                return _context4.abrupt(\"return\", this);\r\n\r\n              case 9:\r\n              case \"end\":\r\n                return _context4.stop();\r\n            }\r\n          }\r\n        }, _callee4, this);\r\n      }));\r\n\r\n      function fetch() {\r\n        return _fetch.apply(this, arguments);\r\n      }\r\n\r\n      return fetch;\r\n    }()\r\n    /**\r\n     * Wrap the default fetchWithInclude behavior with functionality to save to local\r\n     * storage if this is current user.\r\n     *\r\n     * @param {...any} args\r\n     * @returns {Parse.User}\r\n     */\r\n\r\n  }, {\r\n    key: \"fetchWithInclude\",\r\n    value: function () {\r\n      var _fetchWithInclude = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\r\n        var _len4,\r\n            args,\r\n            _key7,\r\n            current,\r\n            _args5 = arguments;\r\n\r\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\r\n          while (1) {\r\n            switch (_context5.prev = _context5.next) {\r\n              case 0:\r\n                for (_len4 = _args5.length, args = new Array(_len4), _key7 = 0; _key7 < _len4; _key7++) {\r\n                  args[_key7] = _args5[_key7];\r\n                }\r\n\r\n                _context5.next = 3;\r\n                return (0, _get2.default)((0, _getPrototypeOf2.default)(ParseUser.prototype), \"fetchWithInclude\", this).apply(this, args);\r\n\r\n              case 3:\r\n                _context5.next = 5;\r\n                return this.isCurrentAsync();\r\n\r\n              case 5:\r\n                current = _context5.sent;\r\n\r\n                if (!current) {\r\n                  _context5.next = 8;\r\n                  break;\r\n                }\r\n\r\n                return _context5.abrupt(\"return\", _CoreManager.default.getUserController().updateUserOnDisk(this));\r\n\r\n              case 8:\r\n                return _context5.abrupt(\"return\", this);\r\n\r\n              case 9:\r\n              case \"end\":\r\n                return _context5.stop();\r\n            }\r\n          }\r\n        }, _callee5, this);\r\n      }));\r\n\r\n      function fetchWithInclude() {\r\n        return _fetchWithInclude.apply(this, arguments);\r\n      }\r\n\r\n      return fetchWithInclude;\r\n    }()\r\n    /**\r\n     * Verify whether a given password is the password of the current user.\r\n     *\r\n     * @param {string} password A password to be verified\r\n     * @param {object} options\r\n     * @returns {Promise} A promise that is fulfilled with a user\r\n     *  when the password is correct.\r\n     */\r\n\r\n  }, {\r\n    key: \"verifyPassword\",\r\n    value: function verifyPassword(password\r\n    /*: string*/\r\n    , options\r\n    /*:: ?: RequestOptions*/\r\n    )\r\n    /*: Promise<ParseUser>*/\r\n    {\r\n      var username = this.getUsername() || '';\r\n      return ParseUser.verifyPassword(username, password, options);\r\n    }\r\n  }], [{\r\n    key: \"readOnlyAttributes\",\r\n    value: function readOnlyAttributes() {\r\n      return ['sessionToken'];\r\n    }\r\n    /**\r\n     * Adds functionality to the existing Parse.User class.\r\n     *\r\n     * @param {object} protoProps A set of properties to add to the prototype\r\n     * @param {object} classProps A set of static properties to add to the class\r\n     * @static\r\n     * @returns {Parse.User} The newly extended Parse.User class\r\n     */\r\n\r\n  }, {\r\n    key: \"extend\",\r\n    value: function extend(protoProps\r\n    /*: { [prop: string]: any }*/\r\n    , classProps\r\n    /*: { [prop: string]: any }*/\r\n    ) {\r\n      if (protoProps) {\r\n        for (var _prop in protoProps) {\r\n          if (_prop !== 'className') {\r\n            (0, _defineProperty.default)(ParseUser.prototype, _prop, {\r\n              value: protoProps[_prop],\r\n              enumerable: false,\r\n              writable: true,\r\n              configurable: true\r\n            });\r\n          }\r\n        }\r\n      }\r\n\r\n      if (classProps) {\r\n        for (var _prop2 in classProps) {\r\n          if (_prop2 !== 'className') {\r\n            (0, _defineProperty.default)(ParseUser, _prop2, {\r\n              value: classProps[_prop2],\r\n              enumerable: false,\r\n              writable: true,\r\n              configurable: true\r\n            });\r\n          }\r\n        }\r\n      }\r\n\r\n      return ParseUser;\r\n    }\r\n    /**\r\n     * Retrieves the currently logged in ParseUser with a valid session,\r\n     * either from memory or localStorage, if necessary.\r\n     *\r\n     * @static\r\n     * @returns {Parse.Object} The currently logged in Parse.User.\r\n     */\r\n\r\n  }, {\r\n    key: \"current\",\r\n    value: function current()\r\n    /*: ?ParseUser*/\r\n    {\r\n      if (!canUseCurrentUser) {\r\n        return null;\r\n      }\r\n\r\n      var controller = _CoreManager.default.getUserController();\r\n\r\n      return controller.currentUser();\r\n    }\r\n    /**\r\n     * Retrieves the currently logged in ParseUser from asynchronous Storage.\r\n     *\r\n     * @static\r\n     * @returns {Promise} A Promise that is resolved with the currently\r\n     *   logged in Parse User\r\n     */\r\n\r\n  }, {\r\n    key: \"currentAsync\",\r\n    value: function currentAsync()\r\n    /*: Promise<?ParseUser>*/\r\n    {\r\n      if (!canUseCurrentUser) {\r\n        return _promise.default.resolve(null);\r\n      }\r\n\r\n      var controller = _CoreManager.default.getUserController();\r\n\r\n      return controller.currentUserAsync();\r\n    }\r\n    /**\r\n     * Signs up a new user with a username (or email) and password.\r\n     * This will create a new Parse.User on the server, and also persist the\r\n     * session in localStorage so that you can access the user using\r\n     * {@link #current}.\r\n     *\r\n     * @param {string} username The username (or email) to sign up with.\r\n     * @param {string} password The password to sign up with.\r\n     * @param {object} attrs Extra fields to set on the new user.\r\n     * @param {object} options\r\n     * @static\r\n     * @returns {Promise} A promise that is fulfilled with the user when\r\n     *     the signup completes.\r\n     */\r\n\r\n  }, {\r\n    key: \"signUp\",\r\n    value: function signUp(username\r\n    /*: string*/\r\n    , password\r\n    /*: string*/\r\n    , attrs\r\n    /*: AttributeMap*/\r\n    , options\r\n    /*:: ?: FullOptions*/\r\n    ) {\r\n      attrs = attrs || {};\r\n      attrs.username = username;\r\n      attrs.password = password;\r\n      var user = new this(attrs);\r\n      return user.signUp({}, options);\r\n    }\r\n    /**\r\n     * Logs in a user with a username (or email) and password. On success, this\r\n     * saves the session to disk, so you can retrieve the currently logged in\r\n     * user using <code>current</code>.\r\n     *\r\n     * @param {string} username The username (or email) to log in with.\r\n     * @param {string} password The password to log in with.\r\n     * @param {object} options\r\n     * @static\r\n     * @returns {Promise} A promise that is fulfilled with the user when\r\n     *     the login completes.\r\n     */\r\n\r\n  }, {\r\n    key: \"logIn\",\r\n    value: function logIn(username\r\n    /*: string*/\r\n    , password\r\n    /*: string*/\r\n    , options\r\n    /*:: ?: FullOptions*/\r\n    ) {\r\n      if (typeof username !== 'string') {\r\n        return _promise.default.reject(new _ParseError.default(_ParseError.default.OTHER_CAUSE, 'Username must be a string.'));\r\n      } else if (typeof password !== 'string') {\r\n        return _promise.default.reject(new _ParseError.default(_ParseError.default.OTHER_CAUSE, 'Password must be a string.'));\r\n      }\r\n\r\n      var user = new this();\r\n\r\n      user._finishFetch({\r\n        username: username,\r\n        password: password\r\n      });\r\n\r\n      return user.logIn(options);\r\n    }\r\n    /**\r\n     * Logs in a user with a session token. On success, this saves the session\r\n     * to disk, so you can retrieve the currently logged in user using\r\n     * <code>current</code>.\r\n     *\r\n     * @param {string} sessionToken The sessionToken to log in with.\r\n     * @param {object} options\r\n     * @static\r\n     * @returns {Promise} A promise that is fulfilled with the user when\r\n     *     the login completes.\r\n     */\r\n\r\n  }, {\r\n    key: \"become\",\r\n    value: function become(sessionToken\r\n    /*: string*/\r\n    , options\r\n    /*:: ?: RequestOptions*/\r\n    ) {\r\n      if (!canUseCurrentUser) {\r\n        throw new Error('It is not memory-safe to become a user in a server environment');\r\n      }\r\n\r\n      options = options || {};\r\n      var becomeOptions\r\n      /*: RequestOptions*/\r\n      = {\r\n        sessionToken: sessionToken\r\n      };\r\n\r\n      if (options.hasOwnProperty('useMasterKey')) {\r\n        becomeOptions.useMasterKey = options.useMasterKey;\r\n      }\r\n\r\n      var controller = _CoreManager.default.getUserController();\r\n\r\n      var user = new this();\r\n      return controller.become(user, becomeOptions);\r\n    }\r\n    /**\r\n     * Retrieves a user with a session token.\r\n     *\r\n     * @param {string} sessionToken The sessionToken to get user with.\r\n     * @param {object} options\r\n     * @static\r\n     * @returns {Promise} A promise that is fulfilled with the user is fetched.\r\n     */\r\n\r\n  }, {\r\n    key: \"me\",\r\n    value: function me(sessionToken\r\n    /*: string*/\r\n    ) {\r\n      var options\r\n      /*:: ?: RequestOptions*/\r\n      = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n\r\n      var controller = _CoreManager.default.getUserController();\r\n\r\n      var meOptions\r\n      /*: RequestOptions*/\r\n      = {\r\n        sessionToken: sessionToken\r\n      };\r\n\r\n      if (options.useMasterKey) {\r\n        meOptions.useMasterKey = options.useMasterKey;\r\n      }\r\n\r\n      var user = new this();\r\n      return controller.me(user, meOptions);\r\n    }\r\n    /**\r\n     * Logs in a user with a session token. On success, this saves the session\r\n     * to disk, so you can retrieve the currently logged in user using\r\n     * <code>current</code>. If there is no session token the user will not logged in.\r\n     *\r\n     * @param {object} userJSON The JSON map of the User's data\r\n     * @static\r\n     * @returns {Promise} A promise that is fulfilled with the user when\r\n     *     the login completes.\r\n     */\r\n\r\n  }, {\r\n    key: \"hydrate\",\r\n    value: function hydrate(userJSON\r\n    /*: AttributeMap*/\r\n    ) {\r\n      var controller = _CoreManager.default.getUserController();\r\n\r\n      var user = new this();\r\n      return controller.hydrate(user, userJSON);\r\n    }\r\n    /**\r\n     * Static version of {@link https://parseplatform.org/Parse-SDK-JS/api/master/Parse.User.html#linkWith linkWith}\r\n     *\r\n     * @param provider\r\n     * @param options\r\n     * @param saveOpts\r\n     * @static\r\n     * @returns {Promise}\r\n     */\r\n\r\n  }, {\r\n    key: \"logInWith\",\r\n    value: function logInWith(provider\r\n    /*: any*/\r\n    , options\r\n    /*: { authData?: AuthData }*/\r\n    , saveOpts\r\n    /*:: ?: FullOptions*/\r\n    )\r\n    /*: Promise<ParseUser>*/\r\n    {\r\n      var user = new this();\r\n      return user.linkWith(provider, options, saveOpts);\r\n    }\r\n    /**\r\n     * Logs out the currently logged in user session. This will remove the\r\n     * session from disk, log out of linked services, and future calls to\r\n     * <code>current</code> will return <code>null</code>.\r\n     *\r\n     * @param {object} options\r\n     * @static\r\n     * @returns {Promise} A promise that is resolved when the session is\r\n     *   destroyed on the server.\r\n     */\r\n\r\n  }, {\r\n    key: \"logOut\",\r\n    value: function logOut() {\r\n      var options\r\n      /*: RequestOptions*/\r\n      = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n\r\n      var controller = _CoreManager.default.getUserController();\r\n\r\n      return controller.logOut(options);\r\n    }\r\n    /**\r\n     * Requests a password reset email to be sent to the specified email address\r\n     * associated with the user account. This email allows the user to securely\r\n     * reset their password on the Parse site.\r\n     *\r\n     * @param {string} email The email address associated with the user that\r\n     *     forgot their password.\r\n     * @param {object} options\r\n     * @static\r\n     * @returns {Promise}\r\n     */\r\n\r\n  }, {\r\n    key: \"requestPasswordReset\",\r\n    value: function requestPasswordReset(email\r\n    /*: string*/\r\n    , options\r\n    /*:: ?: RequestOptions*/\r\n    ) {\r\n      options = options || {};\r\n      var requestOptions = {};\r\n\r\n      if (options.hasOwnProperty('useMasterKey')) {\r\n        requestOptions.useMasterKey = options.useMasterKey;\r\n      }\r\n\r\n      var controller = _CoreManager.default.getUserController();\r\n\r\n      return controller.requestPasswordReset(email, requestOptions);\r\n    }\r\n    /**\r\n     * Request an email verification.\r\n     *\r\n     * @param {string} email The email address associated with the user that\r\n     *     needs to verify their email.\r\n     * @param {object} options\r\n     * @static\r\n     * @returns {Promise}\r\n     */\r\n\r\n  }, {\r\n    key: \"requestEmailVerification\",\r\n    value: function requestEmailVerification(email\r\n    /*: string*/\r\n    , options\r\n    /*:: ?: RequestOptions*/\r\n    ) {\r\n      options = options || {};\r\n      var requestOptions = {};\r\n\r\n      if (options.hasOwnProperty('useMasterKey')) {\r\n        requestOptions.useMasterKey = options.useMasterKey;\r\n      }\r\n\r\n      var controller = _CoreManager.default.getUserController();\r\n\r\n      return controller.requestEmailVerification(email, requestOptions);\r\n    }\r\n    /**\r\n     * Verify whether a given password is the password of the current user.\r\n     *\r\n     * @param {string} username  A username to be used for identificaiton\r\n     * @param {string} password A password to be verified\r\n     * @param {object} options\r\n     * @static\r\n     * @returns {Promise} A promise that is fulfilled with a user\r\n     *  when the password is correct.\r\n     */\r\n\r\n  }, {\r\n    key: \"verifyPassword\",\r\n    value: function verifyPassword(username\r\n    /*: string*/\r\n    , password\r\n    /*: string*/\r\n    , options\r\n    /*:: ?: RequestOptions*/\r\n    ) {\r\n      if (typeof username !== 'string') {\r\n        return _promise.default.reject(new _ParseError.default(_ParseError.default.OTHER_CAUSE, 'Username must be a string.'));\r\n      }\r\n\r\n      if (typeof password !== 'string') {\r\n        return _promise.default.reject(new _ParseError.default(_ParseError.default.OTHER_CAUSE, 'Password must be a string.'));\r\n      }\r\n\r\n      options = options || {};\r\n      var verificationOption = {};\r\n\r\n      if (options.hasOwnProperty('useMasterKey')) {\r\n        verificationOption.useMasterKey = options.useMasterKey;\r\n      }\r\n\r\n      var controller = _CoreManager.default.getUserController();\r\n\r\n      return controller.verifyPassword(username, password, verificationOption);\r\n    }\r\n    /**\r\n     * Allow someone to define a custom User class without className\r\n     * being rewritten to _User. The default behavior is to rewrite\r\n     * User to _User for legacy reasons. This allows developers to\r\n     * override that behavior.\r\n     *\r\n     * @param {boolean} isAllowed Whether or not to allow custom User class\r\n     * @static\r\n     */\r\n\r\n  }, {\r\n    key: \"allowCustomUserClass\",\r\n    value: function allowCustomUserClass(isAllowed\r\n    /*: boolean*/\r\n    ) {\r\n      _CoreManager.default.set('PERFORM_USER_REWRITE', !isAllowed);\r\n    }\r\n    /**\r\n     * Allows a legacy application to start using revocable sessions. If the\r\n     * current session token is not revocable, a request will be made for a new,\r\n     * revocable session.\r\n     * It is not necessary to call this method from cloud code unless you are\r\n     * handling user signup or login from the server side. In a cloud code call,\r\n     * this function will not attempt to upgrade the current token.\r\n     *\r\n     * @param {object} options\r\n     * @static\r\n     * @returns {Promise} A promise that is resolved when the process has\r\n     *   completed. If a replacement session token is requested, the promise\r\n     *   will be resolved after a new token has been fetched.\r\n     */\r\n\r\n  }, {\r\n    key: \"enableRevocableSession\",\r\n    value: function enableRevocableSession(options\r\n    /*:: ?: RequestOptions*/\r\n    ) {\r\n      options = options || {};\r\n\r\n      _CoreManager.default.set('FORCE_REVOCABLE_SESSION', true);\r\n\r\n      if (canUseCurrentUser) {\r\n        var current = ParseUser.current();\r\n\r\n        if (current) {\r\n          return current._upgradeToRevocableSession(options);\r\n        }\r\n      }\r\n\r\n      return _promise.default.resolve();\r\n    }\r\n    /**\r\n     * Enables the use of become or the current user in a server\r\n     * environment. These features are disabled by default, since they depend on\r\n     * global objects that are not memory-safe for most servers.\r\n     *\r\n     * @static\r\n     */\r\n\r\n  }, {\r\n    key: \"enableUnsafeCurrentUser\",\r\n    value: function enableUnsafeCurrentUser() {\r\n      canUseCurrentUser = true;\r\n    }\r\n    /**\r\n     * Disables the use of become or the current user in any environment.\r\n     * These features are disabled on servers by default, since they depend on\r\n     * global objects that are not memory-safe for most servers.\r\n     *\r\n     * @static\r\n     */\r\n\r\n  }, {\r\n    key: \"disableUnsafeCurrentUser\",\r\n    value: function disableUnsafeCurrentUser() {\r\n      canUseCurrentUser = false;\r\n    }\r\n    /**\r\n     * When registering users with {@link https://parseplatform.org/Parse-SDK-JS/api/master/Parse.User.html#linkWith linkWith} a basic auth provider\r\n     * is automatically created for you.\r\n     *\r\n     * For advanced authentication, you can register an Auth provider to\r\n     * implement custom authentication, deauthentication.\r\n     *\r\n     * @param provider\r\n     * @see {@link https://parseplatform.org/Parse-SDK-JS/api/master/AuthProvider.html AuthProvider}\r\n     * @see {@link https://docs.parseplatform.org/js/guide/#custom-authentication-module Custom Authentication Module}\r\n     * @static\r\n     */\r\n\r\n  }, {\r\n    key: \"_registerAuthenticationProvider\",\r\n    value: function _registerAuthenticationProvider(provider\r\n    /*: any*/\r\n    ) {\r\n      authProviders[provider.getAuthType()] = provider; // Synchronize the current user with the auth provider.\r\n\r\n      ParseUser.currentAsync().then(function (current) {\r\n        if (current) {\r\n          current._synchronizeAuthData(provider.getAuthType());\r\n        }\r\n      });\r\n    }\r\n    /**\r\n     * @param provider\r\n     * @param options\r\n     * @param saveOpts\r\n     * @deprecated since 2.9.0 see {@link https://parseplatform.org/Parse-SDK-JS/api/master/Parse.User.html#logInWith logInWith}\r\n     * @static\r\n     * @returns {Promise}\r\n     */\r\n\r\n  }, {\r\n    key: \"_logInWith\",\r\n    value: function _logInWith(provider\r\n    /*: any*/\r\n    , options\r\n    /*: { authData?: AuthData }*/\r\n    , saveOpts\r\n    /*:: ?: FullOptions*/\r\n    ) {\r\n      var user = new this();\r\n      return user.linkWith(provider, options, saveOpts);\r\n    }\r\n  }, {\r\n    key: \"_clearCache\",\r\n    value: function _clearCache() {\r\n      currentUserCache = null;\r\n      currentUserCacheMatchesDisk = false;\r\n    }\r\n  }, {\r\n    key: \"_setCurrentUserCache\",\r\n    value: function _setCurrentUserCache(user\r\n    /*: ParseUser*/\r\n    ) {\r\n      currentUserCache = user;\r\n    }\r\n  }]);\r\n  return ParseUser;\r\n}(_ParseObject2.default);\r\n\r\n_ParseObject2.default.registerSubclass('_User', ParseUser);\r\n\r\nvar DefaultController = {\r\n  updateUserOnDisk: function updateUserOnDisk(user) {\r\n    var path = _Storage.default.generatePath(CURRENT_USER_KEY);\r\n\r\n    var json = user.toJSON();\r\n    delete json.password;\r\n    json.className = '_User';\r\n    var userData = (0, _stringify.default)(json);\r\n\r\n    if (_CoreManager.default.get('ENCRYPTED_USER')) {\r\n      var crypto = _CoreManager.default.getCryptoController();\r\n\r\n      userData = crypto.encrypt(json, _CoreManager.default.get('ENCRYPTED_KEY'));\r\n    }\r\n\r\n    return _Storage.default.setItemAsync(path, userData).then(function () {\r\n      return user;\r\n    });\r\n  },\r\n  removeUserFromDisk: function removeUserFromDisk() {\r\n    var path = _Storage.default.generatePath(CURRENT_USER_KEY);\r\n\r\n    currentUserCacheMatchesDisk = true;\r\n    currentUserCache = null;\r\n    return _Storage.default.removeItemAsync(path);\r\n  },\r\n  setCurrentUser: function setCurrentUser(user) {\r\n    currentUserCache = user;\r\n\r\n    user._cleanupAuthData();\r\n\r\n    user._synchronizeAllAuthData();\r\n\r\n    return DefaultController.updateUserOnDisk(user);\r\n  },\r\n  currentUser: function currentUser()\r\n  /*: ?ParseUser*/\r\n  {\r\n    if (currentUserCache) {\r\n      return currentUserCache;\r\n    }\r\n\r\n    if (currentUserCacheMatchesDisk) {\r\n      return null;\r\n    }\r\n\r\n    if (_Storage.default.async()) {\r\n      throw new Error('Cannot call currentUser() when using a platform with an async ' + 'storage system. Call currentUserAsync() instead.');\r\n    }\r\n\r\n    var path = _Storage.default.generatePath(CURRENT_USER_KEY);\r\n\r\n    var userData = _Storage.default.getItem(path);\r\n\r\n    currentUserCacheMatchesDisk = true;\r\n\r\n    if (!userData) {\r\n      currentUserCache = null;\r\n      return null;\r\n    }\r\n\r\n    if (_CoreManager.default.get('ENCRYPTED_USER')) {\r\n      var crypto = _CoreManager.default.getCryptoController();\r\n\r\n      userData = crypto.decrypt(userData, _CoreManager.default.get('ENCRYPTED_KEY'));\r\n    }\r\n\r\n    userData = JSON.parse(userData);\r\n\r\n    if (!userData.className) {\r\n      userData.className = '_User';\r\n    }\r\n\r\n    if (userData._id) {\r\n      if (userData.objectId !== userData._id) {\r\n        userData.objectId = userData._id;\r\n      }\r\n\r\n      delete userData._id;\r\n    }\r\n\r\n    if (userData._sessionToken) {\r\n      userData.sessionToken = userData._sessionToken;\r\n      delete userData._sessionToken;\r\n    }\r\n\r\n    var current = _ParseObject2.default.fromJSON(userData);\r\n\r\n    currentUserCache = current;\r\n\r\n    current._synchronizeAllAuthData();\r\n\r\n    return current;\r\n  },\r\n  currentUserAsync: function currentUserAsync()\r\n  /*: Promise<?ParseUser>*/\r\n  {\r\n    if (currentUserCache) {\r\n      return _promise.default.resolve(currentUserCache);\r\n    }\r\n\r\n    if (currentUserCacheMatchesDisk) {\r\n      return _promise.default.resolve(null);\r\n    }\r\n\r\n    var path = _Storage.default.generatePath(CURRENT_USER_KEY);\r\n\r\n    return _Storage.default.getItemAsync(path).then(function (userData) {\r\n      currentUserCacheMatchesDisk = true;\r\n\r\n      if (!userData) {\r\n        currentUserCache = null;\r\n        return _promise.default.resolve(null);\r\n      }\r\n\r\n      if (_CoreManager.default.get('ENCRYPTED_USER')) {\r\n        var crypto = _CoreManager.default.getCryptoController();\r\n\r\n        userData = crypto.decrypt(userData.toString(), _CoreManager.default.get('ENCRYPTED_KEY'));\r\n      }\r\n\r\n      userData = JSON.parse(userData);\r\n\r\n      if (!userData.className) {\r\n        userData.className = '_User';\r\n      }\r\n\r\n      if (userData._id) {\r\n        if (userData.objectId !== userData._id) {\r\n          userData.objectId = userData._id;\r\n        }\r\n\r\n        delete userData._id;\r\n      }\r\n\r\n      if (userData._sessionToken) {\r\n        userData.sessionToken = userData._sessionToken;\r\n        delete userData._sessionToken;\r\n      }\r\n\r\n      var current = _ParseObject2.default.fromJSON(userData);\r\n\r\n      currentUserCache = current;\r\n\r\n      current._synchronizeAllAuthData();\r\n\r\n      return _promise.default.resolve(current);\r\n    });\r\n  },\r\n  signUp: function signUp(user\r\n  /*: ParseUser*/\r\n  , attrs\r\n  /*: AttributeMap*/\r\n  , options\r\n  /*: RequestOptions*/\r\n  )\r\n  /*: Promise<ParseUser>*/\r\n  {\r\n    var username = attrs && attrs.username || user.get('username');\r\n    var password = attrs && attrs.password || user.get('password');\r\n\r\n    if (!username || !username.length) {\r\n      return _promise.default.reject(new _ParseError.default(_ParseError.default.OTHER_CAUSE, 'Cannot sign up user with an empty username.'));\r\n    }\r\n\r\n    if (!password || !password.length) {\r\n      return _promise.default.reject(new _ParseError.default(_ParseError.default.OTHER_CAUSE, 'Cannot sign up user with an empty password.'));\r\n    }\r\n\r\n    return user.save(attrs, options).then(function () {\r\n      // Clear the password field\r\n      user._finishFetch({\r\n        password: undefined\r\n      });\r\n\r\n      if (canUseCurrentUser) {\r\n        return DefaultController.setCurrentUser(user);\r\n      }\r\n\r\n      return user;\r\n    });\r\n  },\r\n  logIn: function logIn(user\r\n  /*: ParseUser*/\r\n  , options\r\n  /*: RequestOptions*/\r\n  )\r\n  /*: Promise<ParseUser>*/\r\n  {\r\n    var RESTController = _CoreManager.default.getRESTController();\r\n\r\n    var stateController = _CoreManager.default.getObjectStateController();\r\n\r\n    var auth = {\r\n      username: user.get('username'),\r\n      password: user.get('password')\r\n    };\r\n    return RESTController.request(options.usePost ? 'POST' : 'GET', 'login', auth, options).then(function (response) {\r\n      user._migrateId(response.objectId);\r\n\r\n      user._setExisted(true);\r\n\r\n      stateController.setPendingOp(user._getStateIdentifier(), 'username', undefined);\r\n      stateController.setPendingOp(user._getStateIdentifier(), 'password', undefined);\r\n      response.password = undefined;\r\n\r\n      user._finishFetch(response);\r\n\r\n      if (!canUseCurrentUser) {\r\n        // We can't set the current user, so just return the one we logged in\r\n        return _promise.default.resolve(user);\r\n      }\r\n\r\n      return DefaultController.setCurrentUser(user);\r\n    });\r\n  },\r\n  become: function become(user\r\n  /*: ParseUser*/\r\n  , options\r\n  /*: RequestOptions*/\r\n  )\r\n  /*: Promise<ParseUser>*/\r\n  {\r\n    var RESTController = _CoreManager.default.getRESTController();\r\n\r\n    return RESTController.request('GET', 'users/me', {}, options).then(function (response) {\r\n      user._finishFetch(response);\r\n\r\n      user._setExisted(true);\r\n\r\n      return DefaultController.setCurrentUser(user);\r\n    });\r\n  },\r\n  hydrate: function hydrate(user\r\n  /*: ParseUser*/\r\n  , userJSON\r\n  /*: AttributeMap*/\r\n  )\r\n  /*: Promise<ParseUser>*/\r\n  {\r\n    user._finishFetch(userJSON);\r\n\r\n    user._setExisted(true);\r\n\r\n    if (userJSON.sessionToken && canUseCurrentUser) {\r\n      return DefaultController.setCurrentUser(user);\r\n    } else {\r\n      return _promise.default.resolve(user);\r\n    }\r\n  },\r\n  me: function me(user\r\n  /*: ParseUser*/\r\n  , options\r\n  /*: RequestOptions*/\r\n  )\r\n  /*: Promise<ParseUser>*/\r\n  {\r\n    var RESTController = _CoreManager.default.getRESTController();\r\n\r\n    return RESTController.request('GET', 'users/me', {}, options).then(function (response) {\r\n      user._finishFetch(response);\r\n\r\n      user._setExisted(true);\r\n\r\n      return user;\r\n    });\r\n  },\r\n  logOut: function logOut(options\r\n  /*: RequestOptions*/\r\n  )\r\n  /*: Promise<ParseUser>*/\r\n  {\r\n    var RESTController = _CoreManager.default.getRESTController();\r\n\r\n    if (options.sessionToken) {\r\n      return RESTController.request('POST', 'logout', {}, options);\r\n    }\r\n\r\n    return DefaultController.currentUserAsync().then(function (currentUser) {\r\n      var path = _Storage.default.generatePath(CURRENT_USER_KEY);\r\n\r\n      var promise = _Storage.default.removeItemAsync(path);\r\n\r\n      if (currentUser !== null) {\r\n        var currentSession = currentUser.getSessionToken();\r\n\r\n        if (currentSession && (0, _isRevocableSession.default)(currentSession)) {\r\n          promise = promise.then(function () {\r\n            return RESTController.request('POST', 'logout', {}, {\r\n              sessionToken: currentSession\r\n            });\r\n          });\r\n        }\r\n\r\n        currentUser._logOutWithAll();\r\n\r\n        currentUser._finishFetch({\r\n          sessionToken: undefined\r\n        });\r\n      }\r\n\r\n      currentUserCacheMatchesDisk = true;\r\n      currentUserCache = null;\r\n      return promise;\r\n    });\r\n  },\r\n  requestPasswordReset: function requestPasswordReset(email\r\n  /*: string*/\r\n  , options\r\n  /*: RequestOptions*/\r\n  ) {\r\n    var RESTController = _CoreManager.default.getRESTController();\r\n\r\n    return RESTController.request('POST', 'requestPasswordReset', {\r\n      email: email\r\n    }, options);\r\n  },\r\n  upgradeToRevocableSession: function upgradeToRevocableSession(user\r\n  /*: ParseUser*/\r\n  , options\r\n  /*: RequestOptions*/\r\n  ) {\r\n    return (0, _asyncToGenerator2.default)( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\r\n      var token, RESTController, result, session, current;\r\n      return _regeneratorRuntime().wrap(function _callee6$(_context6) {\r\n        while (1) {\r\n          switch (_context6.prev = _context6.next) {\r\n            case 0:\r\n              token = user.getSessionToken();\r\n\r\n              if (token) {\r\n                _context6.next = 3;\r\n                break;\r\n              }\r\n\r\n              return _context6.abrupt(\"return\", _promise.default.reject(new _ParseError.default(_ParseError.default.SESSION_MISSING, 'Cannot upgrade a user with no session token')));\r\n\r\n            case 3:\r\n              options.sessionToken = token;\r\n              RESTController = _CoreManager.default.getRESTController();\r\n              _context6.next = 7;\r\n              return RESTController.request('POST', 'upgradeToRevocableSession', {}, options);\r\n\r\n            case 7:\r\n              result = _context6.sent;\r\n              session = new _ParseSession.default();\r\n\r\n              session._finishFetch(result);\r\n\r\n              user._finishFetch({\r\n                sessionToken: session.getSessionToken()\r\n              });\r\n\r\n              _context6.next = 13;\r\n              return user.isCurrentAsync();\r\n\r\n            case 13:\r\n              current = _context6.sent;\r\n\r\n              if (!current) {\r\n                _context6.next = 16;\r\n                break;\r\n              }\r\n\r\n              return _context6.abrupt(\"return\", DefaultController.setCurrentUser(user));\r\n\r\n            case 16:\r\n              return _context6.abrupt(\"return\", _promise.default.resolve(user));\r\n\r\n            case 17:\r\n            case \"end\":\r\n              return _context6.stop();\r\n          }\r\n        }\r\n      }, _callee6);\r\n    }))();\r\n  },\r\n  linkWith: function linkWith(user\r\n  /*: ParseUser*/\r\n  , authData\r\n  /*: AuthData*/\r\n  , options\r\n  /*: FullOptions*/\r\n  ) {\r\n    return user.save({\r\n      authData: authData\r\n    }, options).then(function () {\r\n      if (canUseCurrentUser) {\r\n        return DefaultController.setCurrentUser(user);\r\n      }\r\n\r\n      return user;\r\n    });\r\n  },\r\n  verifyPassword: function verifyPassword(username\r\n  /*: string*/\r\n  , password\r\n  /*: string*/\r\n  , options\r\n  /*: RequestOptions*/\r\n  ) {\r\n    var RESTController = _CoreManager.default.getRESTController();\r\n\r\n    return RESTController.request('GET', 'verifyPassword', {\r\n      username: username,\r\n      password: password\r\n    }, options);\r\n  },\r\n  requestEmailVerification: function requestEmailVerification(email\r\n  /*: string*/\r\n  , options\r\n  /*: RequestOptions*/\r\n  ) {\r\n    var RESTController = _CoreManager.default.getRESTController();\r\n\r\n    return RESTController.request('POST', 'verificationEmailRequest', {\r\n      email: email\r\n    }, options);\r\n  }\r\n};\r\n\r\n_CoreManager.default.setUserController(DefaultController);\r\n\r\nvar _default = ParseUser;\r\nexports.default = _default;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}