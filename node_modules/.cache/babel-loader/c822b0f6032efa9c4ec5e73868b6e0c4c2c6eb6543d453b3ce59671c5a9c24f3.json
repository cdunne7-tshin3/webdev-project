{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime-corejs3/helpers/interopRequireWildcard\");\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/promise\"));\nvar _decode = _interopRequireDefault(require(\"./decode\"));\nvar _encode = _interopRequireDefault(require(\"./encode\"));\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\nvar _CryptoController = _interopRequireDefault(require(\"./CryptoController\"));\nvar _EventuallyQueue = _interopRequireDefault(require(\"./EventuallyQueue\"));\nvar _InstallationController = _interopRequireDefault(require(\"./InstallationController\"));\nvar ParseOp = _interopRequireWildcard(require(\"./ParseOp\"));\nvar _RESTController = _interopRequireDefault(require(\"./RESTController\"));\n/**\n * Copyright (c) 2015-present, Parse, LLC.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/**\n * Contains all Parse API classes and functions.\n *\n * @static\n * @global\n * @class\n * @hideconstructor\n */\n\nvar Parse = {\n  /**\n   * Call this method first to set up your authentication tokens for Parse.\n   *\n   * @param {string} applicationId Your Parse Application ID.\n   * @param {string} [javaScriptKey] Your Parse JavaScript Key (Not needed for parse-server)\n   * @param {string} [masterKey] Your Parse Master Key. (Node.js only!)\n   * @static\n   */\n  initialize: function (applicationId\n  /*: string*/, javaScriptKey\n  /*: string*/) {\n    if (\"browser\" === 'browser' && _CoreManager.default.get('IS_NODE') && !process.env.SERVER_RENDERING) {\n      /* eslint-disable no-console */\n      console.log(\"It looks like you're using the browser version of the SDK in a \" + \"node.js environment. You should require('parse/node') instead.\");\n      /* eslint-enable no-console */\n    }\n    Parse._initialize(applicationId, javaScriptKey);\n    _EventuallyQueue.default.poll();\n  },\n  _initialize: function (applicationId\n  /*: string*/, javaScriptKey\n  /*: string*/, masterKey\n  /*: string*/) {\n    _CoreManager.default.set('APPLICATION_ID', applicationId);\n    _CoreManager.default.set('JAVASCRIPT_KEY', javaScriptKey);\n    _CoreManager.default.set('MASTER_KEY', masterKey);\n    _CoreManager.default.set('USE_MASTER_KEY', false);\n  },\n  /**\n   * Call this method to set your AsyncStorage engine\n   * Starting Parse@1.11, the ParseSDK do not provide a React AsyncStorage as the ReactNative module\n   * is not provided at a stable path and changes over versions.\n   *\n   * @param {AsyncStorage} storage a react native async storage.\n   * @static\n   */\n  setAsyncStorage: function (storage\n  /*: any*/) {\n    _CoreManager.default.setAsyncStorage(storage);\n  },\n  /**\n   * Call this method to set your LocalDatastoreStorage engine\n   * If using React-Native use {@link Parse.setAsyncStorage Parse.setAsyncStorage()}\n   *\n   * @param {LocalDatastoreController} controller a data storage.\n   * @static\n   */\n  setLocalDatastoreController: function (controller\n  /*: any*/) {\n    _CoreManager.default.setLocalDatastoreController(controller);\n  },\n  /**\n   * Returns information regarding the current server's health\n   *\n   * @returns {Promise}\n   * @static\n   */\n  getServerHealth: function () {\n    return _CoreManager.default.getRESTController().request('GET', 'health');\n  },\n  /**\n   * @member {string} Parse.applicationId\n   * @static\n   */\n  set applicationId(value) {\n    _CoreManager.default.set('APPLICATION_ID', value);\n  },\n  get applicationId() {\n    return _CoreManager.default.get('APPLICATION_ID');\n  },\n  /**\n   * @member {string} Parse.javaScriptKey\n   * @static\n   */\n  set javaScriptKey(value) {\n    _CoreManager.default.set('JAVASCRIPT_KEY', value);\n  },\n  get javaScriptKey() {\n    return _CoreManager.default.get('JAVASCRIPT_KEY');\n  },\n  /**\n   * @member {string} Parse.masterKey\n   * @static\n   */\n  set masterKey(value) {\n    _CoreManager.default.set('MASTER_KEY', value);\n  },\n  get masterKey() {\n    return _CoreManager.default.get('MASTER_KEY');\n  },\n  /**\n   * @member {string} Parse.serverURL\n   * @static\n   */\n  set serverURL(value) {\n    _CoreManager.default.set('SERVER_URL', value);\n  },\n  get serverURL() {\n    return _CoreManager.default.get('SERVER_URL');\n  },\n  /**\n   * @member {string} Parse.serverAuthToken\n   * @static\n   */\n  set serverAuthToken(value) {\n    _CoreManager.default.set('SERVER_AUTH_TOKEN', value);\n  },\n  get serverAuthToken() {\n    return _CoreManager.default.get('SERVER_AUTH_TOKEN');\n  },\n  /**\n   * @member {string} Parse.serverAuthType\n   * @static\n   */\n  set serverAuthType(value) {\n    _CoreManager.default.set('SERVER_AUTH_TYPE', value);\n  },\n  get serverAuthType() {\n    return _CoreManager.default.get('SERVER_AUTH_TYPE');\n  },\n  /**\n   * @member {string} Parse.liveQueryServerURL\n   * @static\n   */\n  set liveQueryServerURL(value) {\n    _CoreManager.default.set('LIVEQUERY_SERVER_URL', value);\n  },\n  get liveQueryServerURL() {\n    return _CoreManager.default.get('LIVEQUERY_SERVER_URL');\n  },\n  /**\n   * @member {string} Parse.encryptedUser\n   * @static\n   */\n  set encryptedUser(value) {\n    _CoreManager.default.set('ENCRYPTED_USER', value);\n  },\n  get encryptedUser() {\n    return _CoreManager.default.get('ENCRYPTED_USER');\n  },\n  /**\n   * @member {string} Parse.secret\n   * @static\n   */\n  set secret(value) {\n    _CoreManager.default.set('ENCRYPTED_KEY', value);\n  },\n  get secret() {\n    return _CoreManager.default.get('ENCRYPTED_KEY');\n  },\n  /**\n   * @member {boolean} Parse.idempotency\n   * @static\n   */\n  set idempotency(value) {\n    _CoreManager.default.set('IDEMPOTENCY', value);\n  },\n  get idempotency() {\n    return _CoreManager.default.get('IDEMPOTENCY');\n  },\n  /**\n   * @member {boolean} Parse.allowCustomObjectId\n   * @static\n   */\n  set allowCustomObjectId(value) {\n    _CoreManager.default.set('ALLOW_CUSTOM_OBJECT_ID', value);\n  },\n  get allowCustomObjectId() {\n    return _CoreManager.default.get('ALLOW_CUSTOM_OBJECT_ID');\n  }\n};\nParse.ACL = require('./ParseACL').default;\nParse.Analytics = require('./Analytics');\nParse.AnonymousUtils = require('./AnonymousUtils').default;\nParse.Cloud = require('./Cloud');\nParse.CLP = require('./ParseCLP').default;\nParse.CoreManager = require('./CoreManager');\nParse.Config = require('./ParseConfig').default;\nParse.Error = require('./ParseError').default;\nParse.EventuallyQueue = _EventuallyQueue.default;\nParse.FacebookUtils = require('./FacebookUtils').default;\nParse.File = require('./ParseFile').default;\nParse.GeoPoint = require('./ParseGeoPoint').default;\nParse.Polygon = require('./ParsePolygon').default;\nParse.Installation = require('./ParseInstallation').default;\nParse.LocalDatastore = require('./LocalDatastore');\nParse.Object = require('./ParseObject').default;\nParse.Op = {\n  Set: ParseOp.SetOp,\n  Unset: ParseOp.UnsetOp,\n  Increment: ParseOp.IncrementOp,\n  Add: ParseOp.AddOp,\n  Remove: ParseOp.RemoveOp,\n  AddUnique: ParseOp.AddUniqueOp,\n  Relation: ParseOp.RelationOp\n};\nParse.Push = require('./Push');\nParse.Query = require('./ParseQuery').default;\nParse.Relation = require('./ParseRelation').default;\nParse.Role = require('./ParseRole').default;\nParse.Schema = require('./ParseSchema').default;\nParse.Session = require('./ParseSession').default;\nParse.Storage = require('./Storage');\nParse.User = require('./ParseUser').default;\nParse.LiveQuery = require('./ParseLiveQuery').default;\nParse.LiveQueryClient = require('./LiveQueryClient').default;\nParse.IndexedDB = require('./IndexedDBStorageController');\nParse._request = function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  return _CoreManager.default.getRESTController().request.apply(null, args);\n};\nParse._ajax = function () {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n  return _CoreManager.default.getRESTController().ajax.apply(null, args);\n}; // We attempt to match the signatures of the legacy versions of these methods\n\nParse._decode = function (_, value) {\n  return (0, _decode.default)(value);\n};\nParse._encode = function (value, _, disallowObjects) {\n  return (0, _encode.default)(value, disallowObjects);\n};\nParse._getInstallationId = function () {\n  return _CoreManager.default.getInstallationController().currentInstallationId();\n};\n/**\n * Enable pinning in your application.\n * This must be called before your application can use pinning.\n *\n * @static\n */\n\nParse.enableLocalDatastore = function () {\n  Parse.LocalDatastore.isEnabled = true;\n};\n/**\n * Flag that indicates whether Local Datastore is enabled.\n *\n * @static\n * @returns {boolean}\n */\n\nParse.isLocalDatastoreEnabled = function () {\n  return Parse.LocalDatastore.isEnabled;\n};\n/**\n * Gets all contents from Local Datastore\n *\n * <pre>\n * await Parse.dumpLocalDatastore();\n * </pre>\n *\n * @static\n * @returns {object}\n */\n\nParse.dumpLocalDatastore = function () {\n  if (!Parse.LocalDatastore.isEnabled) {\n    console.log('Parse.enableLocalDatastore() must be called first'); // eslint-disable-line no-console\n\n    return _promise.default.resolve({});\n  } else {\n    return Parse.LocalDatastore._getAllContents();\n  }\n};\n/**\n * Enable the current user encryption.\n * This must be called before login any user.\n *\n * @static\n */\n\nParse.enableEncryptedUser = function () {\n  Parse.encryptedUser = true;\n};\n/**\n * Flag that indicates whether Encrypted User is enabled.\n *\n * @static\n * @returns {boolean}\n */\n\nParse.isEncryptedUserEnabled = function () {\n  return Parse.encryptedUser;\n};\n_CoreManager.default.setCryptoController(_CryptoController.default);\n_CoreManager.default.setInstallationController(_InstallationController.default);\n_CoreManager.default.setRESTController(_RESTController.default);\n\n// For legacy requires, of the form `var Parse = require('parse').Parse`\nParse.Parse = Parse;\nmodule.exports = Parse;","map":{"version":3,"names":["_interopRequireWildcard","require","_interopRequireDefault","_promise","_decode","_encode","_CoreManager","_CryptoController","_EventuallyQueue","_InstallationController","ParseOp","_RESTController","Parse","initialize","applicationId","javaScriptKey","default","get","process","env","SERVER_RENDERING","console","log","_initialize","poll","masterKey","set","setAsyncStorage","storage","setLocalDatastoreController","controller","getServerHealth","getRESTController","request","value","serverURL","serverAuthToken","serverAuthType","liveQueryServerURL","encryptedUser","secret","idempotency","allowCustomObjectId","ACL","Analytics","AnonymousUtils","Cloud","CLP","CoreManager","Config","Error","EventuallyQueue","FacebookUtils","File","GeoPoint","Polygon","Installation","LocalDatastore","Object","Op","Set","SetOp","Unset","UnsetOp","Increment","IncrementOp","Add","AddOp","Remove","RemoveOp","AddUnique","AddUniqueOp","Relation","RelationOp","Push","Query","Role","Schema","Session","Storage","User","LiveQuery","LiveQueryClient","IndexedDB","_request","_len","arguments","length","args","Array","_key","apply","_ajax","_len2","_key2","ajax","_","disallowObjects","_getInstallationId","getInstallationController","currentInstallationId","enableLocalDatastore","isEnabled","isLocalDatastoreEnabled","dumpLocalDatastore","resolve","_getAllContents","enableEncryptedUser","isEncryptedUserEnabled","setCryptoController","setInstallationController","setRESTController","module","exports"],"sources":["C:/Users/chtdu/Documents/WEB DEV/git-repo/react-webpack8/node_modules/parse/lib/browser/Parse.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime-corejs3/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/promise\"));\n\nvar _decode = _interopRequireDefault(require(\"./decode\"));\n\nvar _encode = _interopRequireDefault(require(\"./encode\"));\n\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\n\nvar _CryptoController = _interopRequireDefault(require(\"./CryptoController\"));\n\nvar _EventuallyQueue = _interopRequireDefault(require(\"./EventuallyQueue\"));\n\nvar _InstallationController = _interopRequireDefault(require(\"./InstallationController\"));\n\nvar ParseOp = _interopRequireWildcard(require(\"./ParseOp\"));\n\nvar _RESTController = _interopRequireDefault(require(\"./RESTController\"));\n/**\n * Copyright (c) 2015-present, Parse, LLC.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/**\n * Contains all Parse API classes and functions.\n *\n * @static\n * @global\n * @class\n * @hideconstructor\n */\n\n\nvar Parse = {\n  /**\n   * Call this method first to set up your authentication tokens for Parse.\n   *\n   * @param {string} applicationId Your Parse Application ID.\n   * @param {string} [javaScriptKey] Your Parse JavaScript Key (Not needed for parse-server)\n   * @param {string} [masterKey] Your Parse Master Key. (Node.js only!)\n   * @static\n   */\n  initialize: function (applicationId\n  /*: string*/\n  , javaScriptKey\n  /*: string*/\n  ) {\n    if (\"browser\" === 'browser' && _CoreManager.default.get('IS_NODE') && !process.env.SERVER_RENDERING) {\n      /* eslint-disable no-console */\n      console.log(\"It looks like you're using the browser version of the SDK in a \" + \"node.js environment. You should require('parse/node') instead.\");\n      /* eslint-enable no-console */\n    }\n\n    Parse._initialize(applicationId, javaScriptKey);\n\n    _EventuallyQueue.default.poll();\n  },\n  _initialize: function (applicationId\n  /*: string*/\n  , javaScriptKey\n  /*: string*/\n  , masterKey\n  /*: string*/\n  ) {\n    _CoreManager.default.set('APPLICATION_ID', applicationId);\n\n    _CoreManager.default.set('JAVASCRIPT_KEY', javaScriptKey);\n\n    _CoreManager.default.set('MASTER_KEY', masterKey);\n\n    _CoreManager.default.set('USE_MASTER_KEY', false);\n  },\n\n  /**\n   * Call this method to set your AsyncStorage engine\n   * Starting Parse@1.11, the ParseSDK do not provide a React AsyncStorage as the ReactNative module\n   * is not provided at a stable path and changes over versions.\n   *\n   * @param {AsyncStorage} storage a react native async storage.\n   * @static\n   */\n  setAsyncStorage: function (storage\n  /*: any*/\n  ) {\n    _CoreManager.default.setAsyncStorage(storage);\n  },\n\n  /**\n   * Call this method to set your LocalDatastoreStorage engine\n   * If using React-Native use {@link Parse.setAsyncStorage Parse.setAsyncStorage()}\n   *\n   * @param {LocalDatastoreController} controller a data storage.\n   * @static\n   */\n  setLocalDatastoreController: function (controller\n  /*: any*/\n  ) {\n    _CoreManager.default.setLocalDatastoreController(controller);\n  },\n\n  /**\n   * Returns information regarding the current server's health\n   *\n   * @returns {Promise}\n   * @static\n   */\n  getServerHealth: function () {\n    return _CoreManager.default.getRESTController().request('GET', 'health');\n  },\n\n  /**\n   * @member {string} Parse.applicationId\n   * @static\n   */\n  set applicationId(value) {\n    _CoreManager.default.set('APPLICATION_ID', value);\n  },\n\n  get applicationId() {\n    return _CoreManager.default.get('APPLICATION_ID');\n  },\n\n  /**\n   * @member {string} Parse.javaScriptKey\n   * @static\n   */\n  set javaScriptKey(value) {\n    _CoreManager.default.set('JAVASCRIPT_KEY', value);\n  },\n\n  get javaScriptKey() {\n    return _CoreManager.default.get('JAVASCRIPT_KEY');\n  },\n\n  /**\n   * @member {string} Parse.masterKey\n   * @static\n   */\n  set masterKey(value) {\n    _CoreManager.default.set('MASTER_KEY', value);\n  },\n\n  get masterKey() {\n    return _CoreManager.default.get('MASTER_KEY');\n  },\n\n  /**\n   * @member {string} Parse.serverURL\n   * @static\n   */\n  set serverURL(value) {\n    _CoreManager.default.set('SERVER_URL', value);\n  },\n\n  get serverURL() {\n    return _CoreManager.default.get('SERVER_URL');\n  },\n\n  /**\n   * @member {string} Parse.serverAuthToken\n   * @static\n   */\n  set serverAuthToken(value) {\n    _CoreManager.default.set('SERVER_AUTH_TOKEN', value);\n  },\n\n  get serverAuthToken() {\n    return _CoreManager.default.get('SERVER_AUTH_TOKEN');\n  },\n\n  /**\n   * @member {string} Parse.serverAuthType\n   * @static\n   */\n  set serverAuthType(value) {\n    _CoreManager.default.set('SERVER_AUTH_TYPE', value);\n  },\n\n  get serverAuthType() {\n    return _CoreManager.default.get('SERVER_AUTH_TYPE');\n  },\n\n  /**\n   * @member {string} Parse.liveQueryServerURL\n   * @static\n   */\n  set liveQueryServerURL(value) {\n    _CoreManager.default.set('LIVEQUERY_SERVER_URL', value);\n  },\n\n  get liveQueryServerURL() {\n    return _CoreManager.default.get('LIVEQUERY_SERVER_URL');\n  },\n\n  /**\n   * @member {string} Parse.encryptedUser\n   * @static\n   */\n  set encryptedUser(value) {\n    _CoreManager.default.set('ENCRYPTED_USER', value);\n  },\n\n  get encryptedUser() {\n    return _CoreManager.default.get('ENCRYPTED_USER');\n  },\n\n  /**\n   * @member {string} Parse.secret\n   * @static\n   */\n  set secret(value) {\n    _CoreManager.default.set('ENCRYPTED_KEY', value);\n  },\n\n  get secret() {\n    return _CoreManager.default.get('ENCRYPTED_KEY');\n  },\n\n  /**\n   * @member {boolean} Parse.idempotency\n   * @static\n   */\n  set idempotency(value) {\n    _CoreManager.default.set('IDEMPOTENCY', value);\n  },\n\n  get idempotency() {\n    return _CoreManager.default.get('IDEMPOTENCY');\n  },\n\n  /**\n   * @member {boolean} Parse.allowCustomObjectId\n   * @static\n   */\n  set allowCustomObjectId(value) {\n    _CoreManager.default.set('ALLOW_CUSTOM_OBJECT_ID', value);\n  },\n\n  get allowCustomObjectId() {\n    return _CoreManager.default.get('ALLOW_CUSTOM_OBJECT_ID');\n  }\n\n};\nParse.ACL = require('./ParseACL').default;\nParse.Analytics = require('./Analytics');\nParse.AnonymousUtils = require('./AnonymousUtils').default;\nParse.Cloud = require('./Cloud');\nParse.CLP = require('./ParseCLP').default;\nParse.CoreManager = require('./CoreManager');\nParse.Config = require('./ParseConfig').default;\nParse.Error = require('./ParseError').default;\nParse.EventuallyQueue = _EventuallyQueue.default;\nParse.FacebookUtils = require('./FacebookUtils').default;\nParse.File = require('./ParseFile').default;\nParse.GeoPoint = require('./ParseGeoPoint').default;\nParse.Polygon = require('./ParsePolygon').default;\nParse.Installation = require('./ParseInstallation').default;\nParse.LocalDatastore = require('./LocalDatastore');\nParse.Object = require('./ParseObject').default;\nParse.Op = {\n  Set: ParseOp.SetOp,\n  Unset: ParseOp.UnsetOp,\n  Increment: ParseOp.IncrementOp,\n  Add: ParseOp.AddOp,\n  Remove: ParseOp.RemoveOp,\n  AddUnique: ParseOp.AddUniqueOp,\n  Relation: ParseOp.RelationOp\n};\nParse.Push = require('./Push');\nParse.Query = require('./ParseQuery').default;\nParse.Relation = require('./ParseRelation').default;\nParse.Role = require('./ParseRole').default;\nParse.Schema = require('./ParseSchema').default;\nParse.Session = require('./ParseSession').default;\nParse.Storage = require('./Storage');\nParse.User = require('./ParseUser').default;\nParse.LiveQuery = require('./ParseLiveQuery').default;\nParse.LiveQueryClient = require('./LiveQueryClient').default;\nParse.IndexedDB = require('./IndexedDBStorageController');\n\nParse._request = function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return _CoreManager.default.getRESTController().request.apply(null, args);\n};\n\nParse._ajax = function () {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  return _CoreManager.default.getRESTController().ajax.apply(null, args);\n}; // We attempt to match the signatures of the legacy versions of these methods\n\n\nParse._decode = function (_, value) {\n  return (0, _decode.default)(value);\n};\n\nParse._encode = function (value, _, disallowObjects) {\n  return (0, _encode.default)(value, disallowObjects);\n};\n\nParse._getInstallationId = function () {\n  return _CoreManager.default.getInstallationController().currentInstallationId();\n};\n/**\n * Enable pinning in your application.\n * This must be called before your application can use pinning.\n *\n * @static\n */\n\n\nParse.enableLocalDatastore = function () {\n  Parse.LocalDatastore.isEnabled = true;\n};\n/**\n * Flag that indicates whether Local Datastore is enabled.\n *\n * @static\n * @returns {boolean}\n */\n\n\nParse.isLocalDatastoreEnabled = function () {\n  return Parse.LocalDatastore.isEnabled;\n};\n/**\n * Gets all contents from Local Datastore\n *\n * <pre>\n * await Parse.dumpLocalDatastore();\n * </pre>\n *\n * @static\n * @returns {object}\n */\n\n\nParse.dumpLocalDatastore = function () {\n  if (!Parse.LocalDatastore.isEnabled) {\n    console.log('Parse.enableLocalDatastore() must be called first'); // eslint-disable-line no-console\n\n    return _promise.default.resolve({});\n  } else {\n    return Parse.LocalDatastore._getAllContents();\n  }\n};\n/**\n * Enable the current user encryption.\n * This must be called before login any user.\n *\n * @static\n */\n\n\nParse.enableEncryptedUser = function () {\n  Parse.encryptedUser = true;\n};\n/**\n * Flag that indicates whether Encrypted User is enabled.\n *\n * @static\n * @returns {boolean}\n */\n\n\nParse.isEncryptedUserEnabled = function () {\n  return Parse.encryptedUser;\n};\n\n_CoreManager.default.setCryptoController(_CryptoController.default);\n\n_CoreManager.default.setInstallationController(_InstallationController.default);\n\n_CoreManager.default.setRESTController(_RESTController.default);\n\n// For legacy requires, of the form `var Parse = require('parse').Parse`\nParse.Parse = Parse;\nmodule.exports = Parse;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}