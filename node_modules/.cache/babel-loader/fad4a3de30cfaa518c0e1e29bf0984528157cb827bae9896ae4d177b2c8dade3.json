{"ast":null,"code":"'use strict';\n\n// Should get iterator record of a set-like object before cloning this\n// https://bugs.webkit.org/show_bug.cgi?id=289430\nmodule.exports = function (METHOD_NAME) {\n  try {\n    // eslint-disable-next-line es/no-set -- needed for test\n    var baseSet = new Set();\n    var setLike = {\n      size: 0,\n      has: function () {\n        return true;\n      },\n      keys: function () {\n        // eslint-disable-next-line es/no-object-defineproperty -- needed for test\n        return Object.defineProperty({}, 'next', {\n          get: function () {\n            baseSet.clear();\n            baseSet.add(4);\n            return function () {\n              return {\n                done: true\n              };\n            };\n          }\n        });\n      }\n    };\n    var result = baseSet[METHOD_NAME](setLike);\n    return result.size === 1 && result.values().next().value === 4;\n  } catch (error) {\n    return false;\n  }\n};","map":{"version":3,"names":["module","exports","METHOD_NAME","baseSet","Set","setLike","size","has","keys","Object","defineProperty","get","clear","add","done","result","values","next","value","error"],"sources":["C:/Users/chtdu/Documents/WEB DEV/git-repo/react-webpack8/node_modules/core-js-pure/internals/set-method-get-keys-before-cloning-detection.js"],"sourcesContent":["'use strict';\r\n// Should get iterator record of a set-like object before cloning this\r\n// https://bugs.webkit.org/show_bug.cgi?id=289430\r\nmodule.exports = function (METHOD_NAME) {\r\n  try {\r\n    // eslint-disable-next-line es/no-set -- needed for test\r\n    var baseSet = new Set();\r\n    var setLike = {\r\n      size: 0,\r\n      has: function () { return true; },\r\n      keys: function () {\r\n        // eslint-disable-next-line es/no-object-defineproperty -- needed for test\r\n        return Object.defineProperty({}, 'next', {\r\n          get: function () {\r\n            baseSet.clear();\r\n            baseSet.add(4);\r\n            return function () {\r\n              return { done: true };\r\n            };\r\n          }\r\n        });\r\n      }\r\n    };\r\n    var result = baseSet[METHOD_NAME](setLike);\r\n\r\n    return result.size === 1 && result.values().next().value === 4;\r\n  } catch (error) {\r\n    return false;\r\n  }\r\n};\r\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACAA,MAAM,CAACC,OAAO,GAAG,UAAUC,WAAW,EAAE;EACtC,IAAI;IACF;IACA,IAAIC,OAAO,GAAG,IAAIC,GAAG,CAAC,CAAC;IACvB,IAAIC,OAAO,GAAG;MACZC,IAAI,EAAE,CAAC;MACPC,GAAG,EAAE,SAAAA,CAAA,EAAY;QAAE,OAAO,IAAI;MAAE,CAAC;MACjCC,IAAI,EAAE,SAAAA,CAAA,EAAY;QAChB;QACA,OAAOC,MAAM,CAACC,cAAc,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE;UACvCC,GAAG,EAAE,SAAAA,CAAA,EAAY;YACfR,OAAO,CAACS,KAAK,CAAC,CAAC;YACfT,OAAO,CAACU,GAAG,CAAC,CAAC,CAAC;YACd,OAAO,YAAY;cACjB,OAAO;gBAAEC,IAAI,EAAE;cAAK,CAAC;YACvB,CAAC;UACH;QACF,CAAC,CAAC;MACJ;IACF,CAAC;IACD,IAAIC,MAAM,GAAGZ,OAAO,CAACD,WAAW,CAAC,CAACG,OAAO,CAAC;IAE1C,OAAOU,MAAM,CAACT,IAAI,KAAK,CAAC,IAAIS,MAAM,CAACC,MAAM,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAACC,KAAK,KAAK,CAAC;EAChE,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,OAAO,KAAK;EACd;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}